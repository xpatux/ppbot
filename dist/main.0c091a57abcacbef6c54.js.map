{"version":3,"sources":["webpack:///./node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/InnerSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/iterator.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArrayLike.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/OuterSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/from.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/identity.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/refCount.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/share.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/core/fesm5/core.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/merge.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/multicast.js.pre-build-optimizer.js","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./node_modules/@angular/common/fesm5/common.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/BehaviorSubject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/EmptyError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/combineLatest.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/defer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeLast.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/last.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/catchError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/take.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/first.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/every.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/concat.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/scan.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/tap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/finalize.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/platform-browser/fesm5/platform-browser.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/fesm5/router.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/startWith.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/reduce.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/router.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/router.d.ts.Éµangular_packages_router_router_l.html","webpack:///./src/app/product-alerts/product-alerts.component.ts","webpack:///./src/app/product-alerts/product-alerts.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/product-alerts/product-alerts.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/product-alerts/product-alerts.component.html","webpack:///./src/app/products.ts","webpack:///./src/app/product-list/product-list.component.ts","webpack:///./src/app/product-list/product-list.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/product-list/product-list.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/product-list/product-list.component.html","webpack:///./src/app/product-details/product-details.component.ts","webpack:///./src/app/product-details/product-details.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/product-details/product-details.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/product-details/product-details.component.html","webpack:///./src/app/top-bar/top-bar.component.ts","webpack:///./src/app/top-bar/top-bar.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/top-bar/top-bar.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/top-bar/top-bar.component.html","webpack:///./src/app/app.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/app.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/app.component.html","webpack:///./node_modules/rxjs/_esm5/internal/observable/forkJoin.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/forms/fesm5/forms.js.pre-build-optimizer.js","webpack:///./src/app/app.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/main.ts","webpack:///./$_lazy_route_resource lazy namespace object"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","isArray","x","isObject","isFunction","UnsubscriptionErrorImpl","errors","Error","message","map","err","toString","join","name","UnsubscriptionError","Subscription_Subscription","Subscription","unsubscribe","closed","_parentOrParents","_subscriptions","_unsubscribe","empty","remove","index","flattenUnsubscriptionErrors","len","sub","add","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","splice","reduce","errs","_enable_super_gross_mode_that_will_cause_bad_things","config_config","Promise","undefined","useDeprecatedSynchronousErrorHandling","hostReportError","setTimeout","complete","rxSubscriber","Math","random","Subscriber_Subscriber","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Subscriber_SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","parent","observable_observable","observable","noop","pipe_pipe","fns","_i","pipeFromArray","input","prev","Observable_Observable","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","nextOrObserver","toSubscriber","_trySubscribe","observer","canReportError","console","warn","forEach","promiseCtor","getPromiseCtor","resolve","reject","pipe","operations","toPromise","ObjectUnsubscribedErrorImpl","ObjectUnsubscribedError","SubjectSubscription_SubjectSubscription","SubjectSubscription","subject","observers","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","thrownError","Subject_AnonymousSubject","copy","slice","asObservable","AnonymousSubject","isScheduler","schedule","InnerSubscriber_InnerSubscriber","InnerSubscriber","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","subscribeToArray","array","getSymbolIterator","iterator_iterator","isArrayLike","isPromise","then","subscribeTo","result","obj","obs","TypeError","promise","iterable","item","return","subscribeToResult","outerSubscriber","OuterSubscriber_OuterSubscriber","OuterSubscriber","innerValue","innerIndex","innerSub","project","thisArg","MapOperator","map_MapSubscriber","MapSubscriber","count","scheduleArray","scheduler","from","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","scheduled","mergeMap","resultSelector","concurrent","Number","POSITIVE_INFINITY","a","ii","MergeMapOperator","mergeMap_MergeMapSubscriber","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","innerSubscriber","shift","identity","mergeAll","fromArray","refCount","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connection","connect","RefCountSubscriber","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableObservable_ConnectableSubscriber","connectableObservableDescriptor","writable","ConnectableSubscriber","shareSubjectFactory","PARAMETERS","PROP_METADATA","makeMetadataCtor","props","args","values","propName","makeParamDecorator","parentClass","metaCtor","ParamDecoratorFactory","_a","annotationInstance","ParamDecorator","annotation","cls","unusedKey","parameters","ngMetadataName","annotationCls","makePropDecorator","additionalProcessing","PropDecoratorFactory","decoratorInstance","meta","unshift","Inject","token","Optional","Self","SkipSelf","InjectFlags","getClosureSafeProperty","objWithPropertyToExtract","ÉµÉµdefineInjectable","opts","providedIn","factory","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","overriddenName","res","newLineIndex","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","_injectImplementation","__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","InjectionToken","_desc","options","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ÉµÉµinject","flags","Default","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","formatError","text","charAt","substr","parts","JSON","replace","NgModuleRef","core_NgModuleFactory","deepForEach","addToArray","arr","removeFromArray","pop","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_ELEMENT_ID","getNgModuleDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isComponentDef","template","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","executePreOrderHooks","currentView","tView","checkNoChangesMode","currentNodeIndex","executeHooks","preOrderHooks","preOrderCheckHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","callHooks","isInitHook","hook","directive","previousOrParentTNode","isParent","core_lView","_stateStorage","Map","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByTNode","tNode","lView","getNativeByTNodeOrNull","readPatchedLView","readPatchedData","resetPreOrderHookFlags","getLView","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","enterView","newView","hostTNode","oldView","leaveView","safeToRunHooks","viewHooks","viewCheckHooks","bindingStartIndex","getSelectedIndex","_currentNamespace","namespaceHTMLInternal","stringifyForError","renderStringify","defaultScheduler","requestAnimationFrame","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentInjectorIndex","parentLocation","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","insertBloom","footer","getInjectorIndex","hostView","injectorIndex","getParentInjectorLocation","getOrCreateInjectable","bloomHash","charCodeAt","tokenId","bloomHashBitOrFactory","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","Host","shouldSearchParent","bloomHasToken","data","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","locateDirectiveOrProvider","isComponent","getNodeInjectable","tData","lData","getPrototypeOf","previousIncludeViewProviders","injectorView","b6","b5","isFirstHostTNode","_tNode","_lView","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","DOMParser","isDOMParserAvailable","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_b","split","_c","e_1_1","core_merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","element","srcset","tagName","nodeName","toLowerCase","elAttr","lower","trim","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","getTemplateContent","isTemplateElement","content","SecurityContext","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attachPatchData","throwMixedMultiProviderError","NO_CHANGE","refreshDescendantViews","creationMode","firstTemplatePass","dynamicViewData","renderEmbeddedTemplate","refreshDynamicEmbeddedViews","refreshContentQueries","contentHooks","contentCheckHooks","viewData","selectedIndex","expandoInstructions","bindingRootIndex","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","setHostBindings","staticContentQueries","staticViewQueries","executeViewQueryFn","hostLView","components","componentRefresh","refreshChildComponents","contentQueries","directiveDefIdx","createLView","parentLView","host","tHostNode","rendererFactory","sanitizer","blueprint","viewToRender","_previousOrParentTNode","tickRootContext","componentOrLView","getRootView","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","end","rf","prevSelectedIndex","selectInternal","createTView","viewIndex","consts","vars","directives","pipes","viewQuery","schemas","initialViewLength","fill","createViewBlueprint","id","queries","destroyHooks","cleanup","directiveRegistry","pipeRegistry","createTNode","tParent","adjustedIndex","attrs","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","inputs","outputs","tViews","projectionNext","child","projection","styles","classes","adjustedElementIndex","slotValue","componentView","componentTView","syncViewWithBlueprint","checkView","rootContext","rootComponent","detectChangesInternal","errorHandler","detectChangesInRootView","component","hostTView","CLEAN_PROMISE","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","insertBefore","nativeInsertBefore","isHostElement","nativeParent","nativeParentNode","nativeRemoveChild","nativeRemoveNode","destroyNode","renderParent","anchor","executeActionOnView","executeActionOnContainer","getParentState","lViewOrLContainer","rootView","embeddedView","container","getLContainer","cleanUpView","executeOnDestroys","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","removeListeners","destroy","declarationContainer","projectedViews","declaredViewIndex","detachMovedView","lQueries","detachView","viewRootTNode","executeActionOnNode","childTNode","executeActionOnElementContainerOrIcuContainer","tProjectionNode","componentLView","nodeToProject","projectionTNode","projectedComponentLView","executeActionOnProjection","R3ElementRef","core_RootViewRef","RootViewRef","_view","detectChanges","checkNoChanges","checkNoChangesInRootView","enumerable","configurable","ViewRef","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","parentTNode","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","firstView","destroyViewTree","destroyLView","onDestroy","callback","cleanupFn","getCleanup","getTViewCleanup","markForCheck","parent_1","markViewDirty","reattach","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","R3Injector","additionalProviders","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","defType","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","ngModule","isDuplicate","imports","importTypesWithProviders_1","imported","_loop_1","ngModule_1","providers","defProviders","injectorType_1","ngModuleType","isTypeProvider","isValueProvider","useExisting","useFactory","deps","classRef_1","useClass","ngModuleDetail","throwInvalidProviderError","providerToFactory","providerToRecord","multi","existing","multiRecord_1","throwCyclicDependencyError","Function","paramLength","inheritedInjectableDef","getUndecoratedInjectableFactory","INJECTOR_IMPL","StaticInjector","Injector","NULL","IDENT","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","providerDeps","annotations","computeDeps","resolveProvider","multiProvider","multiProviderMixError","tryResolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","resolveToken","ANALYZE_FOR_ENTRY_COMPONENTS","_symbolIterator","core_getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","comparator","iterator1","iterator2","item1","item2","areIterablesEqual","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","core_isPromise","isObservable","createRootComponentView","createTNodeAtIndex","getOrCreateTNode","directiveDefs","pipeDefs","getOrCreateTView","onPush","bloomBit","mask","bloomAdd","diPublicInInjector","existingInjectorIndex","parentLoc","parentIndex","parentData","getOrCreateNodeInjectorForNode","numberOfDirectives","initNodeFlags","queueComponentIndexForCheck","LifecycleHooksFeature","directiveIndex","directiveDef","onChanges","onInit","doCheck","rootTView","dirIndex","afterContentInit","afterContentChecked","afterViewInit","afterViewChecked","registerPostOrderHooks","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","core_ComponentRef","core_ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","core_ComponentFactoryResolver","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","core_ComponentFactoryBoundToModule","ComponentFactoryBoundToModule","selector","ngContentSelectors","projectableNodes","rootSelectorOrNode","core_noop","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","Renderer","RendererFactory2","RendererStyleFlags2","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","copied","extend","find","f","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","msg","_addDebugContext","viewDebugError","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","createRendererType2","encapsulation","_renderCompCount$1","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","queryId","valueType","filterQueryId","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","startIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_providers","_createProviderInstance","scope","modules","moduleTransitivelyPresent","isRoot","injectable","ctor","depValues","_createClass","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","createComponentFactory","viewDefFactory","core_ComponentFactory_","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","setAttribute","core_ComponentRef_","ViewRef_","ComponentRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","core_ViewContainerRef_","ViewContainerRef_","_data","ref","templateRef","viewRef","insert","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","destroyed","viewRef_","vcElementData","dvcElementData","_projectedViews","nodeFlags","childFlags","markNodeAsProjectedTemplate","attachProjectedView","move","oldViewIndex","newViewIndex","createChangeDetectorRef","renderNodes","fs","disposables","createTemplateData","core_TemplateRef_","TemplateRef_","_parentView","createInjector$1","createRendererV1","core_RendererAdapter","RendererAdapter","delegate","selectRootElement","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","comment","createComment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listen","listenGlobal","setElementProperty","propertyName","propertyValue","setProperty","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","className","isAdd","addClass","removeClass","setElementStyle","styleName","styleValue","setStyle","removeStyle","invokeElementMethod","methodName","setText","setValue","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","provDef","initNgModule","injectFlags","lifecycles","callNgModuleLifecycle","listener","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","prop","nonMinifiedName","securityContext","suffix","outputDefs","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","ComponentFactory","componentDef","selectors","isBoundToModule","rootViewInjector","createChainedInjector","rendererToUse","namespace","elementOrSelector","defaultRenderer","hostRNode","createElementNS","rootFlags","isIsolated","test","clean","playerHandler","tElementNode","rootLView","oldLView","nodesforSlot","hostFeatures","providersResolver","directiveCount","generateExpandoInstructionBlock","directiveFactory","nodeInjectorFactory","baseResolveDirective","native","postProcessBaseDirective","instantiateRootComponent","feature","expando","previousExpandoLength","hostBindings","createRootComponent","ComponentRef$1","ElementRefToken","ElementRef_","createElementRef","ComponentRef","_rootLView","destroyCbs","LOCALE_DATA","LocaleDataIndex","u","localeEn","floor","abs","findLocaleData","locale","normalizedLocale","parentLocale","setLocaleId","localeId","COMPONENT_FACTORY_RESOLVER","core_NgModuleRef$1","NgModuleRef$1","bootstrap","_r3Injector","createInjector","NgModuleFactory","registerNgModuleType","incoming","assertSameOrNotExisting","core_EventEmitter","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","symbolIterator","_results","QueryList","dirty","symbol","proto","filter","init","some","toArray","reset","resultsTree","flatten","list","dst","last","first","notifyOnChanges","setDirty","Input","bindingPropertyName","HostBinding","hostPropertyName","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","fromCharCode","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","LOCALE_ID$1","_throwError","trace","events","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","CompilerFactory","detectWTF","wtf","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","signature","createScope","wtfLeave","returnValue","leaveScope","core_promise","scheduleMicroTask","Zone","NgZone","zone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","core_TestabilityRegistry","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","PlatformRef","inits","createPlatform","requiredToken","assertPlatform","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZoneOption","ngZone","ngZoneInjector","moduleRef","exceptionHandler","initStatus","_moduleDoBootstrap","_callAndReportToErrorHandler","bootstrapModule","compilerOptions","optionsReducer","createCompiler","compileNgModuleFactory","core_ApplicationRef","ngDoBootstrap","module","objs","ApplicationRef","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","observables","merge","subjectOrSubjectFactory","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","core_SystemJsNgModuleLoader","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","__webpack_require__","checkNotEmpty","factoryClassSuffix","modulePath","DebugEventListener","DebugNode__PRE_R3__","_debugContext","listeners","core_DebugElement_PRE_R3_","addChild","providerTokens","DebugElement__PRE_R3__","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ngI18nClosureMode","goog","LOCALE","zoneSchedulerFactory","queue","ApplicationModule","anchorDef","templateFactory","elementDef","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","name_1","isFilled","None","resolveRendererType2","parentEl","ShadowDom","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","binding","renderValue","sanitize","STYLE","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","pureArrayDef","argCount","_pureExpressionDef","propertyNames","textDef","staticText","prefix","_addInterpolationPart","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","validateNode","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","createView","initView","createViewNodes","compRenderer","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementInline","checkAndUpdateTextInline","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveInline","transform","checkAndUpdatePureExpressionInline","checkAndUpdateNodeInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","params","checkAndUpdatePureExpressionDynamic","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","createProdRootView","elInjector","createRootData","debugCreateRootView","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","debugCreateEmbeddedView","debugCreateComponentView","viewDefOverrides","debugCreateNgModuleRef","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","calcHasOverrides","moduleSet_1","applyProviderOverrides","applyProviderOverridesToNgModule","debugOverrideProvider","debugOverrideComponentView","comp","compFactory","hostViewDef","debugClearOverrides","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndex","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","_currentAction","_currentView","_currentNodeIndex","debugSetCurrentNode","debugHandleEvent","debugUpdateDirectives","nextDirectiveWithBinding","debugCheckAndUpdateNode","debugCheckNoChangesNode","debugUpdateRenderer","nextRenderNodeWithBinding","givenValues","bindingValues","attr","core_DebugContext_","DebugContext_","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","debugNode","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","createNgModuleFactory","defFactory","core_NgModuleFactory_","NgModuleFactory_","_ngModuleDefFactory","services","initServicesIfNeeded","cloneNgModuleDefinition","AppModule","AppComponent","PlatformLocation","LOCATION_INITIALIZED","LocationStrategy","APP_BASE_HREF","common_Location","Location","platformStrategy","platformLocation","_urlChangeListeners","_platformStrategy","browserBaseHref","getBaseHref","_platformLocation","_baseHref","Location_1","stripTrailingSlash","_stripIndexHtml","onPopState","ev","includeHash","normalize","getState","isCurrentPathEqualTo","normalizeQueryParams","baseHref","startsWith","_stripBaseHref","prepareExternalUrl","go","pushState","_notifyUrlChangeListeners","replaceState","forward","back","onUrlChange","onNext","onThrow","onReturn","joinWithSlash","start","slashes","endsWith","pathEndIdx","common_HashLocationStrategy","HashLocationStrategy","onHashChange","hash","internal","title","queryParams","pathname","common_PathLocationStrategy","PathLocationStrategy","href","getBaseHrefFromDOM","search","externalUrl","CURRENCIES_EN","ADP","AFN","ALL","AMD","AOA","ARS","AUD","BAM","BBD","BDT","BHD","BIF","BMD","BND","BOB","BRL","BSD","BWP","BYN","BYR","BZD","CAD","CHF","CLF","CLP","CNY","COP","CRC","CUC","CUP","CZK","DJF","DKK","DOP","EGP","ESP","EUR","FJD","FKP","GBP","GEL","GIP","GNF","GTQ","GYD","HKD","HNL","HRK","HUF","IDR","ILS","INR","IQD","IRR","ISK","ITL","JMD","JOD","JPY","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LTL","LUF","LVL","LYD","MGA","MGF","MMK","MNT","MRO","MUR","MXN","MYR","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PHP","PKR","PLN","PYG","RON","RSD","RUB","RUR","RWF","SBD","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","STN","SYP","THB","TMM","TND","TOP","TRL","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYI","UYU","UZS","VEF","VND","VUV","XAF","XCD","XOF","XPF","YER","ZAR","ZMK","ZMW","ZWD","NumberFormatStyle","Plural","NumberSymbol","getLocaleNumberSymbol","NumberSymbols","CurrencyDecimal","Decimal","CurrencyGroup","Group","DEFAULT_NB_OF_CURRENCY_DIGITS","NUMBER_FORMAT_REGEXP","MAX_DIGITS","DECIMAL_SEP","ZERO_CHAR","PATTERN_SEP","GROUP_SEP","DIGIT_CHAR","CURRENCY_CHAR","parseIntAutoRadix","parseInt","DEPRECATED_PLURAL_FN","NgLocalization","common_NgLocaleLocalization","NgLocaleLocalization","deprecatedPluralFn","getPluralCategory","PluralCase","common_getLocalePluralCase","Zero","One","Two","Few","Many","NgForOfContext","$implicit","ngForOf","even","common_NgForOf","NgForOf","_viewContainer","_template","_differs","_ngForOfDirty","_differ","_ngForOf","ngForTrackBy","_applyChanges","insertTuples","adjustedPreviousIndex","tuple","RecordViewTuple","_perViewChange","ilen","ngTemplateContextGuard","dir","ctx","NgIf","NgIfContext","_thenTemplateRef","_elseTemplateRef","_thenViewRef","_elseViewRef","condition","ngIf","_updateView","assertTemplate","property","CurrencyPipe","_locale","CurrencyPipe_1","currencyCode","display","digitsInfo","isEmpty","currency","code","format","Currencies","getLocaleCurrencies","symbolNarrow","getCurrencySymbol","pattern","minusSign","minInt","minFrac","maxFrac","posPre","posSuf","negPre","negSuf","gSize","lgSize","patternParts","positive","negative","positiveParts","lastIndexOf","integer","fraction","ch","groups","trunkLen","pos","parseNumberFormat","NumberFormats","getLocaleNumberFormat","Currency","MinusSign","digits","getNumberOfCurrencyDigits","groupSymbol","decimalSymbol","isPercent","formattedText","isZero","isFinite","parsedNumber","num","integerLen","zeros","numStr","exponent","parseNumber","fractionLen","toPercent","minFraction","maxFraction","minIntPart","minFractionPart","maxFractionPart","fractionSize","min","max","roundAt","digit","dropTrailingZeros","minLen","carry","reduceRight","roundNumber","decimals","every","Exponential","Infinity","formatNumberToLocaleString","formatCurrency","parseFloat","strToNumber","CommonModule","DOCUMENT","PLATFORM_SERVER_ID","common_ViewportScroller","ViewportScroller","BrowserViewportScroller","setOffset","getScrollPosition","supportScrollRestoration","scrollX","scrollY","scrollToPosition","position","scrollTo","scrollToAnchor","CSS","escape","elSelectedById","scrollToElement","elSelectedByName","setHistoryScrollRestoration","scrollRestoration","history_1","history","rect","getBoundingClientRect","left","pageXOffset","top","pageYOffset","of","BehaviorSubject_BehaviorSubject","BehaviorSubject","_value","getValue","EmptyErrorImpl","EmptyError","NONE","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","_tryResultSelector","empty_EMPTY","empty_empty","emptyScheduled","defer","observableFactory","concatAll","FilterOperator","filter_FilterSubscriber","FilterSubscriber","ArgumentOutOfRangeErrorImpl","ArgumentOutOfRangeError","takeLast","takeLast_TakeLastOperator","TakeLastOperator","total","takeLast_TakeLastSubscriber","TakeLastSubscriber","ring","idx","throwIfEmpty","errorFactory","defaultErrorFactory","ThrowIfEmptyOperator","throwIfEmpty_ThrowIfEmptySubscriber","ThrowIfEmptySubscriber","hasValue","defaultIfEmpty","defaultValue","DefaultIfEmptyOperator","defaultIfEmpty_DefaultIfEmptySubscriber","DefaultIfEmptySubscriber","last_last","hasDefaultValue","catchError","CatchOperator","caught","catchError_CatchSubscriber","CatchSubscriber","err2","take","take_TakeOperator","TakeOperator","take_TakeSubscriber","TakeSubscriber","EveryOperator","every_EverySubscriber","EverySubscriber","everyValueMatch","switchMap","SwitchMapOperator","switchMap_SwitchMapSubscriber","SwitchMapSubscriber","innerSubscription","scan","accumulator","seed","hasSeed","ScanOperator","scan_ScanSubscriber","ScanSubscriber","_seed","concatMap","tap","DoOperator","tap_TapSubscriber","TapSubscriber","_tapNext","_tapError","_tapComplete","FinallyOperator","finalize_FinallySubscriber","FinallySubscriber","_DOM","getDOM","urlParsingNode","platform_browser_GenericBrowserDomAdapter","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","getStyle","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","resolveAndSetHref","baseUrl","supportsDOMEvents","supportsNativeShadowDOM","createShadowRoot","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","_attrToPropMap","class","innerHtml","readonly","tabindex","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","Â","nodeContains","contains","platform_browser_BrowserDomAdapter","BrowserDomAdapter","parse","templateHtml","makeCurrent","adapter","hasProperty","getProperty","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","querySelectorAll","on","evt","addEventListener","onAndCancel","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","preventDefault","isPrevented","defaultPrevented","getInnerHTML","getOuterHTML","childNodesAsList","clearNodes","replaceChild","insertAllBefore","insertAfter","setInnerHTML","getText","textContent","getChecked","checked","setChecked","createTemplate","doc","createTextNode","createScriptTag","attrValue","createStyleElement","css","getShadowRoot","shadowRoot","getHost","clone","cloneNode","getElementsByClassName","getElementsByTagName","classList","hasClass","stylename","hasStyle","attributeMap","attrib","hasAttribute","attribute","hasAttributeNS","getAttribute","getAttributeNS","setAttributeNS","removeAttributeNS","templateAwareRoot","createHtmlDocument","bottom","right","width","height","getTitle","setTitle","newTitle","elementMatches","isElementNode","msMatchesSelector","webkitMatchesSelector","isTextNode","isCommentNode","COMMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","getGlobalEventTarget","getHistory","getLocation","baseElement","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","Element","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","cookieStr","encodeURIComponent","cookie","eqIndex","cookieValue","decodeURIComponent","parseCookieValue","setCookie","supportsState","platform_browser_BrowserPlatformLocation","BrowserPlatformLocation","_doc","_init","decorator","_history","protocol","hostname","port","newPath","TRANSITION_ID","SERVER_TRANSITION_PROVIDERS","transitionId","dom","platform_browser_BrowserGetTestability","BrowserGetTestability","getter","testabilities","didWork","decrement","didWork_","exportNgVar","COMPILED","CORE_TOKENS","inspectNativeElement","EVENT_MANAGER_PLUGINS","EventManager","plugins","_eventNameToPlugin","manager","_plugins","reverse","handler","_findPluginFor","addGlobalEventListener","getZone","plugin","plugin_1","EventManagerPlugin","SharedStylesHost","_stylesSet","addStyles","additions","onStylesAdded","getAllStyles","platform_browser_DomSharedStylesHost","DomSharedStylesHost","_hostNodes","_styleNodes","head","_addStylesToHost","styleEl","addHost","hostNode","removeHost","styleNode","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","COMPONENT_REGEX","HOST_ATTR","CONTENT_ATTR","flattenStyles","compId","decoratePreventDefault","eventHandler","platform_browser_DomRendererFactory2","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","platform_browser_DefaultDomRenderer2","Emulated","platform_browser_EmulatedEncapsulationDomRenderer2","applyToHost","platform_browser_ShadowDomRenderer","DefaultDomRenderer2","namespaceUri","DashCase","Important","removeProperty","checkNoSyntheticProp","AT_CHARCODE","nameKind","EmulatedEncapsulationDomRenderer2","contentAttr","hostAttr","ShadowDomRenderer","hostEl","attachShadow","nodeOrShadowRoot","__symbol__","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","symbolNames","stopSymbol","blackListedMap","blackListedEvents","res_1","isBlackListedEvent","globalListener","symbolName","taskDatas","taskData","copiedTasks","platform_browser_DomEventsPlugin","DomEventsPlugin","platformId","isPlatformServer","patchEvent","Event","stopImmediatePropagation","globalListenerRegistered","callbackRegistered","underlyingRemove","found","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","overrides","buildHammer","mc","Hammer","enable","platform_browser_HammerGesturesPlugin","HammerGesturesPlugin","loader","isCustomEvent","cancelRegistration_1","deregister_1","off","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","metaKey","shiftKey","platform_browser_KeyEventsPlugin","KeyEventsPlugin","KeyEventsPlugin_1","parseEventName","parsedEvent","outsideHandler","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","DomSanitizer","platform_browser_DomSanitizerImpl","DomSanitizerImpl","HTML","platform_browser_SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","_sanitizeHtml","platform_browser_SafeStyleImpl","urlMatch","outsideSingle","outsideDouble","hasBalancedQuotes","_sanitizeStyle","SCRIPT","platform_browser_SafeScriptImpl","URL","platform_browser_SafeResourceUrlImpl","platform_browser_SafeUrlImpl","RESOURCE_URL","expectedType","SafeValueImpl","getTypeName","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SafeHtmlImpl","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","platformBrowser","platform_browser_BrowserModule","BrowserModule","parentModule","BrowserModule_1","withServerTransition","RouterEvent","router_NavigationStart","NavigationStart","navigationTrigger","restoredState","router_NavigationEnd","NavigationEnd","urlAfterRedirects","router_NavigationCancel","NavigationCancel","reason","router_NavigationError","NavigationError","router_RoutesRecognized","RoutesRecognized","router_GuardsCheckStart","GuardsCheckStart","router_GuardsCheckEnd","GuardsCheckEnd","shouldActivate","router_ResolveStart","ResolveStart","router_ResolveEnd","ResolveEnd","RouteConfigLoadStart","route","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","routerEvent","ÉµEmptyOutletComponent","PRIMARY_OUTLET","ParamsAsMap","getAll","convertToParamMap","NAVIGATION_CANCELING_ERROR","navigationCancelingError","defaultUrlMatcher","segments","segmentGroup","pathMatch","hasChildren","posParams","part","segment","consumed","LoadedRouterConfig","routes","validateConfig","parentPath","router_validateNode","getFullPath","fullPath","children","loadChildren","outlet","redirectTo","matcher","currentRoute","standardizeConfig","shallowEqual","k1","k2","router_flatten","router_last","wrapIntoObservable","containsTree","containee","exact","equalQueryParams","equalSegmentGroups","equalPath","numberOfChildren","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","serializePaths","UrlSegment","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","childOutlet","UrlSerializer","DefaultUrlSerializer","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","strParams","serializeSegment","primary","children_1","encodeUriQuery","encodeUriString","encodeUriSegment","decode","decodeQuery","SEGMENT_RE","matchSegments","str","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","Tree","_root","pathFromRoot","findNode","siblings","findPath","cc","node_1","TreeNode","nodeChildrenAsMap","router_RouterState","RouterState","setRouterState","createEmptyState","urlTree","activated","ActivatedRouteSnapshot","router_RouterStateSnapshot","createEmptyStateSnapshot","emptyUrl","emptyParams","emptyData","emptyQueryParams","router_ActivatedRoute","ActivatedRoute","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","curr","_resolvedData","flattenInherited","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","RouterStateSnapshot","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","isMatrixParams","command","outlets","segmentPath","router_tree","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","toRoot","Position","processChildren","getPath","updateSegmentGroup","updateSegmentGroupChildren","currentCommandIndex","currentPathIndex","noMatch","pathIndex","commandIndex","compare","prefixedWith","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","paths","createNewSegmentChildren","router_stringify","ActivateRoutes","routeReuseStrategy","futureState","currState","forwardEvent","activate","parentContexts","futureRoot","currRoot","deactivateChildRoutes","activateChildRoutes","futureNode","currNode","contexts","futureChild","childOutletName","deactivateRoutes","childName","deactivateRouteAndItsChildren","parentContext","future","getContext","shouldDetach","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","onOutletDeactivated","store","contexts_1","deactivate","activateRoutes","getOrCreateContext","shouldAttach","stored","retrieve","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","_loadedConfig","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","resolver","activateWith","router_isFunction","isUrlTree","NoMatch","AbsoluteRedirect","absoluteRedirect","newTree","namedOutletsRedirect","router_ApplyRedirects","ApplyRedirects","configLoader","urlSerializer","allowRedirects","expandSegmentGroup","rootSegmentGroup","createUrlTree","noMatchError","rootCandidate","expandChildren","expandSegment","waitHead","waitTail","mapped","waitForMap","expandSegmentAgainstRoute","_","noLeftoversInUrl","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","router_match","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","cfg","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","isEmptyPathRedirect","containsEmptyPathRedirectsWithNamedOutlets","mergeTrivialChildren","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","createChildrenForEmptySegments","containsEmptyPathRedirects","routes_1","routes_1_1","addEmptySegmentsToChildrenIfNeeded","cs","canLoad","injectionToken","guardVal","guard","isCanLoad","runCanLoadGuard","shouldLoad","canLoadFails","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","actualSegments_1","actualSegments_1_1","CanActivate","CanDeactivate","getToken","getClosestLoadedConfig","getChildRouteGuards","futurePath","checks","canDeactivateChecks","canActivateChecks","prevChildren","shouldRun","shouldRunGuardsAndResolvers","runGuardsAndResolvers","getRouteGuards","isActivated","INITIAL_VALUE","prioritizedGuardValue","startWith","acc","isPending","innerAcc","val","fireActivationStart","fireChildActivationStart","runCanActivate","futureRSS","futureARS","canActivate","isCanActivate","runCanActivateChild","canActivateChildGuardsMapped","canActivateChild","guards","getCanActivateChild","isCanActivateChild","NoMatch$1","router_Recognizer","Recognizer","rootComponentType","relativeLinkResolution","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","names","routeWithSameOutletName","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","emptyPathMatch","getOutlet$1","containsEmptyPathMatchesWithNamedOutlets","s_1","primarySegment","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","getResolver","switchTap","nextResult","RouteReuseStrategy","DefaultRouteReuseStrategy","detachedTree","shouldReuseRoute","ROUTES","router_RouterConfigLoader","RouterConfigLoader","compiler","onLoadStartListener","onLoadEndListener","loadModuleFactory","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","router_Router","Router","rootContexts","lastSuccessfulNavigation","currentNavigation","navigationId","isNgZoneEnabled","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","onSameUrlNavigation","urlUpdateStrategy","resetConfig","currentUrlTree","rawUrlTree","browserUrlTree","triggerEvent","routerState","transitions","currentRawUrl","extractedUrl","rawUrl","extras","targetSnapshot","currentRouterState","targetRouterState","guardsResult","navigations","setupNavigations","processNavigations","eventsSubject","completed","errored","initialUrl","trigger","previousNavigation","urlTransition","serializeUrl","applyRedirects","finalUrl","serializer","recognize$1","skipLocationChange","setBrowserUrl","replaceUrl","routesRecognized","navStart","appliedUrlTree","guardsStart","currRSS","currARS","canDeactivate","isCanDeactivate","runCanDeactivate","runCanDeactivateChecks","runCanActivateChecks","checkGuards","guardsEnd","resetUrlToCurrentUrlTree","navCancel","resolveStart","key_1","resolveNode","resolvedData","runResolve","resolveEnd","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","redirecting","resetStateAndUrl","navigateByUrl","navError","ee","resetRootComponentType","getTransition","setTransition","initialNavigation","setUpLocationChangeListener","locationSubscription","parseUrl","scheduleNavigation","getCurrentNavigation","dispose","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","q","removeEmptyProps","nav","cmd","cmdIdx","outlets_1","urlPart","partIndex","computeNavigation","startingPosition","modifier","ci","dd","createPositionApplyingDoubleDots","findStartingPosition","mergedTree","navigate","validateCommands","isActive","lastNavigation","storedState","storedUrl","router_RouterLinkWithHref","RouterLinkWithHref","router","locationStrategy","updateTargetUrlAndHref","preserve","onClick","button","attrBoolValue","OutletContext","ChildrenOutletContexts","onChildOutletCreated","onChildOutletDestroyed","router_RouterOutlet","RouterOutlet","changeDetector","_activatedRoute","activateEvents","deactivateEvents","cmp","activatedRoute","childContexts","OutletInjector","PreloadingStrategy","router_PreloadAllModules","PreloadAllModules","preload","router_NoPreloading","NoPreloading","router_RouterPreloader","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","RouterScroller","viewportScroller","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","scheduleScrollEvent","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","setupRouter","rootRoute","enableTracing","routerNgProbeToken","router_RouterModule","RouterModule","RouterModule_1","forRoot","provideRoutes","provideForRootGuard","provideLocationStrategy","createRouterScroller","router_RouterInitializer","getAppInitializer","ROUTER_INITIALIZER","getBootstrapListener","forChild","scrollOffset","platformLocationStrategy","useHash","dom_1","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","RenderType_Éµangular_packages_router_router_l","View_Éµangular_packages_router_router_l_0","_l","_ck","_v","View_Éµangular_packages_router_router_l_Host_0","Éµangular_packages_router_router_lNgFactory","product_alerts_component_ProductAlertsComponent","ProductAlertsComponent","RenderType_ProductAlertsComponent","View_ProductAlertsComponent_1","en","$event","ad","View_ProductAlertsComponent_0","product","price","products","description","product_list_component_ProductListComponent","ProductListComponent","share","alert","onNotify","RenderType_ProductListComponent","View_ProductListComponent_2","View_ProductListComponent_1","routerLink","currVal_3","View_ProductListComponent_0","View_ProductListComponent_Host_0","ProductListComponentNgFactory","product_details_component_ProductDetailsComponent","ProductDetailsComponent","paramMap","RenderType_ProductDetailsComponent","View_ProductDetailsComponent_1","_co","currVal_1","nodeIdx","globalBindingIdx","unwrapValue","View_ProductDetailsComponent_0","View_ProductDetailsComponent_Host_0","ProductDetailsComponentNgFactory","TopBarComponent","RenderType_TopBarComponent","View_TopBarComponent_0","currVal_2","currVal_5","RenderType_AppComponent","View_AppComponent_0","View_AppComponent_Host_0","AppComponentNgFactory","forkJoinInternal","sources","emitted","isEmptyInputValue","EMAIL_REGEXP","forms_Validators","Validators","actual","required","requiredTrue","email","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","regexStr","regex","requiredPattern","actualValue","nullValidator","compose","validators","presentValidators","isPresent","_mergeErrors","_executeValidators","composeAsync","first_1","resultSelector_1","forkJoin","_executeAsyncValidators","toObservable","arrayOfErrors","normalizeValidator","validator","validate","normalizeAsyncValidator","RadioControlRegistry","_accessors","accessor","select","_isSameGroup","fireUncheck","controlPair","_control","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","asyncValidator","origAsyncValidator","asyncValidators","forms_AbstractControl","AbstractControl","_onCollectionChange","pristine","touched","_onDisabledChange","status","_updateOn","updateOn","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","markAsTouched","onlySelf","markAllAsTouched","_forEachChild","markAsUntouched","_pendingTouched","_updateTouched","markAsDirty","markAsPristine","_pendingDirty","_updatePristine","markAsPending","emitEvent","statusChanges","disable","skipPristineCheck","_parentMarkedDirty","_updateValue","valueChanges","_updateAncestors","changeFn","updateValueAndValidity","setParent","_setInitialStatus","enabled","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","delimiter","forms_FormGroup","controls","forms_FormArray","at","_find","getError","errorCode","_initObservables","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","_setUpdateStrategy","forms_FormControl","FormControl","_onChange","_applyFormState","_pendingValue","emitModelToViewChange","emitViewToModelChange","patchValue","_pendingChange","disabled","registerOnChange","_clearChangeFns","registerOnDisabledChange","_syncPendingControls","FormGroup","_setUpControls","registerControl","addControl","removeControl","setControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","subtreeUpdated","updated","_reduceValue","initValue","FormArray","_registerControl","removeAt","NG_MODEL_WITH_FORM_CONTROL_WARNING","ÉµInternalFormsSharedModule","FormBuilder","controlsConfig","_reduceControls","isAbstractControlOptions","_createControl","controlConfig","ReactiveFormsModule","ReactiveFormsModule_1","withConfig","warnOnNgModelWithFormControl","AppModuleNgFactory","moduleDef","p0_0","p0_1","p0_2","p1_0","p2_0","p2_1","p2_2","p2_3","coreTokens","enableProdMode","webpackEmptyAsyncContext","req","exports"],"mappings":"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","file":"main.0c091a57abcacbef6c54.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = typeof Symbol === 'function'\n    ? /*@__PURE__*/ Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n}\nObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (!!result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\n    if (destination === void 0) {\n        destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    }\n    if (destination.closed) {\n        return undefined;\n    }\n    if (result instanceof Observable) {\n        return result.subscribe(destination);\n    }\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { scheduled } from '../scheduled/scheduled';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    else {\n        return scheduled(input, scheduler);\n    }\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */\nimport { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=scheduled.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            var observable = input[Symbol_observable]();\n            sub.add(observable.subscribe({\n                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            return input.then(function (value) {\n                sub.add(scheduler.schedule(function () {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                }));\n            }, function (err) {\n                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n            });\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function scheduleIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var iterator;\n        sub.add(function () {\n            if (iterator && typeof iterator.return === 'function') {\n                iterator.return();\n            }\n        });\n        sub.add(scheduler.schedule(function () {\n            iterator = input[Symbol_iterator]();\n            sub.add(scheduler.schedule(function () {\n                if (subscriber.closed) {\n                    return;\n                }\n                var value;\n                var done;\n                try {\n                    var result = iterator.next();\n                    value = result.value;\n                    done = result.done;\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map\n","/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\nexport { MergeMapSubscriber };\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return scheduleArray(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n","/**\n * @license Angular v8.2.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __spread, __values, __extends, __assign, __read, __decorate, __param, __metadata } from 'tslib';\nimport { Subscription, Subject, Observable, merge as merge$1 } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function TypeDecorator(cls) {\n            if (typeFn)\n                typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            if (additionalProcessing)\n                additionalProcessing(cls);\n            return cls;\n        };\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass, additionalProcessing) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n            if (additionalProcessing)\n                additionalProcessing.apply(void 0, __spread([target, name], args));\n        }\n        return PropDecorator;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0 = function (token) { return ({ token: token }); };\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Inject = makeParamDecorator('Inject', Éµ0);\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Host = makeParamDecorator('Host');\nvar Éµ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Attribute = makeParamDecorator('Attribute', Éµ1);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nvar InjectFlags;\n(function (InjectFlags) {\n    // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n    /** Check self and check parent injector if needed */\n    InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n    /**\n     * Specifies that an injector should retrieve a dependency from any injector until reaching the\n     * host element of the current component. (Only used with Element Injector)\n     */\n    InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n    /** Don't ascend to ancestors of the node requesting injection. */\n    InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n    /** Skip the node that is requesting injection. */\n    InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n    /** Inject `defaultValue` instead if token not found. */\n    InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n})(InjectFlags || (InjectFlags = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nfunction fillProperties(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @codeGenApi\n */\nfunction ÉµÉµdefineInjectable(opts) {\n    return {\n        token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n        value: undefined,\n    };\n}\n/**\n * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n * code should now use ÉµÉµdefineInjectable instead.\n * @publicApi\n */\nvar defineInjectable = ÉµÉµdefineInjectable;\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @publicApi\n */\nfunction ÉµÉµdefineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n/**\n * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n * value.\n *\n * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n */\nfunction getInjectableDef(type) {\n    var def = type[NG_INJECTABLE_DEF];\n    // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n    // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n    // implemented by copying the properties.\n    //\n    // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n    // property was not defined directly on the type itself, and was likely inherited. The definition\n    // is only returned if the type matches the def.token.\n    return def && def.token === type ? def : null;\n}\n/**\n * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n *\n * @param type A type which may have `ngInjectableDef`, via inheritance.\n *\n * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n * `ngInjectableDef` on an ancestor only.\n */\nfunction getInheritedInjectableDef(type) {\n    if (type && type[NG_INJECTABLE_DEF]) {\n        // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n        // ngDevMode &&\n        console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n            (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n        return type[NG_INJECTABLE_DEF];\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectorDef`\n */\nfunction getInjectorDef(type) {\n    return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n}\nvar NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\nvar NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nfunction resolveForwardRef(type) {\n    var fn = type;\n    if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n        fn.__forward_ref__ === forwardRef) {\n        return fn();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __globalThis = typeof globalThis !== 'undefined' && globalThis;\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available, which is the spec-defined global variable across all\n// environments, then fallback to __global first, because in Node tests both __global and\n// __window may be defined and _global should be __global in that case.\nvar _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar R3ResolvedDependencyType;\n(function (R3ResolvedDependencyType) {\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n})(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getCompilerFacade() {\n    var globalNg = _global['ng'];\n    if (!globalNg || !globalNg.ÉµcompilerFacade) {\n        throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n            \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n            \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n            \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n    }\n    return globalNg.ÉµcompilerFacade;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parameterized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        this.ngInjectableDef = undefined;\n        if (typeof options == 'number') {\n            // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n            // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n            // We are using it to assign `-1` which is used to identify `Injector`.\n            this.__NG_ELEMENT_ID__ = options;\n        }\n        else if (options !== undefined) {\n            this.ngInjectableDef = ÉµÉµdefineInjectable({\n                token: this,\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nvar INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n);\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar SOURCE = '__source';\nvar Éµ0$1 = getClosureSafeProperty;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: Éµ0$1 });\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nvar _injectImplementation;\n/**\n * Sets the current inject implementation.\n */\nfunction setInjectImplementation(impl) {\n    var previous = _injectImplementation;\n    _injectImplementation = impl;\n    return previous;\n}\nfunction injectInjectorOnly(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        return injectRootLimpMode(token, undefined, flags);\n    }\n    else {\n        return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n    }\n}\nfunction ÉµÉµinject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    return (_injectImplementation || injectInjectorOnly)(token, flags);\n}\n/**\n * Injects a token from the currently active injector.\n *\n * Must be used in the context of a factory function such as one defined for an\n * `InjectionToken`. Throws an error if not called from such a context.\n *\n * Within such a factory function, using this function to request injection of a dependency\n * is faster and more type-safe than providing an additional array of dependencies\n * (as has been common with `useFactory` providers).\n *\n * @param token The injection token for the dependency to be injected.\n * @param flags Optional flags that control how injection is executed.\n * The flags correspond to injection strategies that can be specified with\n * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n * @returns True if injection is successful, null otherwise.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @publicApi\n */\nvar inject = ÉµÉµinject;\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n */\nfunction injectRootLimpMode(token, notFoundValue, flags) {\n    var injectableDef = getInjectableDef(token);\n    if (injectableDef && injectableDef.providedIn == 'root') {\n        return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n            injectableDef.value;\n    }\n    if (flags & InjectFlags.Optional)\n        return null;\n    if (notFoundValue !== undefined)\n        return notFoundValue;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = resolveForwardRef(types[i]);\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = InjectFlags.Default;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                    flags |= InjectFlags.Optional;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                    flags |= InjectFlags.SkipSelf;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                    flags |= InjectFlags.Self;\n                }\n                else if (meta instanceof Inject || meta === Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(ÉµÉµinject(type, flags));\n        }\n        else {\n            args.push(ÉµÉµinject(arg));\n        }\n    }\n    return args;\n}\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (notFoundValue === THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            error.name = 'NullInjectorError';\n            throw error;\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\nfunction catchInjectorError(e, token, injectorErrorName, source) {\n    var tokenPath = e[NG_TEMP_TOKEN_PATH];\n    if (token[SOURCE]) {\n        tokenPath.unshift(token[SOURCE]);\n    }\n    e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n    e[NG_TOKEN_PATH] = tokenPath;\n    e[NG_TEMP_TOKEN_PATH] = null;\n    throw e;\n}\nfunction formatError(text, obj, injectorErrorName, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreDiEnv = {\n    'ÉµÉµdefineInjectable': ÉµÉµdefineInjectable,\n    'ÉµÉµdefineInjector': ÉµÉµdefineInjector,\n    'ÉµÉµinject': ÉµÉµinject,\n    'ÉµÉµgetFactoryOf': getFactoryOf,\n};\nfunction getFactoryOf(type) {\n    var typeAny = type;\n    var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n    if (!def || def.factory === undefined) {\n        return null;\n    }\n    return def.factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @publicApi\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @publicApi\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Equivalent to ES6 spread, add each item to an array.\n*\n* @param items The items to add\n* @param arr The array to which you want to add the items\n*/\nfunction addAllToArray(items, arr) {\n    for (var i = 0; i < items.length; i++) {\n        arr.push(items[i]);\n    }\n}\n/**\n * Flattens an array.\n */\nfunction flatten(list, dst) {\n    if (dst === undefined)\n        dst = list;\n    for (var i = 0; i < list.length; i++) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            // we need to inline it.\n            if (dst === list) {\n                // Our assumption that the list was already flat was wrong and\n                // we need to clone flat since we need to write to it.\n                dst = list.slice(0, i);\n            }\n            flatten(item, dst);\n        }\n        else if (dst !== list) {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        return arr.pop();\n    }\n    else {\n        return arr.splice(index, 1)[0];\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotSame(actual, expected, msg) {\n    if (actual === expected) {\n        throwError(msg);\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    // tslint:disable-next-line\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\nfunction assertDomNode(node) {\n    // If we're in a worker, `Node` will not be defined.\n    assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n        (typeof node === 'object' && node != null &&\n            node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n}\nfunction assertDataInRange(arr, index) {\n    var maxLen = arr ? arr.length : 0;\n    assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngDevModeResetPerfCounters() {\n    var locationString = typeof location !== 'undefined' ? location.toString() : '';\n    var newCounters = {\n        namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n        firstTemplatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n        rendererAppendChild: 0,\n        rendererInsertBefore: 0,\n        rendererCreateComment: 0,\n        styleMap: 0,\n        styleMapCacheMiss: 0,\n        classMap: 0,\n        classMapCacheMiss: 0,\n        styleProp: 0,\n        stylePropCacheMiss: 0,\n        classProp: 0,\n        classPropCacheMiss: 0,\n        flushStyling: 0,\n        classesApplied: 0,\n        stylesApplied: 0,\n        stylingWritePersistedState: 0,\n        stylingReadPersistedState: 0,\n    };\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n    _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n    return newCounters;\n}\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * then we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n *\n * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ngDevModeResetPerfCounters();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The strategy that the default change detector uses to detect changes.\n * When set, takes effect the next time change detection is triggered.\n *\n * @publicApi\n */\nvar ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    /**\n     * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n     * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n     * Change detection can still be explicitly invoked.\n     * This strategy applies to all child directives and cannot be overridden.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * Use the default `CheckAlways` strategy, in which change detection is automatic until\n     * explicitly deactivated.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\n/**\n * Defines the possible states of the default change detector.\n * @see `ChangeDetectorRef`\n */\nvar ChangeDetectorStatus;\n(function (ChangeDetectorStatus) {\n    /**\n     * A state in which, after calling `detectChanges()`, the change detector\n     * state becomes `Checked`, and must be explicitly invoked or reactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * A state in which change detection is skipped until the change detector mode\n     * becomes `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * A state in which change detection continues automatically until explicitly\n     * deactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * A state in which a change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * Indicates that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state do not detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * Indicates that the change detector has been destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @param changeDetectionStrategy The strategy to check.\n * @returns True if the given strategy is the current default, false otherwise.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nvar ViewEncapsulation;\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using the deprecated [Shadow DOM\n     * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    /**\n     * Use Shadow DOM to encapsulate styles.\n     *\n     * For the DOM this means using modern [Shadow\n     * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation || (ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nfunction noSideEffects(fn) {\n    return '' + { toString: fn };\n}\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n/**\n * This file contains reuseable \"empty\" symbols that can be used as default return values\n * in different parts of the rendering code. Because the same symbols are returned, this\n * allows for identity checks against these values to be consistently used by the framework\n * code.\n */\nvar EMPTY_OBJ = {};\nvar EMPTY_ARRAY = [];\n// freezing the values prevents any code from accidentally inserting new values in\nif (typeof ngDevMode !== 'undefined' && ngDevMode) {\n    // These property accesses can be ignored because ngDevMode will be set to false\n    // when optimizing code and the whole if statement will be dropped.\n    // tslint:disable-next-line:no-toplevel-property-access\n    Object.freeze(EMPTY_OBJ);\n    // tslint:disable-next-line:no-toplevel-property-access\n    Object.freeze(EMPTY_ARRAY);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\nvar NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\nvar NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\nvar NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\nvar NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\nvar NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\n// TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\nvar NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _renderCompCount = 0;\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @codeGenApi\n */\nfunction ÉµÉµdefineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var typePrototype = type.prototype;\n    var declaredInputs = {};\n    var def = {\n        type: type,\n        providersResolver: null,\n        consts: componentDefinition.consts,\n        vars: componentDefinition.vars,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        ngContentSelectors: componentDefinition.ngContentSelectors,\n        hostBindings: componentDefinition.hostBindings || null,\n        contentQueries: componentDefinition.contentQueries || null,\n        declaredInputs: declaredInputs,\n        inputs: null,\n        outputs: null,\n        exportAs: componentDefinition.exportAs || null,\n        onChanges: null,\n        onInit: typePrototype.ngOnInit || null,\n        doCheck: typePrototype.ngDoCheck || null,\n        afterContentInit: typePrototype.ngAfterContentInit || null,\n        afterContentChecked: typePrototype.ngAfterContentChecked || null,\n        afterViewInit: typePrototype.ngAfterViewInit || null,\n        afterViewChecked: typePrototype.ngAfterViewChecked || null,\n        onDestroy: typePrototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n        directiveDefs: null,\n        pipeDefs: null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n        data: componentDefinition.data || {},\n        // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n        // next line. Also `None` should be 0 not 2.\n        encapsulation: componentDefinition.encapsulation || ViewEncapsulation.Emulated,\n        id: 'c',\n        styles: componentDefinition.styles || EMPTY_ARRAY,\n        _: null,\n        setInput: null,\n        schemas: componentDefinition.schemas || null,\n        tView: null,\n    };\n    def._ = noSideEffects(function () {\n        var directiveTypes = componentDefinition.directives;\n        var feature = componentDefinition.features;\n        var pipeTypes = componentDefinition.pipes;\n        def.id += _renderCompCount++;\n        def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n            def.outputs = invertObject(componentDefinition.outputs),\n            feature && feature.forEach(function (fn) { return fn(def); });\n        def.directiveDefs = directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null;\n        def.pipeDefs = pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null;\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // (unless it has already been set by the @Injectable decorator). This is mostly to\n        // support injecting components in tests. In real application code, components should\n        // be retrieved through the node injector, so this isn't a problem.\n        if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n            type[NG_INJECTABLE_DEF] =\n                ÉµÉµdefineInjectable({ token: type, factory: componentDefinition.factory });\n        }\n    });\n    return def;\n}\n/**\n * @codeGenApi\n */\nfunction ÉµÉµsetComponentScope(type, directives, pipes) {\n    var def = type.ngComponentDef;\n    def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n    def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n}\nfunction extractDirectiveDef(type) {\n    var def = getComponentDef(type) || getDirectiveDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = getPipeDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\n/**\n * @codeGenApi\n */\nfunction ÉµÉµdefineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || EMPTY_ARRAY,\n        declarations: def.declarations || EMPTY_ARRAY,\n        imports: def.imports || EMPTY_ARRAY,\n        exports: def.exports || EMPTY_ARRAY,\n        transitiveCompileScopes: null,\n        schemas: def.schemas || null,\n        id: def.id || null,\n    };\n    return res;\n}\n/**\n * Adds the module metadata that is necessary to compute the module's transitive scope to an\n * existing module definition.\n *\n * Scope metadata of modules is not used in production builds, so calls to this function can be\n * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n * to become eligible for tree-shaking as well.\n *\n * @codeGenApi\n */\nfunction ÉµÉµsetNgModuleScope(type, scope) {\n    return noSideEffects(function () {\n        var ngModuleDef = getNgModuleDef(type, true);\n        ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n        ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n        ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n    });\n}\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName2')\n *   declaredPropName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   propName1: 'propName1',\n *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * which is than translated by the minifier as:\n *\n * ```\n * {\n *   minifiedPropName1: 'propName1',\n *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * becomes: (public name => minifiedName)\n *\n * ```\n * {\n *  'propName1': 'minifiedPropName1',\n *  'publicName2': 'minifiedPropName2',\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in: (public name => declared name)\n *\n * ```\n * {\n *  'propName1': 'propName1',\n *  'publicName2': 'declaredPropName2',\n * }\n * ```\n *\n\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY_OBJ;\n    var newLookup = {};\n    for (var minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            var publicName = obj[minifiedKey];\n            var declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[publicName] = declaredName);\n            }\n        }\n    }\n    return newLookup;\n}\n/**\n * Create a base definition\n *\n * # Example\n * ```ts\n * class ShouldBeInherited {\n *   static ngBaseDef = ÉµÉµdefineBase({\n *      ...\n *   })\n * }\n * ```\n *\n * @param baseDefinition The base definition parameters\n *\n * @codeGenApi\n */\nfunction ÉµÉµdefineBase(baseDefinition) {\n    var declaredInputs = {};\n    return {\n        inputs: invertObject(baseDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(baseDefinition.outputs),\n        viewQuery: baseDefinition.viewQuery || null,\n        contentQueries: baseDefinition.contentQueries || null,\n        hostBindings: baseDefinition.hostBindings || null\n    };\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```ts\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = ÉµÉµdefineDirective({\n *     ...\n *   });\n * }\n * ```\n *\n * @codeGenApi\n */\nvar ÉµÉµdefineDirective = ÉµÉµdefineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n *\n * @codeGenApi\n */\nfunction ÉµÉµdefinePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n/**\n * The following getter methods retrieve the definition form the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n */\nfunction getComponentDef(type) {\n    return type[NG_COMPONENT_DEF] || null;\n}\nfunction getDirectiveDef(type) {\n    return type[NG_DIRECTIVE_DEF] || null;\n}\nfunction getPipeDef(type) {\n    return type[NG_PIPE_DEF] || null;\n}\nfunction getBaseDef(type) {\n    return type[NG_BASE_DEF] || null;\n}\nfunction getNgModuleDef(type, throwNotFound) {\n    var ngModuleDef = type[NG_MODULE_DEF] || null;\n    if (!ngModuleDef && throwNotFound === true) {\n        throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n    }\n    return ngModuleDef;\n}\nfunction getNgLocaleIdDef(type) {\n    return type[NG_LOCALE_ID_DEF] || null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nvar HOST = 0;\nvar TVIEW = 1;\nvar FLAGS = 2;\nvar PARENT = 3;\nvar NEXT = 4;\nvar QUERIES = 5;\nvar T_HOST = 6;\nvar BINDING_INDEX = 7;\nvar CLEANUP = 8;\nvar CONTEXT = 9;\nvar INJECTOR$1 = 10;\nvar RENDERER_FACTORY = 11;\nvar RENDERER = 12;\nvar SANITIZER = 13;\nvar CHILD_HEAD = 14;\nvar CHILD_TAIL = 15;\nvar DECLARATION_VIEW = 16;\nvar DECLARATION_LCONTAINER = 17;\nvar PREORDER_HOOK_FLAGS = 18;\n/** Size of LView's header. Necessary to adjust for it when setting slots.  */\nvar HEADER_OFFSET = 19;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Special location which allows easy identification of type. If we have an array which was\n * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n * `LContainer`.\n */\nvar TYPE = 1;\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nvar ACTIVE_INDEX = 2;\n// PARENT and NEXT are indices 3 and 4\n// As we already have these constants in LView, we don't need to re-create them.\nvar MOVED_VIEWS = 5;\n// T_HOST is index 6\n// We already have this constants in LView, we don't need to re-create it.\nvar NATIVE = 7;\nvar VIEW_REFS = 8;\n/**\n * Size of LContainer's header. Represents the index after which all views in the\n * container will be inserted. We need to keep a record of current views so we know\n * which views are already in the DOM (and don't need to be re-added) and so we can\n * remove views from the DOM when they are no longer required.\n */\nvar CONTAINER_HEADER_OFFSET = 9;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* True if `value` is `LView`.\n* @param value wrapped value of `RNode`, `LView`, `LContainer`\n*/\nfunction isLView(value) {\n    return Array.isArray(value) && typeof value[TYPE] === 'object';\n}\n/**\n * True if `value` is `LContainer`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nfunction isLContainer(value) {\n    return Array.isArray(value) && value[TYPE] === true;\n}\nfunction isContentQueryHost(tNode) {\n    return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n}\nfunction isComponentDef(def) {\n    return def.template !== null;\n}\nfunction isRootView(target) {\n    return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertTNodeForLView(tNode, lView) {\n    tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!getComponentDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction assertNgModuleType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n    if (!getNgModuleDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction assertPreviousIsParent(isParent) {\n    assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n}\nfunction assertHasParent(tNode) {\n    assertDefined(tNode, 'previousOrParentTNode should exist!');\n    assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n}\nfunction assertLContainerOrUndefined(value) {\n    value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n}\nfunction assertLContainer(value) {\n    assertDefined(value, 'LContainer must be defined');\n    assertEqual(isLContainer(value), true, 'Expecting LContainer');\n}\nfunction assertLViewOrUndefined(value) {\n    value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n}\nfunction assertLView(value) {\n    assertDefined(value, 'LView must be defined');\n    assertEqual(isLView(value), true, 'Expecting LView');\n}\nfunction assertFirstTemplatePass(tView, errMessage) {\n    assertEqual(tView.firstTemplatePass, true, errMessage);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TNODE = 8;\nvar PARENT_INJECTOR = 8;\nvar INJECTOR_BLOOM_PARENT_SIZE = 9;\nvar NO_PARENT_INJECTOR = -1;\n/**\n * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n * `TView.data`. This allows us to store information about the current node's tokens (which\n * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n * shared, so they live in `LView`).\n *\n * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n * determines whether a directive is available on the associated node or not. This prevents us\n * from searching the directives array at this level unless it's probable the directive is in it.\n *\n * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n *\n * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n * will differ based on where it is flattened into the main array, so it's not possible to know\n * the indices ahead of time and save their types here. The interfaces are still included here\n * for documentation purposes.\n *\n * export interface LInjector extends Array<any> {\n *\n *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Cumulative bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Cumulative bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Cumulative bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Cumulative bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Cumulative bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Cumulative bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Cumulative bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // We need to store a reference to the injector's parent so DI can keep looking up\n *    // the injector tree until it finds the dependency it's looking for.\n *    [PARENT_INJECTOR]: number;\n * }\n *\n * export interface TInjector extends Array<any> {\n *\n *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Shared node bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Shared node bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Shared node bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Shared node bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Shared node bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Shared node bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Shared node bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // Necessary to find directive indices for a particular node.\n *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n *  }\n */\n/**\n* Factory for creating instances of injectors in the NodeInjector.\n*\n* This factory is complicated by the fact that it can resolve `multi` factories as well.\n*\n* NOTE: Some of the fields are optional which means that this class has two hidden classes.\n* - One without `multi` support (most common)\n* - One with `multi` values, (rare).\n*\n* Since VMs can cache up to 4 inline hidden classes this is OK.\n*\n* - Single factory: Only `resolving` and `factory` is defined.\n* - `providers` factory: `componentProviders` is a number and `index = -1`.\n* - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n*/\nvar NodeInjectorFactory = /** @class */ (function () {\n    function NodeInjectorFactory(\n    /**\n     * Factory to invoke in order to create a new instance.\n     */\n    factory, \n    /**\n     * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n     */\n    isViewProvider, injectImplementation) {\n        this.factory = factory;\n        /**\n         * Marker set to true during factory invocation to see if we get into recursive loop.\n         * Recursive loop causes an error to be displayed.\n         */\n        this.resolving = false;\n        this.canSeeViewProviders = isViewProvider;\n        this.injectImpl = injectImplementation;\n    }\n    return NodeInjectorFactory;\n}());\nfunction isFactory(obj) {\n    // See: https://jsperf.com/instanceof-vs-getprototypeof\n    return obj !== null && typeof obj == 'object' &&\n        Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(tNode, type) {\n    assertDefined(tNode, 'should be called with a TNode');\n    assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(tNode) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(tNode, 'should be called with a TNode');\n    var found = types.some(function (type) { return tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    if (type == 4 /* ElementContainer */)\n        return 'ElementContainer';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n *\n * Must be run *only* on the first template pass.\n *\n * Sets up the pre-order hooks on the provided `tView`,\n * see {@link HookData} for details about the data structure.\n *\n * @param directiveIndex The index of the directive in LView\n * @param directiveDef The definition containing the hooks to setup in tView\n * @param tView The current TView\n * @param nodeIndex The index of the node to which the directive is attached\n * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n * current process, used to know if the node index has to be added to the array. If it is -1,\n * the node index is never added.\n * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n */\nfunction registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n    if (initialPreOrderHooksLength >= 0 &&\n        (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n        (onChanges || onInit || doCheck)) {\n        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n    }\n    if (initialPreOrderCheckHooksLength >= 0 &&\n        (!tView.preOrderCheckHooks ||\n            initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n        (onChanges || doCheck)) {\n        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n    }\n    if (onChanges) {\n        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n    }\n    if (onInit) {\n        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n    }\n    if (doCheck) {\n        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n    }\n}\n/**\n *\n * Loops through the directives on the provided `tNode` and queues hooks to be\n * run that are not initialization hooks.\n *\n * Should be executed during `elementEnd()` and similar to\n * preserve hook execution order. Content, view, and destroy hooks for projected\n * components and directives must be called *before* their hosts.\n *\n * Sets up the content, view, and destroy hooks on the provided `tView`,\n * see {@link HookData} for details about the data structure.\n *\n * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n * separately at `elementStart`.\n *\n * @param tView The current TView\n * @param tNode The TNode whose directives are to be searched for hooks to queue\n */\nfunction registerPostOrderHooks(tView, tNode) {\n    if (tView.firstTemplatePass) {\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n}\n/**\n * Executing hooks requires complex logic as we need to deal with 2 constraints.\n *\n * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n * once, across many change detection cycles. This must be true even if some hooks throw, or if\n * some recursively trigger a change detection cycle.\n * To solve that, it is required to track the state of the execution of these init hooks.\n * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n * and the index within that phase. They can be seen as a cursor in the following structure:\n * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n * They are are stored as flags in LView[FLAGS].\n *\n * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n * To be able to pause and resume their execution, we also need some state about the hook's array\n * that is being processed:\n * - the index of the next hook to be executed\n * - the number of init hooks already found in the processed part of the  array\n * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n */\n/**\n * Executes necessary hooks at the start of executing a template.\n *\n * Executes hooks that are to be run during the initialization of a directive such\n * as `onChanges`, `onInit`, and `doCheck`.\n *\n * @param lView The current view\n * @param tView Static data for the view containing the hooks to be executed\n * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n * @param @param currentNodeIndex 2 cases depending the the value:\n * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n * when flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nfunction executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n    if (!checkNoChangesMode) {\n        executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n    }\n}\n/**\n * Executes hooks against the given `LView` based off of whether or not\n * This is the first pass.\n *\n * @param currentView The view instance data to run the hooks against\n * @param firstPassHooks An array of hooks to run if we're in the first view pass\n * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n * @param checkNoChangesMode Whether or not we're in no changes mode.\n * @param initPhaseState the current state of the init phase\n * @param currentNodeIndex 3 cases depending the the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nfunction executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n    if (checkNoChangesMode)\n        return;\n    var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n        firstPassHooks :\n        checkHooks;\n    if (hooksToCall) {\n        callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n    }\n    // The init phase state must be always checked here as it may have been recursively updated\n    if (currentNodeIndex == null &&\n        (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n        initPhaseState !== 3 /* InitPhaseCompleted */) {\n        currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n        currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * the first LView pass\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n * @param initPhaseState the current state of the init phase\n * @param currentNodeIndex 3 cases depending the the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nfunction callHooks(currentView, arr, initPhase, currentNodeIndex) {\n    var startIndex = currentNodeIndex !== undefined ?\n        (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n        0;\n    var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n    var lastNodeIndexFound = 0;\n    for (var i = startIndex; i < arr.length; i++) {\n        var hook = arr[i + 1];\n        if (typeof hook === 'number') {\n            lastNodeIndexFound = arr[i];\n            if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                break;\n            }\n        }\n        else {\n            var isInitHook = arr[i] < 0;\n            if (isInitHook)\n                currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n            if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                callHook(currentView, initPhase, arr, i);\n                currentView[PREORDER_HOOK_FLAGS] =\n                    (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                        2;\n            }\n            i++;\n        }\n    }\n}\n/**\n * Execute one hook against the current `LView`.\n *\n * @param currentView The current view\n * @param initPhaseState the current state of the init phase\n * @param arr The array in which the hooks are found\n * @param i The current index within the hook data array\n */\nfunction callHook(currentView, initPhase, arr, i) {\n    var isInitHook = arr[i] < 0;\n    var hook = arr[i + 1];\n    var directiveIndex = isInitHook ? -arr[i] : arr[i];\n    var directive = currentView[directiveIndex];\n    if (isInitHook) {\n        var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n        // The init phase state must be always checked here as it may have been recursively\n        // updated\n        if (indexWithintInitPhase <\n            (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n            hook.call(directive);\n        }\n    }\n    else {\n        hook.call(directive);\n    }\n}\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n/**\n * --------\n *\n * // TODO(matsko): add updateMask info\n *\n * This file contains all state-based logic for styling in Angular.\n *\n * Styling in Angular is evaluated with a series of styling-specific\n * template instructions which are called one after another each time\n * change detection occurs in Angular.\n *\n * Styling makes use of various temporary, state-based variables between\n * instructions so that it can better cache and optimize its values.\n * These values are usually populated and cleared when an element is\n * exited in change detection (once all the instructions are run for\n * that element).\n *\n * There are, however, situations where the state-based values\n * need to be stored and used at a later point. This ONLY occurs when\n * there are template-level as well as host-binding-level styling\n * instructions on the same element. The example below shows exactly\n * what could be:\n *\n * ```html\n * <!-- two sources of styling: the template and the directive -->\n * <div [style.width]=\"width\" dir-that-sets-height></div>\n * ```\n *\n * If and when this situation occurs, the current styling state is\n * stored in a storage map value and then later accessed once the\n * host bindings are evaluated. Once styling for the current element\n * is over then the map entry will be cleared.\n *\n * To learn more about the algorithm see `TStylingContext`.\n *\n * --------\n */\nvar _stylingState = null;\nvar _stateStorage = new Map();\n// this value is not used outside this file and is only here\n// as a caching check for when the element changes.\nvar _stylingElement = null;\nvar STYLING_INDEX_START_VALUE = 1;\nvar BIT_MASK_START_VALUE = 0;\nfunction getStylingState(element, readFromMap) {\n    if (!_stylingElement || element !== _stylingElement) {\n        _stylingElement = element;\n        if (readFromMap) {\n            _stylingState = _stateStorage.get(element) || null;\n            ngDevMode && ngDevMode.stylingReadPersistedState++;\n        }\n        _stylingState = _stylingState || {\n            classesBitMask: BIT_MASK_START_VALUE,\n            classesIndex: STYLING_INDEX_START_VALUE,\n            stylesBitMask: BIT_MASK_START_VALUE,\n            stylesIndex: STYLING_INDEX_START_VALUE,\n        };\n    }\n    return _stylingState;\n}\nfunction resetStylingState() {\n    _stylingState = null;\n    _stylingElement = null;\n}\nfunction storeStylingState(element, state) {\n    ngDevMode && ngDevMode.stylingWritePersistedState++;\n    _stateStorage.set(element, state);\n}\nfunction deleteStylingStateFromStorage(element) {\n    _stateStorage.delete(element);\n}\nfunction resetAllStylingState() {\n    resetStylingState();\n    _stateStorage.clear();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This property will be monkey-patched on elements, components and directives\n */\nvar MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n * in same location in `LView`. This is because we don't want to pre-allocate space for it\n * because the storage is sparse. This file contains utilities for dealing with such data types.\n *\n * How do we know what is stored at a given location in `LView`.\n * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n *   - `typeof value[TYPE] === 'object'` => `LView`\n *      - This happens when we have a component at a given location\n *   - `typeof value[TYPE] === true` => `LContainer`\n *      - This happens when we have `LContainer` binding at a given location.\n *\n *\n * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n */\n/**\n * Returns `RNode`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nfunction unwrapRNode(value) {\n    while (Array.isArray(value)) {\n        value = value[HOST];\n    }\n    return value;\n}\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n */\nfunction getNativeByIndex(index, lView) {\n    return unwrapRNode(lView[index + HEADER_OFFSET]);\n}\n/**\n * Retrieve an `RNode` for a given `TNode` and `LView`.\n *\n * This function guarantees in dev mode to retrieve a non-null `RNode`.\n *\n * @param tNode\n * @param lView\n */\nfunction getNativeByTNode(tNode, lView) {\n    ngDevMode && assertTNodeForLView(tNode, lView);\n    ngDevMode && assertDataInRange(lView, tNode.index);\n    var node = unwrapRNode(lView[tNode.index]);\n    ngDevMode && assertDomNode(node);\n    return node;\n}\n/**\n * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n *\n * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n *\n * @param tNode\n * @param lView\n */\nfunction getNativeByTNodeOrNull(tNode, lView) {\n    ngDevMode && assertTNodeForLView(tNode, lView);\n    var index = tNode.index;\n    var node = index == -1 ? null : unwrapRNode(lView[index]);\n    ngDevMode && node !== null && assertDomNode(node);\n    return node;\n}\n/**\n * A helper function that returns `true` if a given `TNode` has any matching directives.\n */\nfunction hasDirectives(tNode) {\n    return tNode.directiveEnd > tNode.directiveStart;\n}\nfunction getTNode(index, view) {\n    ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n    ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n    return view[TVIEW].data[index + HEADER_OFFSET];\n}\n/** Retrieves a value from any `LView` or `TData`. */\nfunction loadInternal(view, index) {\n    ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n    return view[index + HEADER_OFFSET];\n}\nfunction getComponentViewByIndex(nodeIndex, hostView) {\n    // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n    var slotValue = hostView[nodeIndex];\n    var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n    return lView;\n}\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n */\nfunction readPatchedData(target) {\n    ngDevMode && assertDefined(target, 'Target expected');\n    return target[MONKEY_PATCH_KEY_NAME];\n}\nfunction readPatchedLView(target) {\n    var value = readPatchedData(target);\n    if (value) {\n        return Array.isArray(value) ? value : value.lView;\n    }\n    return null;\n}\n/**\n * Returns a boolean for whether the view is attached to the change detection tree.\n *\n * Note: This determines whether a view should be checked, not whether it's inserted\n * into a container. For that, you'll want `viewAttachedToContainer` below.\n */\nfunction viewAttachedToChangeDetector(view) {\n    return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n}\n/** Returns a boolean for whether the view is attached to a container. */\nfunction viewAttachedToContainer(view) {\n    return isLContainer(view[PARENT]);\n}\n/**\n * Resets the pre-order hook flags of the view.\n * @param lView the LView on which the flags are reset\n */\nfunction resetPreOrderHookFlags(lView) {\n    lView[PREORDER_HOOK_FLAGS] = 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store the element depth count. This is used to identify the root elements of the template\n * so that we can than attach `LView` to only those elements.\n */\nvar elementDepthCount;\nfunction getElementDepthCount() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return elementDepthCount;\n}\nfunction increaseElementDepthCount() {\n    elementDepthCount++;\n}\nfunction decreaseElementDepthCount() {\n    elementDepthCount--;\n}\nvar currentDirectiveDef = null;\nfunction getCurrentDirectiveDef() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentDirectiveDef;\n}\nfunction setCurrentDirectiveDef(def) {\n    currentDirectiveDef = def;\n}\n/**\n * Stores whether directives should be matched to elements.\n *\n * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n * directives on children of that element.\n *\n * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n * </div>\n * ```\n */\nvar bindingsEnabled;\nfunction getBindingsEnabled() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return bindingsEnabled;\n}\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- ÉµÉµdisableBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- ÉµÉµenableBindings() -->\n * </div>\n * ```\n *\n * @codeGenApi\n */\nfunction ÉµÉµenableBindings() {\n    bindingsEnabled = true;\n}\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- ÉµÉµdisableBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- ÉµÉµenableBindings() -->\n * </div>\n * ```\n *\n * @codeGenApi\n */\nfunction ÉµÉµdisableBindings() {\n    bindingsEnabled = false;\n}\nfunction getLView() {\n    return lView;\n}\n/**\n * Used as the starting directive id value.\n *\n * All subsequent directives are incremented from this value onwards.\n * The reason why this value is `1` instead of `0` is because the `0`\n * value is reserved for the template.\n */\nvar MIN_DIRECTIVE_ID = 1;\nvar activeDirectiveId = MIN_DIRECTIVE_ID;\n/**\n * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n */\nvar activeDirectiveSuperClassDepthPosition = 0;\n/**\n * Total count of how many directives are a part of an inheritance chain.\n *\n * When directives are sub-classed (extended) from one to another, Angular\n * needs to keep track of exactly how many were encountered so it can accurately\n * generate the next directive id (once the next directive id is visited).\n * Normally the next directive id just a single incremented value from the\n * previous one, however, if the previous directive is a part of an inheritance\n * chain (a series of sub-classed directives) then the incremented value must\n * also take into account the total amount of sub-classed values.\n *\n * Note that this value resets back to zero once the next directive is\n * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n * is called).\n */\nvar activeDirectiveSuperClassHeight = 0;\n/**\n * Sets the active directive host element and resets the directive id value\n * (when the provided elementIndex value has changed).\n *\n * @param elementIndex the element index value for the host element where\n *                     the directive/component instance lives\n */\nfunction setActiveHostElement(elementIndex) {\n    if (elementIndex === void 0) { elementIndex = null; }\n    if (_selectedIndex !== elementIndex) {\n        setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n        activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n}\n/**\n * Returns the current id value of the current directive.\n *\n * For example we have an element that has two directives on it:\n * <div dir-one dir-two></div>\n *\n * dirOne->hostBindings() (id == 1)\n * dirTwo->hostBindings() (id == 2)\n *\n * Note that this is only active when `hostBinding` functions are being processed.\n *\n * Note that directive id values are specific to an element (this means that\n * the same id value could be present on another element with a completely\n * different set of directives).\n */\nfunction getActiveDirectiveId() {\n    return activeDirectiveId;\n}\n/**\n * Increments the current directive id value.\n *\n * For example we have an element that has two directives on it:\n * <div dir-one dir-two></div>\n *\n * dirOne->hostBindings() (index = 1)\n * // increment\n * dirTwo->hostBindings() (index = 2)\n *\n * Depending on whether or not a previous directive had any inherited\n * directives present, that value will be incremented in addition\n * to the id jumping up by one.\n *\n * Note that this is only active when `hostBinding` functions are being processed.\n *\n * Note that directive id values are specific to an element (this means that\n * the same id value could be present on another element with a completely\n * different set of directives).\n */\nfunction incrementActiveDirectiveId() {\n    activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n    // because we are dealing with a new directive this\n    // means we have exited out of the inheritance chain\n    activeDirectiveSuperClassDepthPosition = 0;\n    activeDirectiveSuperClassHeight = 0;\n}\n/**\n * Set the current super class (reverse inheritance) position depth for a directive.\n *\n * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n * <div child-dir other-dir></div>\n *\n * // increment\n * parentInstance->hostBindings() (depth = 1)\n * // decrement\n * childInstance->hostBindings() (depth = 0)\n * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n *\n * Note that this is only active when `hostBinding` functions are being processed.\n */\nfunction adjustActiveDirectiveSuperClassDepthPosition(delta) {\n    activeDirectiveSuperClassDepthPosition += delta;\n    // we keep track of the height value so that when the next directive is visited\n    // then Angular knows to generate a new directive id value which has taken into\n    // account how many sub-class directives were a part of the previous directive.\n    activeDirectiveSuperClassHeight =\n        Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n}\n/**\n * Returns he current depth of the super/sub class inheritance chain.\n *\n * This will return how many inherited directive/component classes\n * exist in the current chain.\n *\n * ```typescript\n * @Directive({ selector: '[super-dir]' })\n * class SuperDir {}\n *\n * @Directive({ selector: '[sub-dir]' })\n * class SubDir extends SuperDir {}\n *\n * // if `<div sub-dir>` is used then the super class height is `1`\n * // if `<div super-dir>` is used then the super class height is `0`\n * ```\n */\nfunction getActiveDirectiveSuperClassHeight() {\n    return activeDirectiveSuperClassHeight;\n}\n/**\n * Returns the current super class (reverse inheritance) depth for a directive.\n *\n * This is designed to help instruction code distinguish different hostBindings\n * calls from each other when a directive has extended from another directive.\n * Normally using the directive id value is enough, but with the case\n * of parent/sub-class directive inheritance more information is required.\n *\n * Note that this is only active when `hostBinding` functions are being processed.\n */\nfunction getActiveDirectiveSuperClassDepth() {\n    return activeDirectiveSuperClassDepthPosition;\n}\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param viewToRestore The OpaqueViewState instance to restore.\n *\n * @codeGenApi\n */\nfunction ÉµÉµrestoreView(viewToRestore) {\n    contextLView = viewToRestore;\n}\n/** Used to set the parent property when nodes are created and track query results. */\nvar previousOrParentTNode;\nfunction getPreviousOrParentTNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentTNode;\n}\nfunction setPreviousOrParentTNode(tNode, _isParent) {\n    previousOrParentTNode = tNode;\n    isParent = _isParent;\n}\nfunction setTNodeAndViewData(tNode, view) {\n    ngDevMode && assertLViewOrUndefined(view);\n    previousOrParentTNode = tNode;\n    lView = view;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentTNode` points to a parent node.\n *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n */\nvar isParent;\nfunction getIsParent() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return isParent;\n}\nfunction setIsNotParent() {\n    isParent = false;\n}\nfunction setIsParent() {\n    isParent = true;\n}\n/** Checks whether a given view is in creation mode */\nfunction isCreationMode(view) {\n    if (view === void 0) { view = lView; }\n    return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n}\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar lView;\n/**\n * The last viewData retrieved by nextContext().\n * Allows building nextContext() and reference() calls.\n *\n * e.g. const inner = x().$implicit; const outer = x().$implicit;\n */\nvar contextLView = null;\nfunction getContextLView() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return contextLView;\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\nfunction getCheckNoChangesMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return checkNoChangesMode;\n}\nfunction setCheckNoChangesMode(mode) {\n    checkNoChangesMode = mode;\n}\n/**\n * The root index from which pure function instructions should calculate their binding\n * indices. In component views, this is TView.bindingStartIndex. In a host binding\n * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n */\nvar bindingRootIndex = -1;\n// top level variables should not be exported for performance reasons (PERF_NOTES.md)\nfunction getBindingRoot() {\n    return bindingRootIndex;\n}\nfunction setBindingRoot(value) {\n    bindingRootIndex = value;\n}\n/**\n * Current index of a View or Content Query which needs to be processed next.\n * We iterate over the list of Queries and increment current query index at every step.\n */\nvar currentQueryIndex = 0;\nfunction getCurrentQueryIndex() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueryIndex;\n}\nfunction setCurrentQueryIndex(value) {\n    currentQueryIndex = value;\n}\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, hostTNode) {\n    ngDevMode && assertLViewOrUndefined(newView);\n    var oldView = lView;\n    if (newView) {\n        var tView = newView[TVIEW];\n        bindingRootIndex = tView.bindingStartIndex;\n    }\n    previousOrParentTNode = hostTNode;\n    isParent = true;\n    lView = contextLView = newView;\n    return oldView;\n}\nfunction nextContextImpl(level) {\n    if (level === void 0) { level = 1; }\n    contextLView = walkUpViews(level, contextLView);\n    return contextLView[CONTEXT];\n}\nfunction walkUpViews(nestingLevel, currentView) {\n    while (nestingLevel > 0) {\n        ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n        currentView = currentView[DECLARATION_VIEW];\n        nestingLevel--;\n    }\n    return currentView;\n}\n/**\n * Resets the application state.\n */\nfunction resetComponentState() {\n    isParent = false;\n    previousOrParentTNode = null;\n    elementDepthCount = 0;\n    bindingsEnabled = true;\n    setCurrentStyleSanitizer(null);\n    resetAllStylingState();\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param safeToRunHooks Whether the runtime is in a state where running lifecycle hooks is valid.\n * This is not always the case (for example, the application may have crashed and `leaveView` is\n * being executed while unwinding the call stack).\n */\nfunction leaveView(newView, safeToRunHooks) {\n    var tView = lView[TVIEW];\n    if (isCreationMode(lView)) {\n        lView[FLAGS] &= ~4 /* CreationMode */;\n    }\n    else {\n        try {\n            resetPreOrderHookFlags(lView);\n            safeToRunHooks && executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n        }\n        finally {\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n        }\n    }\n    enterView(newView, null);\n}\nvar _selectedIndex = -1;\n/**\n * Gets the most recent index passed to {@link select}\n *\n * Used with {@link property} instruction (and more in the future) to identify the index in the\n * current `LView` to act on.\n */\nfunction getSelectedIndex() {\n    return _selectedIndex;\n}\n/**\n * Sets the most recent index passed to {@link select}\n *\n * Used with {@link property} instruction (and more in the future) to identify the index in the\n * current `LView` to act on.\n */\nfunction setSelectedIndex(index) {\n    _selectedIndex = index;\n    // we have now jumped to another element\n    // therefore the state is stale\n    resetStylingState();\n}\nvar _currentNamespace = null;\n/**\n * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n *\n * @codeGenApi\n */\nfunction ÉµÉµnamespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg';\n}\n/**\n * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n *\n * @codeGenApi\n */\nfunction ÉµÉµnamespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\n/**\n * Sets the namespace used to create elements to `null`, which forces element creation to use\n * `createElement` rather than `createElementNS`.\n *\n * @codeGenApi\n */\nfunction ÉµÉµnamespaceHTML() {\n    namespaceHTMLInternal();\n}\n/**\n * Sets the namespace used to create elements to `null`, which forces element creation to use\n * `createElement` rather than `createElementNS`.\n */\nfunction namespaceHTMLInternal() {\n    _currentNamespace = null;\n}\nfunction getNamespace() {\n    return _currentNamespace;\n}\nvar _currentSanitizer;\nfunction setCurrentStyleSanitizer(sanitizer) {\n    _currentSanitizer = sanitizer;\n}\nfunction getCurrentStyleSanitizer() {\n    return _currentSanitizer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns whether the values are different from a change detection stand point.\n *\n * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * Used for stringify render output in Ivy.\n * Important! This function is very performance-sensitive and we should\n * be extra careful not to introduce megamorphic reads in it.\n */\nfunction renderStringify(value) {\n    if (typeof value === 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n * Used to stringify a value so that it can be displayed in an error message.\n * Important! This function contains a megamorphic read and should only be\n * used for error messages.\n */\nfunction stringifyForError(value) {\n    if (typeof value === 'function')\n        return value.name || value.toString();\n    if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n        return value.type.name || value.type.toString();\n    }\n    return renderStringify(value);\n}\nvar Éµ0$2 = function () {\n    return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n};\nvar defaultScheduler = (Éµ0$2)();\n/**\n *\n * @codeGenApi\n */\nfunction ÉµÉµresolveWindow(element) {\n    return { name: 'window', target: element.ownerDocument.defaultView };\n}\n/**\n *\n * @codeGenApi\n */\nfunction ÉµÉµresolveDocument(element) {\n    return { name: 'document', target: element.ownerDocument };\n}\n/**\n *\n * @codeGenApi\n */\nfunction ÉµÉµresolveBody(element) {\n    return { name: 'body', target: element.ownerDocument.body };\n}\n/**\n * The special delimiter we use to separate property names, prefixes, and suffixes\n * in property binding metadata. See storeBindingMetadata().\n *\n * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n * because it is a very uncommon character that is unlikely to be part of a user's\n * property names or interpolation strings. If it is in fact used in a property\n * binding, DebugElement.properties will not return the correct value for that\n * binding. However, there should be no runtime effect for real applications.\n *\n * This character is typically rendered as a question mark inside of a diamond.\n * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n *\n */\nvar INTERPOLATION_DELIMITER = \"\\uFFFD\";\n/**\n * Determines whether or not the given string is a property metadata string.\n * See storeBindingMetadata().\n */\nfunction isPropMetadataString(str) {\n    return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n}\n/**\n * Unwrap a value which might be behind a closure (for forward declaration reasons).\n */\nfunction maybeUnwrapFn(value) {\n    if (value instanceof Function) {\n        return value();\n    }\n    else {\n        return value;\n    }\n}\n\nvar MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\nvar TEMPLATE_DIRECTIVE_INDEX = 0;\n/**\n * Creates a new instance of the `TStylingContext`.\n *\n * The `TStylingContext` is used as a manifest of all style or all class bindings on\n * an element. Because it is a T-level data-structure, it is only created once per\n * tNode for styles and for classes. This function allocates a new instance of a\n * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n */\nfunction allocTStylingContext(initialStyling) {\n    // because map-based bindings deal with a dynamic set of values, there\n    // is no way to know ahead of time whether or not sanitization is required.\n    // For this reason the configuration will always mark sanitization as active\n    // (this means that when map-based values are applied then sanitization will\n    // be checked against each property).\n    var mapBasedConfig = 1 /* SanitizationRequired */;\n    return [\n        initialStyling || [''],\n        0 /* Initial */,\n        TEMPLATE_DIRECTIVE_INDEX,\n        mapBasedConfig,\n        0,\n        MAP_BASED_ENTRY_PROP_NAME,\n    ];\n}\n/**\n * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n *\n * Styling in Angular can be applied from the template as well as multiple sources of\n * host bindings. This means that each binding function (the template function or the\n * hostBindings functions) will generate styling instructions as well as a styling\n * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n * template function are independent from one another this means that the styling apply\n * function will be called multiple times. By tracking the last directive index (which\n * is what happens in this function) the styling algorithm knows exactly when to flush\n * styling (which is when the last styling apply function is executed).\n */\nfunction updateLastDirectiveIndex(context, lastDirectiveIndex) {\n    if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n        var currentValue = context[2 /* LastDirectiveIndexPosition */];\n        if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n            // This means that a directive or two contained a host bindings function, but\n            // now the template function also contains styling. When this combination of sources\n            // comes up then we need to tell the context to store the state between updates\n            // (because host bindings evaluation happens after template binding evaluation).\n            markContextToPersistState(context);\n        }\n    }\n    else {\n        context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n    }\n}\nfunction getConfig(context) {\n    return context[1 /* ConfigPosition */];\n}\nfunction setConfig(context, value) {\n    context[1 /* ConfigPosition */] = value;\n}\nfunction getProp(context, index) {\n    return context[index + 2 /* PropOffset */];\n}\nfunction getPropConfig(context, index) {\n    return context[index + 0 /* ConfigAndGuardOffset */] &\n        1 /* Mask */;\n}\nfunction isSanitizationRequired(context, index) {\n    return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n}\nfunction getGuardMask(context, index) {\n    var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n    return configGuardValue >> 1 /* TotalBits */;\n}\nfunction setGuardMask(context, index, maskValue) {\n    var config = getPropConfig(context, index);\n    var guardMask = maskValue << 1 /* TotalBits */;\n    context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n}\nfunction getValuesCount(context, index) {\n    return context[index + 1 /* ValuesCountOffset */];\n}\nfunction getBindingValue(context, index, offset) {\n    return context[index + 3 /* BindingsStartOffset */ + offset];\n}\nfunction getDefaultValue(context, index) {\n    var valuesCount = getValuesCount(context, index);\n    return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n}\n/**\n * Temporary function which determines whether or not a context is\n * allowed to be flushed based on the provided directive index.\n */\nfunction allowStylingFlush(context, index) {\n    return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n        false;\n}\nfunction lockContext(context) {\n    setConfig(context, getConfig(context) | 1 /* Locked */);\n}\nfunction isContextLocked(context) {\n    return (getConfig(context) & 1 /* Locked */) > 0;\n}\nfunction stateIsPersisted(context) {\n    return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n}\nfunction markContextToPersistState(context) {\n    setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n}\nfunction getPropValuesStartPosition(context) {\n    return 6 /* MapBindingsBindingsStartPosition */ +\n        context[4 /* MapBindingsValuesCountPosition */];\n}\nfunction hasValueChanged(a, b) {\n    var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n    var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n    // these are special cases for String based values (which are created as artifacts\n    // when sanitization is bypassed on a particular value)\n    if (compareValueA instanceof String) {\n        compareValueA = compareValueA.toString();\n    }\n    if (compareValueB instanceof String) {\n        compareValueB = compareValueB.toString();\n    }\n    return isDifferent(compareValueA, compareValueB);\n}\n/**\n * Determines whether the provided styling value is truthy or falsy.\n */\nfunction isStylingValueDefined(value) {\n    // the reason why null is compared against is because\n    // a CSS class value that is set to `false` must be\n    // respected (otherwise it would be treated as falsy).\n    // Empty string values are because developers usually\n    // set a value to an empty string to remove it.\n    return value != null && value !== '';\n}\nfunction concatString(a, b, separator) {\n    if (separator === void 0) { separator = ' '; }\n    return a + ((b.length && a.length) ? separator : '') + b;\n}\nfunction hyphenate(value) {\n    return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n}\n/**\n * Returns an instance of `StylingMapArray`.\n *\n * This function is designed to find an instance of `StylingMapArray` in case it is stored\n * inside of an instance of `TStylingContext`. When a styling context is created it\n * will copy over an initial styling values from the tNode (which are stored as a\n * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n */\nfunction getStylingMapArray(value) {\n    return isStylingContext(value) ?\n        value[0 /* InitialStylingValuePosition */] :\n        value;\n}\nfunction isStylingContext(value) {\n    // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n    // and this is the defining value to distinguish between arrays\n    return Array.isArray(value) &&\n        value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n        typeof value[1] !== 'string';\n}\nfunction getInitialStylingValue(context) {\n    var map = getStylingMapArray(context);\n    return map && map[0 /* RawValuePosition */] || '';\n}\nfunction hasClassInput(tNode) {\n    return (tNode.flags & 8 /* hasClassInput */) !== 0;\n}\nfunction hasStyleInput(tNode) {\n    return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n}\nfunction getMapProp(map, index) {\n    return map[index + 0 /* PropOffset */];\n}\nfunction setMapValue(map, index, value) {\n    map[index + 1 /* ValueOffset */] = value;\n}\nfunction getMapValue(map, index) {\n    return map[index + 1 /* ValueOffset */];\n}\nfunction forceClassesAsString(classes) {\n    if (classes && typeof classes !== 'string') {\n        classes = Object.keys(classes).join(' ');\n    }\n    return classes || '';\n}\nfunction forceStylesAsString(styles) {\n    var str = '';\n    if (styles) {\n        var props = Object.keys(styles);\n        for (var i = 0; i < props.length; i++) {\n            var prop = props[i];\n            str = concatString(str, prop + \":\" + styles[prop], ';');\n        }\n    }\n    return str;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar Éµ0$3 = function (hostElement, rendererType) { return document; };\nvar domRendererFactory3 = {\n    createRenderer: Éµ0$3\n};\n\n/**\n * Assigns all attribute values to the provided element via the inferred renderer.\n *\n * This function accepts two forms of attribute entries:\n *\n * default: (key, value):\n *  attrs = [key1, value1, key2, value2]\n *\n * namespaced: (NAMESPACE_MARKER, uri, name, value)\n *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n *\n * The `attrs` array can contain a mix of both the default and namespaced entries.\n * The \"default\" values are set without a marker, but if the function comes across\n * a marker value then it will attempt to set a namespaced value. If the marker is\n * not of a namespaced value then the function will quit and return the index value\n * where it stopped during the iteration of the attrs array.\n *\n * See [AttributeMarker] to understand what the namespace marker value is.\n *\n * Note that this instruction does not support assigning style and class values to\n * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n * are applied to an element.\n *\n * @param native The element that the attributes will be assigned to\n * @param attrs The attribute array of values that will be assigned to the element\n * @returns the index value that was last accessed in the attributes array\n */\nfunction setUpAttributes(native, attrs) {\n    var renderer = getLView()[RENDERER];\n    var isProc = isProceduralRenderer(renderer);\n    var i = 0;\n    while (i < attrs.length) {\n        var value = attrs[i];\n        if (typeof value === 'number') {\n            // only namespaces are supported. Other value types (such as style/class\n            // entries) are not supported in this function.\n            if (value !== 0 /* NamespaceURI */) {\n                break;\n            }\n            // we just landed on the marker value ... therefore\n            // we should skip to the next entry\n            i++;\n            var namespaceURI = attrs[i++];\n            var attrName = attrs[i++];\n            var attrVal = attrs[i++];\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProc ?\n                renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                native.setAttributeNS(namespaceURI, attrName, attrVal);\n        }\n        else {\n            // attrName is string;\n            var attrName = value;\n            var attrVal = attrs[++i];\n            // Standard attributes\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (isAnimationProp(attrName)) {\n                if (isProc) {\n                    renderer.setProperty(native, attrName, attrVal);\n                }\n            }\n            else {\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n            }\n            i++;\n        }\n    }\n    // another piece of code may iterate over the same attributes array. Therefore\n    // it may be helpful to return the exact spot where the attributes array exited\n    // whether by running into an unsupported marker or if all the static values were\n    // iterated over.\n    return i;\n}\n/**\n * Test whether the given value is a marker that indicates that the following\n * attribute values in a `TAttributes` array are only the names of attributes,\n * and not name-value pairs.\n * @param marker The attribute marker to test.\n * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n */\nfunction isNameOnlyAttributeMarker(marker) {\n    return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n        marker === 6 /* I18n */;\n}\nvar ANIMATION_PROP_PREFIX = '@';\nfunction isAnimationProp(name) {\n    return name[0] === ANIMATION_PROP_PREFIX;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/// Parent Injector Utils ///////////////////////////////////////////////////////////////\nfunction hasParentInjector(parentLocation) {\n    return parentLocation !== NO_PARENT_INJECTOR;\n}\nfunction getParentInjectorIndex(parentLocation) {\n    return parentLocation & 32767 /* InjectorIndexMask */;\n}\nfunction getParentInjectorViewOffset(parentLocation) {\n    return parentLocation >> 16 /* ViewOffsetShift */;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @returns The LView instance that contains the parent injector\n */\nfunction getParentInjectorView(location, startView) {\n    var viewOffset = getParentInjectorViewOffset(location);\n    var parentView = startView;\n    // For most cases, the parent injector can be found on the host node (e.g. for component\n    // or container), but we must keep the loop here to support the rarer case of deeply nested\n    // <ng-template> tags or inline views, where the parent injector might live many views\n    // above the child injector.\n    while (viewOffset > 0) {\n        parentView = parentView[DECLARATION_VIEW];\n        viewOffset--;\n    }\n    return parentView;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n * that LContainer, which is an LView\n * @param lView the lView whose parent to get\n */\nfunction getLViewParent(lView) {\n    ngDevMode && assertLView(lView);\n    var parent = lView[PARENT];\n    return isLContainer(parent) ? parent[PARENT] : parent;\n}\n/**\n * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param componentOrLView any component or `LView`\n */\nfunction getRootView(componentOrLView) {\n    ngDevMode && assertDefined(componentOrLView, 'component');\n    var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n    while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n        lView = getLViewParent(lView);\n    }\n    ngDevMode && assertLView(lView);\n    return lView;\n}\n/**\n * Given an `LView`, find the closest declaration view which is not an embedded view.\n *\n * This method searches for the `LView` associated with the component which declared the `LView`.\n *\n * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n * it walks the declaration parents until it finds a component view (non-embedded-view.)\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentView(lView) {\n    var rootTNode = lView[T_HOST];\n    while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n        lView = lView[DECLARATION_VIEW];\n        rootTNode = lView[T_HOST];\n    }\n    ngDevMode && assertLView(lView);\n    return lView;\n}\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated. It does this by walking the parent views until it\n * gets to the root view, then getting the context off of that.\n *\n * @param viewOrComponent the `LView` or component to get the root context for.\n */\nfunction getRootContext(viewOrComponent) {\n    var rootView = getRootView(viewOrComponent);\n    ngDevMode &&\n        assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n    return rootView[CONTEXT];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines if the call to `inject` should include `viewProviders` in its resolution.\n *\n * This is set to true when we try to instantiate a component. This value is reset in\n * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n * instantiated. This is done so that if we are injecting a token which was declared outside of\n * `viewProviders` we don't accidentally pull `viewProviders` in.\n *\n * Example:\n *\n * ```\n * @Injectable()\n * class MyService {\n *   constructor(public value: String) {}\n * }\n *\n * @Component({\n *   providers: [\n *     MyService,\n *     {provide: String, value: 'providers' }\n *   ]\n *   viewProviders: [\n *     {provide: String, value: 'viewProviders'}\n *   ]\n * })\n * class MyComponent {\n *   constructor(myService: MyService, value: String) {\n *     // We expect that Component can see into `viewProviders`.\n *     expect(value).toEqual('viewProviders');\n *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n *     expect(myService.value).toEqual('providers');\n *   }\n * }\n *\n * ```\n */\nvar includeViewProviders = true;\nfunction setIncludeViewProviders(v) {\n    var oldValue = includeViewProviders;\n    includeViewProviders = v;\n    return oldValue;\n}\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\nvar BLOOM_MASK = BLOOM_SIZE - 1;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injectorIndex The index of the node injector where this token should be registered\n * @param tView The TView for the injector's bloom filters\n * @param type The directive token to register\n */\nfunction bloomAdd(injectorIndex, tView, type) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n    var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    var bloomBit = id & BLOOM_MASK;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    var b7 = bloomBit & 0x80;\n    var b6 = bloomBit & 0x40;\n    var b5 = bloomBit & 0x20;\n    var tData = tView.data;\n    if (b7) {\n        b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n            (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n    }\n    else {\n        b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n            (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n    }\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param tNode for which an injector should be retrieved / created.\n * @param hostView View where the node is stored\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(tNode, hostView) {\n    var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n    if (existingInjectorIndex !== -1) {\n        return existingInjectorIndex;\n    }\n    var tView = hostView[TVIEW];\n    if (tView.firstTemplatePass) {\n        tNode.injectorIndex = hostView.length;\n        insertBloom(tView.data, tNode); // foundation for node bloom\n        insertBloom(hostView, null); // foundation for cumulative bloom\n        insertBloom(tView.blueprint, null);\n        ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n    }\n    var parentLoc = getParentInjectorLocation(tNode, hostView);\n    var parentIndex = getParentInjectorIndex(parentLoc);\n    var parentLView = getParentInjectorView(parentLoc, hostView);\n    var injectorIndex = tNode.injectorIndex;\n    // If a parent injector can't be found, its location is set to -1.\n    // In that case, we don't need to set up a cumulative bloom\n    if (hasParentInjector(parentLoc)) {\n        var parentData = parentLView[TVIEW].data;\n        // Creates a cumulative bloom filter that merges the parent's bloom filter\n        // and its own cumulative bloom (which contains tokens for all ancestors)\n        for (var i = 0; i < 8; i++) {\n            hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n        }\n    }\n    hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n    return injectorIndex;\n}\nfunction insertBloom(arr, footer) {\n    arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\nfunction getInjectorIndex(tNode, hostView) {\n    if (tNode.injectorIndex === -1 ||\n        // If the injector index is the same as its parent's injector index, then the index has been\n        // copied down from the parent node. No injector has been created yet on this node.\n        (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n        // After the first template pass, the injector index might exist but the parent values\n        // might not have been calculated yet for this instance\n        hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n        return -1;\n    }\n    else {\n        return tNode.injectorIndex;\n    }\n}\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n *\n * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n */\nfunction getParentInjectorLocation(tNode, view) {\n    if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n        return tNode.parent.injectorIndex; // ViewOffset is 0\n    }\n    // For most cases, the parent injector index can be found on the host node (e.g. for component\n    // or container), so this loop will be skipped, but we must keep the loop here to support\n    // the rarer case of deeply nested <ng-template> tags or inline views.\n    var hostTNode = view[T_HOST];\n    var viewOffset = 1;\n    while (hostTNode && hostTNode.injectorIndex === -1) {\n        view = view[DECLARATION_VIEW];\n        hostTNode = view ? view[T_HOST] : null;\n        viewOffset++;\n    }\n    return hostTNode ?\n        hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n        -1;\n}\n/**\n * Makes a type or an injection token public to the DI system by adding it to an\n * injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param token The type or the injection token to be made public\n */\nfunction diPublicInInjector(injectorIndex, tView, token) {\n    bloomAdd(injectorIndex, tView, token);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @publicApi\n */\nfunction injectAttributeImpl(tNode, attrNameToInject) {\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    ngDevMode && assertDefined(tNode, 'expecting tNode');\n    if (attrNameToInject === 'class') {\n        return getInitialStylingValue(tNode.classes);\n    }\n    if (attrNameToInject === 'style') {\n        return getInitialStylingValue(tNode.styles);\n    }\n    var attrs = tNode.attrs;\n    if (attrs) {\n        var attrsLength = attrs.length;\n        var i = 0;\n        while (i < attrsLength) {\n            var value = attrs[i];\n            // If we hit a `Bindings` or `Template` marker then we are done.\n            if (isNameOnlyAttributeMarker(value))\n                break;\n            // Skip namespaced attributes\n            if (value === 0 /* NamespaceURI */) {\n                // we skip the next two values\n                // as namespaced attributes looks like\n                // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                // 'existValue', ...]\n                i = i + 2;\n            }\n            else if (typeof value === 'number') {\n                // Skip to the first value of the marked attribute.\n                i++;\n                while (i < attrsLength && typeof attrs[i] === 'string') {\n                    i++;\n                }\n            }\n            else if (value === attrNameToInject) {\n                return attrs[i + 1];\n            }\n            else {\n                i = i + 2;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n * filter. Negative values are reserved for special objects.\n *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nfunction getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    if (tNode) {\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            if (bloomHash === -1) {\n                // `-1` is a special value used to identify `Injector` types.\n                return new NodeInjector(tNode, lView);\n            }\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element\n            // injector tree. This is used to know if viewProviders can be accessed on the current\n            // injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            var hostTElementNode = flags & InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n            // If we should skip this injector, or if there is no injector on this node, start by\n            // searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, false)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n    }\n    if (flags & InjectFlags.Optional && notFoundValue === undefined) {\n        // This must be set or the NullInjector will throw for optional deps\n        notFoundValue = null;\n    }\n    if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\n        var moduleInjector = lView[INJECTOR$1];\n        // switch to `injectInjectorOnly` implementation for module injector, since module injector\n        // should not have access to Component/Directive DI scope (that may happen through\n        // `directiveInject` implementation)\n        var previousInjectImplementation = setInjectImplementation(undefined);\n        try {\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\n            }\n        }\n        finally {\n            setInjectImplementation(previousInjectImplementation);\n        }\n    }\n    if (flags & InjectFlags.Optional) {\n        return notFoundValue;\n    }\n    else {\n        throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n    }\n}\nvar NOT_FOUND = {};\nfunction searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n    var currentTView = lView[TVIEW];\n    var tNode = currentTView.data[injectorIndex + TNODE];\n    // First, we need to determine if view providers can be accessed by the starting element.\n    // There are two possibities\n    var canAccessViewProviders = previousTView == null ?\n        // 1) This is the first invocation `previousTView == null` which means that we are at the\n        // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n        // to look into the ViewProviders is if:\n        // - we are on a component\n        // - AND the injector set `includeViewProviders` to true (implying that the token can see\n        // ViewProviders because it is the Component or a Service which itself was declared in\n        // ViewProviders)\n        (isComponent(tNode) && includeViewProviders) :\n        // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n        // In such a case we are only allowed to look into the ViewProviders if:\n        // - We just crossed from child View to Parent View `previousTView != currentTView`\n        // - AND the parent TNode is an Element.\n        // This means that we just came from the Component's View and therefore are allowed to see\n        // into the ViewProviders.\n        (previousTView != currentTView && (tNode.type === 3 /* Element */));\n    // This special case happens when there is a @host on the inject and when we are searching\n    // on the host element node.\n    var isHostSpecialCase = (flags & InjectFlags.Host) && hostTElementNode === tNode;\n    var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n    if (injectableIdx !== null) {\n        return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n    }\n    else {\n        return NOT_FOUND;\n    }\n}\n/**\n * Searches for the given token among the node's directives and providers.\n *\n * @param tNode TNode on which directives are present.\n * @param tView The tView we are currently processing\n * @param token Provider token or type of a directive to look for.\n * @param canAccessViewProviders Whether view providers should be considered.\n * @param isHostSpecialCase Whether the host special case applies.\n * @returns Index of a found directive or provider, or null when none found.\n */\nfunction locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n    var nodeProviderIndexes = tNode.providerIndexes;\n    var tInjectables = tView.data;\n    var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n    var directivesStart = tNode.directiveStart;\n    var directiveEnd = tNode.directiveEnd;\n    var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n    var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n    // When the host special case applies, only the viewProviders and the component are visible\n    var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n    for (var i = startingIndex; i < endIndex; i++) {\n        var providerTokenOrDef = tInjectables[i];\n        if (i < directivesStart && token === providerTokenOrDef ||\n            i >= directivesStart && providerTokenOrDef.type === token) {\n            return i;\n        }\n    }\n    if (isHostSpecialCase) {\n        var dirDef = tInjectables[directivesStart];\n        if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n            return directivesStart;\n        }\n    }\n    return null;\n}\n/**\n* Retrieve or instantiate the injectable from the `lData` at particular `index`.\n*\n* This function checks to see if the value has already been instantiated and if so returns the\n* cached `injectable`. Otherwise if it detects that the value is still a factory it\n* instantiates the `injectable` and caches the value.\n*/\nfunction getNodeInjectable(tData, lData, index, tNode) {\n    var value = lData[index];\n    if (isFactory(value)) {\n        var factory = value;\n        if (factory.resolving) {\n            throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n        }\n        var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n        factory.resolving = true;\n        var previousInjectImplementation = void 0;\n        if (factory.injectImpl) {\n            previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n        }\n        var savePreviousOrParentTNode = getPreviousOrParentTNode();\n        var saveLView = getLView();\n        setTNodeAndViewData(tNode, lData);\n        try {\n            value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n        }\n        finally {\n            if (factory.injectImpl)\n                setInjectImplementation(previousInjectImplementation);\n            setIncludeViewProviders(previousIncludeViewProviders);\n            factory.resolving = false;\n            setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n        }\n    }\n    return value;\n}\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param token the injection token\n * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n *   When the returned value is negative then it represents special values such as `Injector`.\n */\nfunction bloomHashBitOrFactory(token) {\n    ngDevMode && assertDefined(token, 'token must be defined');\n    if (typeof token === 'string') {\n        return token.charCodeAt(0) || 0;\n    }\n    var tokenId = token[NG_ELEMENT_ID];\n    // Negative token IDs are used for special objects such as `Injector`\n    return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n}\nfunction bloomHasToken(bloomHash, injectorIndex, injectorView) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomHash;\n    var b7 = bloomHash & 0x80;\n    var b6 = bloomHash & 0x40;\n    var b5 = bloomHash & 0x20;\n    // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n    // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n    // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n    var value;\n    if (b7) {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n            (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n    }\n    else {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n            (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n    }\n    // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n    // this injector is a potential match.\n    return !!(value & mask);\n}\n/** Returns true if flags prevent parent injector from being searched for tokens */\nfunction shouldSearchParent(flags, isFirstHostTNode) {\n    return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);\n}\nvar NodeInjector = /** @class */ (function () {\n    function NodeInjector(_tNode, _lView) {\n        this._tNode = _tNode;\n        this._lView = _lView;\n    }\n    NodeInjector.prototype.get = function (token, notFoundValue) {\n        return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n    };\n    return NodeInjector;\n}());\n/**\n * @codeGenApi\n */\nfunction ÉµÉµgetFactoryOf(type) {\n    var typeAny = type;\n    var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n        getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n    if (!def || def.factory === undefined) {\n        return null;\n    }\n    return def.factory;\n}\n/**\n * @codeGenApi\n */\nfunction ÉµÉµgetInheritedFactory(type) {\n    var proto = Object.getPrototypeOf(type.prototype).constructor;\n    var factory = ÉµÉµgetFactoryOf(proto);\n    if (factory !== null) {\n        return factory;\n    }\n    else {\n        // There is no factory defined. Either this was improper usage of inheritance\n        // (no Angular decorator on the superclass) or there is no constructor at all\n        // in the inheritance chain. Since the two cases cannot be distinguished, the\n        // latter has to be assumed.\n        return function (t) { return new t(); };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\nfunction allowSanitizationBypass(value, type) {\n    return (value instanceof String && value[BRAND] === type);\n}\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\nvar _devMode = true;\nvar _runModeLocked = false;\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (_a) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(undefined);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (_a) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either an allowed protocol (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var e_1, _a;\n    var res = {};\n    try {\n        for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var t = _c.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n}\nfunction merge() {\n    var e_2, _a;\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\nvar ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n    'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n    'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n    'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n    'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n    'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n    'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n// Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n//\n// Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n// `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n// don't want to preserve the content, if the elements themselves are going to be removed.\nvar SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        var traverseContent = true;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                traverseContent = this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (traverseContent && current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n     * be traversed. Element content must always be traversed (even if the element itself is not\n     * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n     *\n     * @param element The element to sanitize.\n     * @return True if the element's contents should be traversed.\n     */\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n        return true;\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nvar SecurityContext;\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(SecurityContext || (SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n *\n * @publicApi\n */\nfunction ÉµÉµsanitizeHtml(unsafeHtml) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, renderStringify(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n *\n * @publicApi\n */\nfunction ÉµÉµsanitizeStyle(unsafeStyle) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(renderStringify(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n *\n * @publicApi\n */\nfunction ÉµÉµsanitizeUrl(unsafeUrl) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(renderStringify(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n *\n * @publicApi\n */\nfunction ÉµÉµsanitizeResourceUrl(unsafeResourceUrl) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link\n * bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts` have been allowed to pass.\n *\n * @publicApi\n */\nfunction ÉµÉµsanitizeScript(unsafeScript) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';\n    }\n    if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n        return unsafeScript.toString();\n    }\n    throw new Error('unsafe value used in a script context');\n}\n/**\n * Detects which sanitizer to use for URL property, based on tag name and prop name.\n *\n * The rules are based on the RESOURCE_URL context config from\n * `packages/compiler/src/schema/dom_security_schema.ts`.\n * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n */\nfunction getUrlSanitizer(tag, prop) {\n    if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n        tag === 'media' || tag === 'script')) ||\n        (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n        return ÉµÉµsanitizeResourceUrl;\n    }\n    return ÉµÉµsanitizeUrl;\n}\n/**\n * Sanitizes URL, selecting sanitizer function based on tag and property names.\n *\n * This function is used in case we can't define security context at compile time, when only prop\n * name is available. This happens when we generate host bindings for Directives/Components. The\n * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n * runtime.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @param tag target element tag name.\n * @param prop name of the property that contains the value.\n * @returns `url` string which is safe to bind.\n *\n * @publicApi\n */\nfunction ÉµÉµsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n    return getUrlSanitizer(tag, prop)(unsafeUrl);\n}\n/**\n * The default style sanitizer will handle sanitization for style properties by\n * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n *\n * @publicApi\n */\nvar ÉµÉµdefaultStyleSanitizer = function (prop, value, mode) {\n    mode = mode || 3 /* ValidateAndSanitize */;\n    var doSanitizeValue = true;\n    if (mode & 1 /* ValidateProperty */) {\n        doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n            prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n            prop === 'list-style-image' || prop === 'clip-path';\n    }\n    if (mode & 2 /* SanitizeOnly */) {\n        return doSanitizeValue ? ÉµÉµsanitizeStyle(value) : value;\n    }\n    else {\n        return doSanitizeValue;\n    }\n};\nfunction validateAgainstEventProperties(name) {\n    if (name.toLowerCase().startsWith('on')) {\n        var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n            (\"please use (\" + name.slice(2) + \")=...\") +\n            (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n            \" current module.\";\n        throw new Error(msg);\n    }\n}\nfunction validateAgainstEventAttributes(name) {\n    if (name.toLowerCase().startsWith('on')) {\n        var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n            (\"please use (\" + name.slice(2) + \")=...\");\n        throw new Error(msg);\n    }\n}\nfunction getSanitizer() {\n    var lView = getLView();\n    return lView && lView[SANITIZER];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n */\n/**\n * Creates an `Array` construction with a given name. This is useful when\n * looking for memory consumption to see what time of array it is.\n *\n *\n * @param name Name to give to the constructor\n * @returns A subclass of `Array` if possible. This can only be done in\n *          environments which support `class` construct.\n */\nfunction createNamedArrayType(name) {\n    // This should never be called in prod mode, so let's verify that is the case.\n    if (ngDevMode) {\n        try {\n            // We need to do it this way so that TypeScript does not down-level the below code.\n            var FunctionConstructor = createNamedArrayType.constructor;\n            return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n        }\n        catch (e) {\n            // If it does not work just give up and fall back to regular Array.\n            return Array;\n        }\n    }\n    else {\n        throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LView` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n *\n * @param target Component, Directive or DOM Node.\n */\nfunction getLContext(target) {\n    var mpValue = readPatchedData(target);\n    if (mpValue) {\n        // only when it's an array is it considered an LView instance\n        // ... otherwise it's an already constructed LContext instance\n        if (Array.isArray(mpValue)) {\n            var lView = mpValue;\n            var nodeIndex = void 0;\n            var component = undefined;\n            var directives = undefined;\n            if (isComponentInstance(target)) {\n                nodeIndex = findViaComponent(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided component was not found in the application');\n                }\n                component = target;\n            }\n            else if (isDirectiveInstance(target)) {\n                nodeIndex = findViaDirective(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided directive was not found in the application');\n                }\n                directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n            }\n            else {\n                nodeIndex = findViaNativeElement(lView, target);\n                if (nodeIndex == -1) {\n                    return null;\n                }\n            }\n            // the goal is not to fill the entire context full of data because the lookups\n            // are expensive. Instead, only the target data (the element, component, container, ICU\n            // expression or directive details) are filled into the context. If called multiple times\n            // with different target values then the missing target data will be filled in.\n            var native = unwrapRNode(lView[nodeIndex]);\n            var existingCtx = readPatchedData(native);\n            var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                existingCtx :\n                createLContext(lView, nodeIndex, native);\n            // only when the component has been discovered then update the monkey-patch\n            if (component && context.component === undefined) {\n                context.component = component;\n                attachPatchData(context.component, context);\n            }\n            // only when the directives have been discovered then update the monkey-patch\n            if (directives && context.directives === undefined) {\n                context.directives = directives;\n                for (var i = 0; i < directives.length; i++) {\n                    attachPatchData(directives[i], context);\n                }\n            }\n            attachPatchData(context.native, context);\n            mpValue = context;\n        }\n    }\n    else {\n        var rElement = target;\n        ngDevMode && assertDomNode(rElement);\n        // if the context is not found then we need to traverse upwards up the DOM\n        // to find the nearest element that has already been monkey patched with data\n        var parent_1 = rElement;\n        while (parent_1 = parent_1.parentNode) {\n            var parentContext = readPatchedData(parent_1);\n            if (parentContext) {\n                var lView = void 0;\n                if (Array.isArray(parentContext)) {\n                    lView = parentContext;\n                }\n                else {\n                    lView = parentContext.lView;\n                }\n                // the edge of the app was also reached here through another means\n                // (maybe because the DOM was changed manually).\n                if (!lView) {\n                    return null;\n                }\n                var index = findViaNativeElement(lView, rElement);\n                if (index >= 0) {\n                    var native = unwrapRNode(lView[index]);\n                    var context = createLContext(lView, index, native);\n                    attachPatchData(native, context);\n                    mpValue = context;\n                    break;\n                }\n            }\n        }\n    }\n    return mpValue || null;\n}\n/**\n * Creates an empty instance of a `LContext` context\n */\nfunction createLContext(lView, nodeIndex, native) {\n    return {\n        lView: lView,\n        nodeIndex: nodeIndex,\n        native: native,\n        component: undefined,\n        directives: undefined,\n        localRefs: undefined,\n    };\n}\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param componentInstance\n * @returns The component's view\n */\nfunction getComponentViewByInstance(componentInstance) {\n    var lView = readPatchedData(componentInstance);\n    var view;\n    if (Array.isArray(lView)) {\n        var nodeIndex = findViaComponent(lView, componentInstance);\n        view = getComponentViewByIndex(nodeIndex, lView);\n        var context = createLContext(lView, nodeIndex, view[HOST]);\n        context.component = componentInstance;\n        attachPatchData(componentInstance, context);\n        attachPatchData(context.native, context);\n    }\n    else {\n        var context = lView;\n        view = getComponentViewByIndex(context.nodeIndex, context.lView);\n    }\n    return view;\n}\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n */\nfunction attachPatchData(target, data) {\n    target[MONKEY_PATCH_KEY_NAME] = data;\n}\nfunction isComponentInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngComponentDef;\n}\nfunction isDirectiveInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n}\n/**\n * Locates the element within the given LView and returns the matching index\n */\nfunction findViaNativeElement(lView, target) {\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        var native = getNativeByTNodeOrNull(tNode, lView);\n        if (native === target) {\n            return tNode.index;\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Locates the next tNode (child, sibling or parent).\n */\nfunction traverseNextElement(tNode) {\n    if (tNode.child) {\n        return tNode.child;\n    }\n    else if (tNode.next) {\n        return tNode.next;\n    }\n    else {\n        // Let's take the following template: <div><span>text</span></div><component/>\n        // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n        // in this case the parent `div`, so that we can find the component.\n        while (tNode.parent && !tNode.parent.next) {\n            tNode = tNode.parent;\n        }\n        return tNode.parent && tNode.parent.next;\n    }\n}\n/**\n * Locates the component within the given LView and returns the matching index\n */\nfunction findViaComponent(lView, componentInstance) {\n    var componentIndices = lView[TVIEW].components;\n    if (componentIndices) {\n        for (var i = 0; i < componentIndices.length; i++) {\n            var elementComponentIndex = componentIndices[i];\n            var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n            if (componentView[CONTEXT] === componentInstance) {\n                return elementComponentIndex;\n            }\n        }\n    }\n    else {\n        var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n        var rootComponent = rootComponentView[CONTEXT];\n        if (rootComponent === componentInstance) {\n            // we are dealing with the root element here therefore we know that the\n            // element is the very first element after the HEADER data in the lView\n            return HEADER_OFFSET;\n        }\n    }\n    return -1;\n}\n/**\n * Locates the directive within the given LView and returns the matching index\n */\nfunction findViaDirective(lView, directiveInstance) {\n    // if a directive is monkey patched then it will (by default)\n    // have a reference to the LView of the current view. The\n    // element bound to the directive being search lives somewhere\n    // in the view data. We loop through the nodes and check their\n    // list of directives for the instance.\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        var directiveIndexStart = tNode.directiveStart;\n        var directiveIndexEnd = tNode.directiveEnd;\n        for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n            if (lView[i] === directiveInstance) {\n                return tNode.index;\n            }\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param nodeIndex The node index\n * @param lView The target view data\n * @param includeComponents Whether or not to include components in returned directives\n */\nfunction getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    var directiveStartIndex = tNode.directiveStart;\n    if (directiveStartIndex == 0)\n        return EMPTY_ARRAY;\n    var directiveEndIndex = tNode.directiveEnd;\n    if (!includeComponents && tNode.flags & 1 /* isComponent */)\n        directiveStartIndex++;\n    return lView.slice(directiveStartIndex, directiveEndIndex);\n}\nfunction getComponentAtNodeIndex(nodeIndex, lView) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    var directiveStartIndex = tNode.directiveStart;\n    return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n}\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n */\nfunction discoverLocalRefs(lView, nodeIndex) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    if (tNode && tNode.localNames) {\n        var result = {};\n        var localIndex = tNode.index + 1;\n        for (var i = 0; i < tNode.localNames.length; i += 2) {\n            result[tNode.localNames[i]] = lView[localIndex];\n            localIndex++;\n        }\n        return result;\n    }\n    return null;\n}\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (creationMode) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    // TODO: include debug context\n    throw new Error(msg);\n}\nfunction throwMixedMultiProviderError() {\n    throw new Error(\"Cannot mix multi providers and regular providers\");\n}\nfunction throwInvalidProviderError(ngModuleType, providers, provider) {\n    var ngModuleDetail = '';\n    if (ngModuleType && providers) {\n        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n        ngModuleDetail =\n            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n    }\n    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_TEMPLATE_SELECTOR = 'ng-template';\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n *\n * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n * directive matching mode:\n * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n * tag name was extracted from * syntax so we would match the same directive twice);\n * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n * (applicable to TNodeType.Container only).\n */\nfunction hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n    var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n        NG_TEMPLATE_SELECTOR :\n        tNode.tagName;\n    return currentSelector === tagNameToCompare;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data of the node to match\n * @param selector The selector to try matching against the node.\n * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n * directive matching.\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4 /* ELEMENT */;\n    var nodeAttrs = tNode.attrs || [];\n    // Find the index of first attribute that has no value, only a name.\n    var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                current === '' && selector.length === 1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            // special case for matching against classes when a tNode has been instantiated with\n            // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n            if ((mode & 8 /* CLASS */) && tNode.classes) {\n                if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n                continue;\n            }\n            var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n            var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = void 0;\n                if (attrIndexInNode > nameOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                }\n                var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                if (compareAgainstClassName &&\n                    !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines the attribute's definition array for a node to find the index of the\n * attribute that matches the given `name`.\n *\n * NOTE: This will not match namespaced attributes.\n *\n * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n * The following table summarizes which types of attributes we attempt to match:\n *\n * ===========================================================================================================\n * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n * Attributes\n * ===========================================================================================================\n * Inline + Projection     | YES               | YES                 | NO                  | YES\n * -----------------------------------------------------------------------------------------------------------\n * Inline + Directive      | NO                | NO                  | YES                 | NO\n * -----------------------------------------------------------------------------------------------------------\n * Non-inline + Projection | YES               | YES                 | NO                  | YES\n * -----------------------------------------------------------------------------------------------------------\n * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n * ===========================================================================================================\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n * rather than a manually expanded template node (e.g `<ng-template>`).\n * @param isProjectionMode true if we are matching against content projection otherwise we are\n * matching against directives.\n */\nfunction findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n    if (attrs === null)\n        return -1;\n    var i = 0;\n    if (isProjectionMode || !isInlineTemplate) {\n        var bindingsMode = false;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                bindingsMode = true;\n            }\n            else if (maybeAttrName === 1 /* Classes */) {\n                var value = attrs[++i];\n                // We should skip classes here because we have a separate mechanism for\n                // matching classes in projection mode.\n                while (typeof value === 'string') {\n                    value = attrs[++i];\n                }\n                continue;\n            }\n            else if (maybeAttrName === 4 /* Template */) {\n                // We do not care about Template attributes in this scenario.\n                break;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // Skip the whole namespaced attribute and value. This is by design.\n                i += 4;\n                continue;\n            }\n            // In binding mode there are only names, rather than name-value pairs.\n            i += bindingsMode ? 1 : 2;\n        }\n        // We did not match the attribute\n        return -1;\n    }\n    else {\n        return matchTemplateAttribute(attrs, name);\n    }\n}\nfunction isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n    if (isProjectionMode === void 0) { isProjectionMode = false; }\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\nfunction getNameOnlyMarkerIndex(nodeAttrs) {\n    for (var i = 0; i < nodeAttrs.length; i++) {\n        var nodeAttr = nodeAttrs[i];\n        if (isNameOnlyAttributeMarker(nodeAttr)) {\n            return i;\n        }\n    }\n    return nodeAttrs.length;\n}\nfunction matchTemplateAttribute(attrs, name) {\n    var i = attrs.indexOf(4 /* Template */);\n    if (i > -1) {\n        i++;\n        while (i < attrs.length) {\n            if (attrs[i] === name)\n                return i;\n            i++;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether a selector is inside a CssSelectorList\n * @param selector Selector to be checked.\n * @param list List in which to look for the selector.\n */\nfunction isSelectorInSelectorList(selector, list) {\n    selectorListLoop: for (var i = 0; i < list.length; i++) {\n        var currentSelectorInList = list[i];\n        if (selector.length !== currentSelectorInList.length) {\n            continue;\n        }\n        for (var j = 0; j < selector.length; j++) {\n            if (selector[j] !== currentSelectorInList[j]) {\n                continue selectorListLoop;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n\n/**\n * --------\n *\n * This file contains the core logic for styling in Angular.\n *\n * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n * will have their values be applied through the logic in this file.\n *\n * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n * the binding data will be populated into a `TStylingContext` data-structure.\n * There is only one `TStylingContext` per `TNode` and each element instance\n * will update its style/class binding values in concert with the styling\n * context.\n *\n * To learn more about the algorithm see `TStylingContext`.\n *\n * --------\n */\n// The first bit value reflects a map-based binding value's bit.\n// The reason why it's always activated for every entry in the map\n// is so that if any map-binding values update then all other prop\n// based bindings will pass the guard check automatically without\n// any extra code or flags.\nvar DEFAULT_GUARD_MASK_VALUE = 1;\n/**\n * The guard/update mask bit index location for map-based bindings.\n *\n * All map-based bindings (i.e. `[style]` and `[class]` )\n */\nvar STYLING_INDEX_FOR_MAP_BINDING = 0;\n/**\n * Default fallback value for a styling binding.\n *\n * A value of `null` is used here which signals to the styling algorithm that\n * the styling value is not present. This way if there are no other values\n * detected then it will be removed once the style/class property is dirty and\n * diffed within the styling algorithm present in `flushStyling`.\n */\nvar DEFAULT_BINDING_VALUE = null;\n/**\n * Default size count value for a new entry in a context.\n *\n * A value of `1` is used here because each entry in the context has a default\n * property.\n */\nvar DEFAULT_SIZE_VALUE = 1;\nvar deferredBindingQueue = [];\n/**\n * Visits a class-based binding and updates the new value (if changed).\n *\n * This function is called each time a class-based styling instruction\n * is executed. It's important that it's always called (even if the value\n * has not changed) so that the inner counter index value is incremented.\n * This way, each instruction is always guaranteed to get the same counter\n * state each time it's called (which then allows the `TStylingContext`\n * and the bit mask values to be in sync).\n */\nfunction updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n    var isMapBased = !prop;\n    var state = getStylingState(element, stateIsPersisted(context));\n    var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n    var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n    if (updated || forceUpdate) {\n        // We flip the bit in the bitMask to reflect that the binding\n        // at the `index` slot has changed. This identifies to the flushing\n        // phase that the bindings for this particular CSS class need to be\n        // applied again because on or more of the bindings for the CSS\n        // class have changed.\n        state.classesBitMask |= 1 << index;\n        return true;\n    }\n    return false;\n}\n/**\n * Visits a style-based binding and updates the new value (if changed).\n *\n * This function is called each time a style-based styling instruction\n * is executed. It's important that it's always called (even if the value\n * has not changed) so that the inner counter index value is incremented.\n * This way, each instruction is always guaranteed to get the same counter\n * state each time it's called (which then allows the `TStylingContext`\n * and the bit mask values to be in sync).\n */\nfunction updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n    var isMapBased = !prop;\n    var state = getStylingState(element, stateIsPersisted(context));\n    var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n    var sanitizationRequired = isMapBased ?\n        true :\n        (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n    var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n    if (updated || forceUpdate) {\n        // We flip the bit in the bitMask to reflect that the binding\n        // at the `index` slot has changed. This identifies to the flushing\n        // phase that the bindings for this particular property need to be\n        // applied again because on or more of the bindings for the CSS\n        // property have changed.\n        state.stylesBitMask |= 1 << index;\n        return true;\n    }\n    return false;\n}\n/**\n * Called each time a binding value has changed within the provided `TStylingContext`.\n *\n * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n * If called during the first update pass, the binding will be registered in the context.\n * If the binding does get registered and the `deferRegistration` flag is true then the\n * binding data will be queued up until the context is later flushed in `applyStyling`.\n *\n * This function will also update binding slot in the provided `LStylingData` with the\n * new binding entry (if it has changed).\n *\n * @returns whether or not the binding value was updated in the `LStylingData`.\n */\nfunction updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n    if (!isContextLocked(context)) {\n        if (deferRegistration) {\n            deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n        }\n        else {\n            deferredBindingQueue.length && flushDeferredBindings();\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n        }\n    }\n    var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n    if (changed) {\n        data[bindingIndex] = value;\n    }\n    return changed;\n}\n/**\n * Schedules a binding registration to be run at a later point.\n *\n * The reasoning for this feature is to ensure that styling\n * bindings are registered in the correct order for when\n * directives/components have a super/sub class inheritance\n * chains. Each directive's styling bindings must be\n * registered into the context in reverse order. Therefore all\n * bindings will be buffered in reverse order and then applied\n * after the inheritance chain exits.\n */\nfunction deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n    deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n}\n/**\n * Flushes the collection of deferred bindings and causes each entry\n * to be registered into the context.\n */\nfunction flushDeferredBindings() {\n    var i = 0;\n    while (i < deferredBindingQueue.length) {\n        var context = deferredBindingQueue[i++];\n        var count = deferredBindingQueue[i++];\n        var prop = deferredBindingQueue[i++];\n        var bindingIndex = deferredBindingQueue[i++];\n        var sanitizationRequired = deferredBindingQueue[i++];\n        registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n    }\n    deferredBindingQueue.length = 0;\n}\n/**\n * Registers the provided binding (prop + bindingIndex) into the context.\n *\n * This function is shared between bindings that are assigned immediately\n * (via `updateBindingData`) and at a deferred stage. When called, it will\n * figure out exactly where to place the binding data in the context.\n *\n * It is needed because it will either update or insert a styling property\n * into the context at the correct spot.\n *\n * When called, one of two things will happen:\n *\n * 1) If the property already exists in the context then it will just add\n *    the provided `bindingValue` to the end of the binding sources region\n *    for that particular property.\n *\n *    - If the binding value is a number then it will be added as a new\n *      binding index source next to the other binding sources for the property.\n *\n *    - Otherwise, if the binding value is a string/boolean/null type then it will\n *      replace the default value for the property if the default value is `null`.\n *\n * 2) If the property does not exist then it will be inserted into the context.\n *    The styling context relies on all properties being stored in alphabetical\n *    order, so it knows exactly where to store it.\n *\n *    When inserted, a default `null` value is created for the property which exists\n *    as the default value for the binding. If the bindingValue property is inserted\n *    and it is either a string, number or null value then that will replace the default\n *    value.\n *\n * Note that this function is also used for map-based styling bindings. They are treated\n * much the same as prop-based bindings, but, because they do not have a property value\n * (since it's a map), all map-based entries are stored in an already populated area of\n * the context at the top (which is reserved for map-based entries).\n */\nfunction registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n    var registered = false;\n    if (prop) {\n        // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n        var found = false;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var p = getProp(context, i);\n            found = prop <= p;\n            if (found) {\n                // all style/class bindings are sorted by property name\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                break;\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, false, i, bindingValue, countId);\n            registered = true;\n        }\n    }\n    else {\n        // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n        // there is no need to allocate the map-based binding region into the context\n        // since it is already there when the context is first created.\n        addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n        registered = true;\n    }\n    return registered;\n}\nfunction allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n    // 1,2: splice index locations\n    // 3: each entry gets a config value (guard mask + flags)\n    // 4. each entry gets a size value (which is always one because there is always a default binding\n    // value)\n    // 5. the property that is getting allocated into the context\n    // 6. the default binding value (usually `null`)\n    var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n        0 /* Default */;\n    context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n    setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n}\n/**\n * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n *\n * A bindingValue is inserted into a context during the first update pass\n * of a template or host bindings function. When this occurs, two things\n * happen:\n *\n * - If the bindingValue value is a number then it is treated as a bindingIndex\n *   value (a index in the `LView`) and it will be inserted next to the other\n *   binding index entries.\n *\n * - Otherwise the binding value will update the default value for the property\n *   and this will only happen if the default value is `null`.\n *\n * Note that this function also handles map-based bindings and will insert them\n * at the top of the context.\n */\nfunction addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n    var valuesCount = getValuesCount(context, index);\n    var firstValueIndex = index + 3 /* BindingsStartOffset */;\n    var lastValueIndex = firstValueIndex + valuesCount;\n    if (!isMapBased) {\n        // prop-based values all have default values, but map-based entries do not.\n        // we want to access the index for the default value in this case and not just\n        // the bindings...\n        lastValueIndex--;\n    }\n    if (typeof bindingValue === 'number') {\n        // the loop here will check to see if the binding already exists\n        // for the property in the context. Why? The reason for this is\n        // because the styling context is not \"locked\" until the first\n        // flush has occurred. This means that if a repeated element\n        // registers its styling bindings then it will register each\n        // binding more than once (since its duplicated). This check\n        // will prevent that from happening. Note that this only happens\n        // when a binding is first encountered and not each time it is\n        // updated.\n        for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n            var indexAtPosition = context[i];\n            if (indexAtPosition === bindingValue)\n                return;\n        }\n        context.splice(lastValueIndex, 0, bindingValue);\n        context[index + 1 /* ValuesCountOffset */]++;\n        // now that a new binding index has been added to the property\n        // the guard mask bit value (at the `countId` position) needs\n        // to be included into the existing mask value.\n        var guardMask = getGuardMask(context, index) | (1 << countId);\n        setGuardMask(context, index, guardMask);\n    }\n    else if (bindingValue !== null && context[lastValueIndex] == null) {\n        context[lastValueIndex] = bindingValue;\n    }\n}\n/**\n * Applies all pending style and class bindings to the provided element.\n *\n * This function will attempt to flush styling via the provided `classesContext`\n * and `stylesContext` context values. This function is designed to be run from\n * the `stylingApply()` instruction (which is run at the very end of styling\n * change detection) and will rely on any state values that are set from when\n * any styling bindings update.\n *\n * This function may be called multiple times on the same element because it can\n * be called from the template code as well as from host bindings. In order for\n * styling to be successfully flushed to the element (which will only happen once\n * despite this being called multiple times), the following criteria must be met:\n *\n * - `flushStyling` is called from the very last directive that has styling for\n *    the element (see `allowStylingFlush()`).\n * - one or more bindings for classes or styles has updated (this is checked by\n *   examining the classes or styles bit mask).\n *\n * If the style and class values are successfully applied to the element then\n * the temporary state values for the element will be cleared. Otherwise, if\n * this did not occur then the styling state is persisted (see `state.ts` for\n * more information on how this works).\n */\nfunction flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n    ngDevMode && ngDevMode.flushStyling++;\n    var persistState = classesContext ? stateIsPersisted(classesContext) :\n        (stylesContext ? stateIsPersisted(stylesContext) : false);\n    var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n    var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n    // deferred bindings are bindings which are scheduled to register with\n    // the context at a later point. These bindings can only registered when\n    // the context will be 100% flushed to the element.\n    if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n        flushDeferredBindings();\n    }\n    var state = getStylingState(element, persistState);\n    var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n    var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n    if (classesFlushed && stylesFlushed) {\n        resetStylingState();\n        if (persistState) {\n            deleteStylingStateFromStorage(element);\n        }\n    }\n    else if (persistState) {\n        storeStylingState(element, state);\n    }\n}\nfunction maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n    if (allowFlush && context) {\n        lockAndFinalizeContext(context);\n        if (contextHasUpdates(context, bitMask)) {\n            ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n            applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n            return true;\n        }\n    }\n    return allowFlush;\n}\nfunction contextHasUpdates(context, bitMask) {\n    return context && bitMask > BIT_MASK_START_VALUE;\n}\n/**\n * Locks the context (so no more bindings can be added) and also copies over initial class/style\n * values into their binding areas.\n *\n * There are two main actions that take place in this function:\n *\n * - Locking the context:\n *   Locking the context is required so that the style/class instructions know NOT to\n *   register a binding again after the first update pass has run. If a locking bit was\n *   not used then it would need to scan over the context each time an instruction is run\n *   (which is expensive).\n *\n * - Patching initial values:\n *   Directives and component host bindings may include static class/style values which are\n *   bound to the host element. When this happens, the styling context will need to be informed\n *   so it can use these static styling values as defaults when a matching binding is falsy.\n *   These initial styling values are read from the initial styling values slot within the\n *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n *   so these values are only read at this point because this is the very last point before the\n *   first style/class values are flushed to the element.\n */\nfunction lockAndFinalizeContext(context) {\n    if (!isContextLocked(context)) {\n        var initialValues = getStylingMapArray(context);\n        if (initialValues) {\n            updateInitialStylingOnContext(context, initialValues);\n        }\n        lockContext(context);\n    }\n}\n/**\n * Runs through the provided styling context and applies each value to\n * the provided element (via the renderer) if one or more values are present.\n *\n * This function will iterate over all entries present in the provided\n * `TStylingContext` array (both prop-based and map-based bindings).-\n *\n * Each entry, within the `TStylingContext` array, is stored alphabetically\n * and this means that each prop/value entry will be applied in order\n * (so long as it is marked dirty in the provided `bitMask` value).\n *\n * If there are any map-based entries present (which are applied to the\n * element via the `[style]` and `[class]` bindings) then those entries\n * will be applied as well. However, the code for that is not a part of\n * this function. Instead, each time a property is visited, then the\n * code below will call an external function called `stylingMapsSyncFn`\n * and, if present, it will keep the application of styling values in\n * map-based bindings up to sync with the application of prop-based\n * bindings.\n *\n * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n * algorithm works for map-based styling bindings.\n *\n * Note that this function is not designed to be called in isolation (use\n * `applyClasses` and `applyStyles` to actually apply styling values).\n */\nfunction applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n    var bitMask = normalizeBitMaskValue(bitMaskValue);\n    var stylingMapsSyncFn = getStylingMapsSyncFn();\n    var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n    var applyAllValues = (bitMask & mapsGuardMask) > 0;\n    var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n    var i = getPropValuesStartPosition(context);\n    while (i < context.length) {\n        var valuesCount = getValuesCount(context, i);\n        var guardMask = getGuardMask(context, i);\n        if (bitMask & guardMask) {\n            var valueApplied = false;\n            var prop = getProp(context, i);\n            var valuesCountUpToDefault = valuesCount - 1;\n            var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n            // case 1: apply prop-based values\n            // try to apply the binding values and see if a non-null\n            // value gets set for the styling binding\n            for (var j = 0; j < valuesCountUpToDefault; j++) {\n                var bindingIndex = getBindingValue(context, i, j);\n                var value = bindingData[bindingIndex];\n                if (isStylingValueDefined(value)) {\n                    var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                        sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                        value;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                    valueApplied = true;\n                    break;\n                }\n            }\n            // case 2: apply map-based values\n            // traverse through each map-based styling binding and update all values up to\n            // the provided `prop` value. If the property was not applied in the loop above\n            // then it will be attempted to be applied in the maps sync code below.\n            if (stylingMapsSyncFn) {\n                // determine whether or not to apply the target property or to skip it\n                var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                    2 /* ApplyTargetProp */);\n                var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                valueApplied = valueApplied || valueAppliedWithinMap;\n            }\n            // case 3: apply the default value\n            // if the value has not yet been applied then a truthy value does not exist in the\n            // prop-based or map-based bindings code. If and when this happens, just apply the\n            // default value (even if the default value is `null`).\n            if (!valueApplied) {\n                applyStylingFn(renderer, element, prop, defaultValue);\n            }\n        }\n        i += 3 /* BindingsStartOffset */ + valuesCount;\n    }\n    // the map-based styling entries may have not applied all their\n    // values. For this reason, one more call to the sync function\n    // needs to be issued at the end.\n    if (stylingMapsSyncFn) {\n        stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n    }\n}\nfunction normalizeBitMaskValue(value) {\n    // if pass => apply all values (-1 implies that all bits are flipped to true)\n    if (value === true)\n        return -1;\n    // if pass => skip all values\n    if (value === false)\n        return 0;\n    // return the bit mask value as is\n    return value;\n}\nvar _activeStylingMapApplyFn = null;\nfunction getStylingMapsSyncFn() {\n    return _activeStylingMapApplyFn;\n}\nfunction setStylingMapsSyncFn(fn) {\n    _activeStylingMapApplyFn = fn;\n}\n/**\n * Assigns a style value to a style property for the given element.\n */\nvar setStyle = function (renderer, native, prop, value) {\n    // the reason why this may be `null` is either because\n    // it's a container element or it's a part of a test\n    // environment that doesn't have styling. In either\n    // case it's safe not to apply styling to the element.\n    var nativeStyle = native.style;\n    if (value) {\n        // opacity, z-index and flexbox all have number values\n        // and these need to be converted into strings so that\n        // they can be assigned properly.\n        value = value.toString();\n        ngDevMode && ngDevMode.rendererSetStyle++;\n        renderer && isProceduralRenderer(renderer) ?\n            renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n            (nativeStyle && nativeStyle.setProperty(prop, value));\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveStyle++;\n        renderer && isProceduralRenderer(renderer) ?\n            renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n            (nativeStyle && nativeStyle.removeProperty(prop));\n    }\n};\n/**\n * Adds/removes the provided className value to the provided element.\n */\nvar setClass = function (renderer, native, className, value) {\n    if (className !== '') {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var classList = native.classList;\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                (classList && classList.add(className));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                (classList && classList.remove(className));\n        }\n    }\n};\n/**\n * Iterates over all provided styling entries and renders them on the element.\n *\n * This function is used alongside a `StylingMapArray` entry. This entry is not\n * the same as the `TStylingContext` and is only really used when an element contains\n * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n * are present. If and when that happens then this function will be called to render all\n * initial styling values on an element.\n */\nfunction renderStylingMap(renderer, element, stylingValues, isClassBased) {\n    var stylingMapArr = getStylingMapArray(stylingValues);\n    if (stylingMapArr) {\n        for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(stylingMapArr, i);\n            var value = getMapValue(stylingMapArr, i);\n            if (isClassBased) {\n                setClass(renderer, element, prop, value, null);\n            }\n            else {\n                setStyle(renderer, element, prop, value, null);\n            }\n        }\n    }\n}\n/**\n * Registers all initial styling entries into the provided context.\n *\n * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n * them as default (initial) values in the provided context. Initial styling values in a context are\n * the default values that are to be applied unless overwritten by a binding.\n *\n * The reason why this function exists and isn't a part of the context construction is because\n * host binding is evaluated at a later stage after the element is created. This means that\n * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n * then that initial styling data can only be applied once the styling for that element\n * is first applied (at the end of the update phase). Once that happens then the context will\n * update itself with the complete initial styling for the element.\n */\nfunction updateInitialStylingOnContext(context, initialStyling) {\n    // `-1` is used here because all initial styling data is not a spart\n    // of a binding (since it's static)\n    var INITIAL_STYLING_COUNT_ID = -1;\n    for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n        var value = getMapValue(initialStyling, i);\n        if (value) {\n            var prop = getMapProp(initialStyling, i);\n            registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marks that the next string is for element.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nvar ELEMENT_MARKER = {\n    marker: 'element'\n};\n/**\n * Marks that the next string is for comment.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nvar COMMENT_MARKER = {\n    marker: 'comment'\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachDebugObject(obj, debug) {\n    Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n}\n\n/**\n * --------\n *\n * This file contains the algorithm logic for applying map-based bindings\n * such as `[style]` and `[class]`.\n *\n * --------\n */\n/**\n * Used to apply styling values presently within any map-based bindings on an element.\n *\n * Angular supports map-based styling bindings which can be applied via the\n * `[style]` and `[class]` bindings which can be placed on any HTML element.\n * These bindings can work independently, together or alongside prop-based\n * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n *\n * If a map-based styling binding is detected by the compiler, the following\n * AOT code is produced:\n *\n * ```typescript\n * styleMap(ctx.styles); // styles = {key:value}\n * classMap(ctx.classes); // classes = {key:value}|string\n * ```\n *\n * If and when either of the instructions above are evaluated, then the code\n * present in this file is included into the bundle. The mechanism used, to\n * activate support for map-based bindings at runtime is possible via the\n * `activeStylingMapFeature` function (which is also present in this file).\n *\n * # The Algorithm\n * Whenever a map-based binding updates (which is when the identity of the\n * map-value changes) then the map is iterated over and a `StylingMapArray` array\n * is produced. The `StylingMapArray` instance is stored in the binding location\n * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n * instruction were called. Once the binding changes, then the internal `bitMask`\n * value is marked as dirty.\n *\n * Styling values are applied once CD exits the element (which happens when\n * the `select(n)` instruction is called or the template function exits). When\n * this occurs, all prop-based bindings are applied. If a map-based binding is\n * present then a special flushing function (called a sync function) is made\n * available and it will be called each time a styling property is flushed.\n *\n * The flushing algorithm is designed to apply styling for a property (which is\n * a CSS property or a className value) one by one. If map-based bindings\n * are present, then the flushing algorithm will keep calling the maps styling\n * sync function each time a property is visited. This way, the flushing\n * behavior of map-based bindings will always be at the same property level\n * as the current prop-based property being iterated over (because everything\n * is alphabetically sorted).\n *\n * Let's imagine we have the following HTML template code:\n *\n * ```html\n * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n *      [style.width.px]=\"200\">...</div>\n * ```\n *\n * When CD occurs, both the `[style]` and `[style.width]` bindings\n * are evaluated. Then when the styles are flushed on screen, the\n * following operations happen:\n *\n * 1. `[style.width]` is attempted to be written to the element.\n *\n * 2.  Once that happens, the algorithm instructs the map-based\n *     entries (`[style]` in this case) to \"catch up\" and apply\n *     all values up to the `width` value. When this happens the\n *     `height` value is applied to the element (since it is\n *     alphabetically situated before the `width` property).\n *\n * 3. Since there are no more prop-based entries anymore, the\n *    loop exits and then, just before the flushing ends, it\n *    instructs all map-based bindings to \"finish up\" applying\n *    their values.\n *\n * 4. The only remaining value within the map-based entries is\n *    the `z-index` value (`width` got skipped because it was\n *    successfully applied via the prop-based `[style.width]`\n *    binding). Since all map-based entries are told to \"finish up\",\n *    the `z-index` value is iterated over and it is then applied\n *    to the element.\n *\n * The most important thing to take note of here is that prop-based\n * bindings are evaluated in order alongside map-based bindings.\n * This allows all styling across an element to be applied in O(n)\n * time (a similar algorithm is that of the array merge algorithm\n * in merge sort).\n */\nvar syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n    var targetPropValueWasApplied = false;\n    // once the map-based styling code is activate it is never deactivated. For this reason a\n    // check to see if the current styling context has any map based bindings is required.\n    var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n    if (totalMaps) {\n        var runTheSyncAlgorithm = true;\n        var loopUntilEnd = !targetProp;\n        // If the code is told to finish up (run until the end), but the mode\n        // hasn't been flagged to apply values (it only traverses values) then\n        // there is no point in iterating over the array because nothing will\n        // be applied to the element.\n        if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n            runTheSyncAlgorithm = false;\n            targetPropValueWasApplied = true;\n        }\n        if (runTheSyncAlgorithm) {\n            targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n        }\n        if (loopUntilEnd) {\n            resetSyncCursors();\n        }\n    }\n    return targetPropValueWasApplied;\n};\n/**\n * Recursive function designed to apply map-based styling to an element one map at a time.\n *\n * This function is designed to be called from the `syncStylingMap` function and will\n * apply map-based styling data one map at a time to the provided `element`.\n *\n * This function is recursive and it will call itself if a follow-up map value is to be\n * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n */\nfunction innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n    var targetPropValueWasApplied = false;\n    var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n    if (currentMapIndex < totalMaps) {\n        var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n        var stylingMapArr = data[bindingIndex];\n        var cursor = getCurrentSyncCursor(currentMapIndex);\n        while (cursor < stylingMapArr.length) {\n            var prop = getMapProp(stylingMapArr, cursor);\n            var iteratedTooFar = targetProp && prop > targetProp;\n            var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n            var value = getMapValue(stylingMapArr, cursor);\n            var valueIsDefined = isStylingValueDefined(value);\n            // the recursive code is designed to keep applying until\n            // it reaches or goes past the target prop. If and when\n            // this happens then it will stop processing values, but\n            // all other map values must also catch up to the same\n            // point. This is why a recursive call is still issued\n            // even if the code has iterated too far.\n            var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n            var innerProp = iteratedTooFar ? targetProp : prop;\n            var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n            if (iteratedTooFar) {\n                if (!targetPropValueWasApplied) {\n                    targetPropValueWasApplied = valueApplied;\n                }\n                break;\n            }\n            if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                var useDefault = isTargetPropMatched && !valueIsDefined;\n                var valueToApply = useDefault ? defaultValue : value;\n                var bindingIndexToApply = useDefault ? bindingIndex : null;\n                var finalValue = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                valueApplied = true;\n            }\n            targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n            cursor += 2 /* TupleSize */;\n        }\n        setCurrentSyncCursor(currentMapIndex, cursor);\n        // this is a fallback case in the event that the styling map is `null` for this\n        // binding but there are other map-based bindings that need to be evaluated\n        // afterwards. If the `prop` value is falsy then the intention is to cycle\n        // through all of the properties in the remaining maps as well. If the current\n        // styling map is too short then there are no values to iterate over. In either\n        // case the follow-up maps need to be iterated over.\n        if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n            return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n        }\n    }\n    return targetPropValueWasApplied;\n}\n/**\n * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n */\nfunction activateStylingMapFeature() {\n    setStylingMapsSyncFn(syncStylingMap);\n}\n/**\n * Used to determine the mode for the inner recursive call.\n *\n * If an inner map is iterated on then this is done so for one\n * of two reasons:\n *\n * - value is being applied:\n *   if the value is being applied from this current styling\n *   map then there is no need to apply it in a deeper map.\n *\n * - value is being not applied:\n *   apply the value if it is found in a deeper map.\n *\n * When these reasons are encountered the flags will for the\n * inner map mode will be configured.\n */\nfunction resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n    var innerMode = currentMode;\n    if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n        (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n        // case 1: set the mode to apply the targeted prop value if it\n        // ends up being encountered in another map value\n        innerMode |= 2 /* ApplyTargetProp */;\n        innerMode &= ~4 /* SkipTargetProp */;\n    }\n    else {\n        // case 2: set the mode to skip the targeted prop value if it\n        // ends up being encountered in another map value\n        innerMode |= 4 /* SkipTargetProp */;\n        innerMode &= ~2 /* ApplyTargetProp */;\n    }\n    return innerMode;\n}\n/**\n * Decides whether or not a prop/value entry will be applied to an element.\n *\n * To determine whether or not a value is to be applied,\n * the following procedure is evaluated:\n *\n * First check to see the current `mode` status:\n *  1. If the mode value permits all props to be applied then allow.\n *    - But do not allow if the current prop is set to be skipped.\n *  2. Otherwise if the current prop is permitted then allow.\n */\nfunction isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n    var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n    if (!doApplyValue) {\n        if (mode & 2 /* ApplyTargetProp */) {\n            doApplyValue = isTargetPropMatched;\n        }\n    }\n    else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n        doApplyValue = false;\n    }\n    return doApplyValue;\n}\n/**\n * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n * an element.\n */\nvar MAP_CURSORS = [];\n/**\n * Used to reset the state of each cursor value being used to iterate over map-based styling\n * bindings.\n */\nfunction resetSyncCursors() {\n    for (var i = 0; i < MAP_CURSORS.length; i++) {\n        MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n    }\n}\n/**\n * Returns an active cursor value at a given mapIndex location.\n */\nfunction getCurrentSyncCursor(mapIndex) {\n    if (mapIndex >= MAP_CURSORS.length) {\n        MAP_CURSORS.push(1 /* ValuesStartPosition */);\n    }\n    return MAP_CURSORS[mapIndex];\n}\n/**\n * Sets a cursor value at a given mapIndex location.\n */\nfunction setCurrentSyncCursor(mapIndex, indexValue) {\n    MAP_CURSORS[mapIndex] = indexValue;\n}\n/**\n * Used to convert a {key:value} map into a `StylingMapArray` array.\n *\n * This function will either generate a new `StylingMapArray` instance\n * or it will patch the provided `newValues` map value into an\n * existing `StylingMapArray` value (this only happens if `bindingValue`\n * is an instance of `StylingMapArray`).\n *\n * If a new key/value map is provided with an old `StylingMapArray`\n * value then all properties will be overwritten with their new\n * values or with `null`. This means that the array will never\n * shrink in size (but it will also not be created and thrown\n * away whenever the {key:value} map entries change).\n */\nfunction normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n    var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n    stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n    // because the new values may not include all the properties\n    // that the old ones had, all values are set to `null` before\n    // the new values are applied. This way, when flushed, the\n    // styling algorithm knows exactly what style/class values\n    // to remove from the element (since they are `null`).\n    for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n        setMapValue(stylingMapArr, j, null);\n    }\n    var props = null;\n    var map;\n    var allValuesTrue = false;\n    if (typeof newValues === 'string') { // [class] bindings allow string values\n        if (newValues.length) {\n            props = newValues.split(/\\s+/);\n            allValuesTrue = true;\n        }\n    }\n    else {\n        props = newValues ? Object.keys(newValues) : null;\n        map = newValues;\n    }\n    if (props) {\n        for (var i = 0; i < props.length; i++) {\n            var prop = props[i];\n            var newProp = normalizeProps ? hyphenate(prop) : prop;\n            var value = allValuesTrue ? true : map[prop];\n            addItemToStylingMap(stylingMapArr, newProp, value, true);\n        }\n    }\n    return stylingMapArr;\n}\n/**\n * Inserts the provided item into the provided styling array at the right spot.\n *\n * The `StylingMapArray` type is a sorted key/value array of entries. This means\n * that when a new entry is inserted it must be placed at the right spot in the\n * array. This function figures out exactly where to place it.\n */\nfunction addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n    for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n        var propAtIndex = getMapProp(stylingMapArr, j);\n        if (prop <= propAtIndex) {\n            var applied = false;\n            if (propAtIndex === prop) {\n                var valueAtIndex = stylingMapArr[j];\n                if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                    applied = true;\n                    setMapValue(stylingMapArr, j, value);\n                }\n            }\n            else {\n                applied = true;\n                stylingMapArr.splice(j, 0, prop, value);\n            }\n            return applied;\n        }\n    }\n    stylingMapArr.push(prop, value);\n    return true;\n}\n/**\n * Converts the provided styling map array into a string.\n *\n * Classes => `one two three`\n * Styles => `prop:value; prop2:value2`\n */\nfunction stylingMapToString(map, isClassBased) {\n    var str = '';\n    for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n        var prop = getMapProp(map, i);\n        var value = getMapValue(map, i);\n        var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n        str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n    }\n    return str;\n}\n/**\n * Converts the provided styling map array into a key value map.\n */\nfunction stylingMapToStringMap(map) {\n    var stringMap = {};\n    if (map) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            stringMap[prop] = value;\n        }\n    }\n    return stringMap;\n}\n\n/**\n * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n */\nfunction attachStylingDebugObject(context) {\n    var debug = new TStylingContextDebug(context);\n    attachDebugObject(context, debug);\n    return debug;\n}\n/**\n * A human-readable debug summary of the styling data present within `TStylingContext`.\n *\n * This class is designed to be used within testing code or when an\n * application has `ngDevMode` activated.\n */\nvar TStylingContextDebug = /** @class */ (function () {\n    function TStylingContextDebug(context) {\n        this.context = context;\n    }\n    Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n        get: function () { return isContextLocked(this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n        /**\n         * Returns a detailed summary of each styling entry in the context.\n         *\n         * See `TStylingTupleSummary`.\n         */\n        get: function () {\n            var context = this.context;\n            var entries = {};\n            var start = 3 /* MapBindingsPosition */;\n            var i = start;\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                // the context may contain placeholder values which are populated ahead of time,\n                // but contain no actual binding values. In this situation there is no point in\n                // classifying this as an \"entry\" since no real data is stored here yet.\n                if (valuesCount) {\n                    var prop = getProp(context, i);\n                    var guardMask = getGuardMask(context, i);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < valuesCount; j++) {\n                        sources.push(context[bindingsStartPosition + j]);\n                    }\n                    entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            return entries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TStylingContextDebug;\n}());\n/**\n * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n *\n * This class is designed to be used within testing code or when an\n * application has `ngDevMode` activated.\n */\nvar NodeStylingDebug = /** @class */ (function () {\n    function NodeStylingDebug(context, _data, _isClassBased) {\n        this.context = context;\n        this._data = _data;\n        this._isClassBased = _isClassBased;\n        this._sanitizer = null;\n    }\n    /**\n     * Overrides the sanitizer used to process styles.\n     */\n    NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n    Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n        /**\n         * Returns a detailed summary of each styling entry in the context and\n         * what their runtime representation is.\n         *\n         * See `LStylingSummary`.\n         */\n        get: function () {\n            var entries = {};\n            this._mapValues(function (prop, value, bindingIndex) {\n                entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n            });\n            return entries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n        /**\n         * Returns a key/value map of all the styles/classes that were last applied to the element.\n         */\n        get: function () {\n            var entries = {};\n            this._mapValues(function (prop, value) { entries[prop] = value; });\n            return entries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NodeStylingDebug.prototype._mapValues = function (fn) {\n        // there is no need to store/track an element instance. The\n        // element is only used when the styling algorithm attempts to\n        // style the value (and we mock out the stylingApplyFn anyway).\n        var mockElement = {};\n        var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n        if (hasMaps) {\n            activateStylingMapFeature();\n        }\n        var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n        var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n        applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n    };\n    return NodeStylingDebug;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This file contains conditionally attached classes which provide human readable (debug) level\n * information for `LView`, `LContainer` and other internal data structures. These data structures\n * are stored internally as array which makes it very difficult during debugging to reason about the\n * current state of the system.\n *\n * Patching the array with extra property does change the array's hidden class' but it does not\n * change the cost of access, therefore this patching should not have significant if any impact in\n * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n *\n * So instead of seeing:\n * ```\n * Array(30) [Object, 659, null, â¦]\n * ```\n *\n * You get to see:\n * ```\n * LViewDebug {\n *   views: [...],\n *   flags: {attached: true, ...}\n *   nodes: [\n *     {html: '<div id=\"123\">', ..., nodes: [\n *       {html: '<span>', ..., nodes: null}\n *     ]}\n *   ]\n * }\n * ```\n */\nvar LViewArray = ngDevMode && createNamedArrayType('LView');\nvar LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n// constructor could have side-effects.\n/**\n * This function clones a blueprint and creates LView.\n *\n * Simple slice will keep the same type, and we need it to be LView\n */\nfunction cloneToLView(list) {\n    if (LVIEW_EMPTY === undefined)\n        LVIEW_EMPTY = new LViewArray();\n    return LVIEW_EMPTY.concat(list);\n}\n/**\n * This class is a debug version of Object literal so that we can have constructor name show up in\n * debug tools in ngDevMode.\n */\nvar TViewConstructor = /** @class */ (function () {\n    function TView(id, //\n    blueprint, //\n    template, //\n    queries, //\n    viewQuery, //\n    node, //\n    data, //\n    bindingStartIndex, //\n    expandoStartIndex, //\n    expandoInstructions, //\n    firstTemplatePass, //\n    staticViewQueries, //\n    staticContentQueries, //\n    preOrderHooks, //\n    preOrderCheckHooks, //\n    contentHooks, //\n    contentCheckHooks, //\n    viewHooks, //\n    viewCheckHooks, //\n    destroyHooks, //\n    cleanup, //\n    contentQueries, //\n    components, //\n    directiveRegistry, //\n    pipeRegistry, //\n    firstChild, //\n    schemas) {\n        this.id = id;\n        this.blueprint = blueprint;\n        this.template = template;\n        this.queries = queries;\n        this.viewQuery = viewQuery;\n        this.node = node;\n        this.data = data;\n        this.bindingStartIndex = bindingStartIndex;\n        this.expandoStartIndex = expandoStartIndex;\n        this.expandoInstructions = expandoInstructions;\n        this.firstTemplatePass = firstTemplatePass;\n        this.staticViewQueries = staticViewQueries;\n        this.staticContentQueries = staticContentQueries;\n        this.preOrderHooks = preOrderHooks;\n        this.preOrderCheckHooks = preOrderCheckHooks;\n        this.contentHooks = contentHooks;\n        this.contentCheckHooks = contentCheckHooks;\n        this.viewHooks = viewHooks;\n        this.viewCheckHooks = viewCheckHooks;\n        this.destroyHooks = destroyHooks;\n        this.cleanup = cleanup;\n        this.contentQueries = contentQueries;\n        this.components = components;\n        this.directiveRegistry = directiveRegistry;\n        this.pipeRegistry = pipeRegistry;\n        this.firstChild = firstChild;\n        this.schemas = schemas;\n    }\n    return TView;\n}());\nvar TNodeConstructor = /** @class */ (function () {\n    function TNode(tView_, //\n    type, //\n    index, //\n    injectorIndex, //\n    directiveStart, //\n    directiveEnd, //\n    propertyMetadataStartIndex, //\n    propertyMetadataEndIndex, //\n    flags, //\n    providerIndexes, //\n    tagName, //\n    attrs, //\n    localNames, //\n    initialInputs, //\n    inputs, //\n    outputs, //\n    tViews, //\n    next, //\n    projectionNext, //\n    child, //\n    parent, //\n    projection, //\n    styles, //\n    classes) {\n        this.tView_ = tView_;\n        this.type = type;\n        this.index = index;\n        this.injectorIndex = injectorIndex;\n        this.directiveStart = directiveStart;\n        this.directiveEnd = directiveEnd;\n        this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n        this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n        this.flags = flags;\n        this.providerIndexes = providerIndexes;\n        this.tagName = tagName;\n        this.attrs = attrs;\n        this.localNames = localNames;\n        this.initialInputs = initialInputs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.tViews = tViews;\n        this.next = next;\n        this.projectionNext = projectionNext;\n        this.child = child;\n        this.parent = parent;\n        this.projection = projection;\n        this.styles = styles;\n        this.classes = classes;\n    }\n    Object.defineProperty(TNode.prototype, \"type_\", {\n        get: function () {\n            switch (this.type) {\n                case 0 /* Container */:\n                    return 'TNodeType.Container';\n                case 3 /* Element */:\n                    return 'TNodeType.Element';\n                case 4 /* ElementContainer */:\n                    return 'TNodeType.ElementContainer';\n                case 5 /* IcuContainer */:\n                    return 'TNodeType.IcuContainer';\n                case 1 /* Projection */:\n                    return 'TNodeType.Projection';\n                case 2 /* View */:\n                    return 'TNodeType.View';\n                default:\n                    return 'TNodeType.???';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TNode.prototype, \"flags_\", {\n        get: function () {\n            var flags = [];\n            if (this.flags & 8 /* hasClassInput */)\n                flags.push('TNodeFlags.hasClassInput');\n            if (this.flags & 4 /* hasContentQuery */)\n                flags.push('TNodeFlags.hasContentQuery');\n            if (this.flags & 16 /* hasStyleInput */)\n                flags.push('TNodeFlags.hasStyleInput');\n            if (this.flags & 1 /* isComponent */)\n                flags.push('TNodeFlags.isComponent');\n            if (this.flags & 32 /* isDetached */)\n                flags.push('TNodeFlags.isDetached');\n            if (this.flags & 2 /* isProjected */)\n                flags.push('TNodeFlags.isProjected');\n            return flags.join('|');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TNode;\n}());\nvar TViewData = ngDevMode && createNamedArrayType('TViewData');\nvar TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n// constructor could have side-effects.\n/**\n * This function clones a blueprint and creates TData.\n *\n * Simple slice will keep the same type, and we need it to be TData\n */\nfunction cloneToTViewData(list) {\n    if (TVIEWDATA_EMPTY === undefined)\n        TVIEWDATA_EMPTY = new TViewData();\n    return TVIEWDATA_EMPTY.concat(list);\n}\nvar LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\nvar MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\nvar TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\nvar TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\nvar TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\nvar TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\nvar LCleanup = ngDevMode && createNamedArrayType('LCleanup');\nvar TCleanup = ngDevMode && createNamedArrayType('TCleanup');\nfunction attachLViewDebug(lView) {\n    attachDebugObject(lView, new LViewDebug(lView));\n}\nfunction attachLContainerDebug(lContainer) {\n    attachDebugObject(lContainer, new LContainerDebug(lContainer));\n}\nfunction toDebug(obj) {\n    if (obj) {\n        var debug = obj.debug;\n        assertDefined(debug, 'Object does not have a debug representation.');\n        return debug;\n    }\n    else {\n        return obj;\n    }\n}\n/**\n * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n * reading.\n *\n * @param value possibly wrapped native DOM node.\n * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n * (will not serialize child elements).\n */\nfunction toHtml(value, includeChildren) {\n    if (includeChildren === void 0) { includeChildren = false; }\n    var node = unwrapRNode(value);\n    if (node) {\n        var isTextNode = node.nodeType === Node.TEXT_NODE;\n        var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n        if (includeChildren || isTextNode) {\n            return outerHTML;\n        }\n        else {\n            var innerHTML = node.innerHTML;\n            return outerHTML.split(innerHTML)[0] || null;\n        }\n    }\n    else {\n        return null;\n    }\n}\nvar LViewDebug = /** @class */ (function () {\n    function LViewDebug(_raw_lView) {\n        this._raw_lView = _raw_lView;\n    }\n    Object.defineProperty(LViewDebug.prototype, \"flags\", {\n        /**\n         * Flags associated with the `LView` unpacked into a more readable state.\n         */\n        get: function () {\n            var flags = this._raw_lView[FLAGS];\n            return {\n                __raw__flags__: flags,\n                initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                creationMode: !!(flags & 4 /* CreationMode */),\n                firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                checkAlways: !!(flags & 16 /* CheckAlways */),\n                dirty: !!(flags & 64 /* Dirty */),\n                attached: !!(flags & 128 /* Attached */),\n                destroyed: !!(flags & 256 /* Destroyed */),\n                isRoot: !!(flags & 512 /* IsRoot */),\n                indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LViewDebug.prototype, \"parent\", {\n        get: function () { return toDebug(this._raw_lView[PARENT]); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LViewDebug.prototype, \"host\", {\n        get: function () { return toHtml(this._raw_lView[HOST], true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LViewDebug.prototype, \"context\", {\n        get: function () { return this._raw_lView[CONTEXT]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n        /**\n         * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n         * tree structure with relevant details pulled out for readability.\n         */\n        get: function () {\n            var lView = this._raw_lView;\n            var tNode = lView[TVIEW].firstChild;\n            return toDebugNodes(tNode, lView);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n        /**\n         * Additional information which is hidden behind a property. The extra level of indirection is\n         * done so that the debug view would not be cluttered with properties which are only rarely\n         * relevant to the developer.\n         */\n        get: function () {\n            return {\n                tView: this._raw_lView[TVIEW],\n                cleanup: this._raw_lView[CLEANUP],\n                injector: this._raw_lView[INJECTOR$1],\n                rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                renderer: this._raw_lView[RENDERER],\n                sanitizer: this._raw_lView[SANITIZER],\n                childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                next: toDebug(this._raw_lView[NEXT]),\n                childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                queries: null,\n                tHost: this._raw_lView[T_HOST],\n                bindingIndex: this._raw_lView[BINDING_INDEX],\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n        /**\n         * Normalized view of child views (and containers) attached at this location.\n         */\n        get: function () {\n            var childViews = [];\n            var child = this.__other__.childHead;\n            while (child) {\n                childViews.push(child);\n                child = child.__other__.next;\n            }\n            return childViews;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LViewDebug;\n}());\n/**\n * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n *\n * @param tNode\n * @param lView\n */\nfunction toDebugNodes(tNode, lView) {\n    if (tNode) {\n        var debugNodes = [];\n        var tNodeCursor = tNode;\n        while (tNodeCursor) {\n            var rawValue = lView[tNode.index];\n            var native = unwrapRNode(rawValue);\n            var componentLViewDebug = toDebug(readLViewValue(rawValue));\n            var styles = isStylingContext(tNode.styles) ?\n                new NodeStylingDebug(tNode.styles, lView) :\n                null;\n            var classes = isStylingContext(tNode.classes) ?\n                new NodeStylingDebug(tNode.classes, lView, true) :\n                null;\n            debugNodes.push({\n                html: toHtml(native),\n                native: native, styles: styles, classes: classes,\n                nodes: toDebugNodes(tNode.child, lView),\n                component: componentLViewDebug,\n            });\n            tNodeCursor = tNodeCursor.next;\n        }\n        return debugNodes;\n    }\n    else {\n        return null;\n    }\n}\nvar LContainerDebug = /** @class */ (function () {\n    function LContainerDebug(_raw_lContainer) {\n        this._raw_lContainer = _raw_lContainer;\n    }\n    Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n        get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LContainerDebug.prototype, \"views\", {\n        get: function () {\n            return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                .map(toDebug);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n        get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n        get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LContainerDebug.prototype, \"host\", {\n        get: function () { return this._raw_lContainer[HOST]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LContainerDebug.prototype, \"native\", {\n        get: function () { return this._raw_lContainer[NATIVE]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n        get: function () {\n            return {\n                next: toDebug(this._raw_lContainer[NEXT]),\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LContainerDebug;\n}());\n/**\n * Return an `LView` value if found.\n *\n * @param value `LView` if any\n */\nfunction readLViewValue(value) {\n    while (Array.isArray(value)) {\n        // This check is not quite right, as it does not take into account `StylingContext`\n        // This is why it is in debug, not in util.ts\n        if (value.length >= HEADER_OFFSET - 1)\n            return value;\n        value = value[HOST];\n    }\n    return null;\n}\nvar I18NDebugItem = /** @class */ (function () {\n    function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n        this.__raw_opCode = __raw_opCode;\n        this._lView = _lView;\n        this.nodeIndex = nodeIndex;\n        this.type = type;\n    }\n    Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n        get: function () { return getTNode(this.nodeIndex, this._lView); },\n        enumerable: true,\n        configurable: true\n    });\n    return I18NDebugItem;\n}());\n/**\n * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n * debugging purposes.\n * @param mutateOpCodes mutation opCodes to read\n * @param updateOpCodes update opCodes to read\n * @param icus list of ICU expressions\n * @param lView The view the opCodes are acting on\n */\nfunction attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n    attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n    attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n    if (icus) {\n        icus.forEach(function (icu) {\n            icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n            icu.update.forEach(function (icuCase) {\n                attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n            });\n        });\n    }\n}\nvar I18nMutateOpCodesDebug = /** @class */ (function () {\n    function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n        this.__raw_opCodes = __raw_opCodes;\n        this.__lView = __lView;\n    }\n    Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n        /**\n         * A list of operation information about how the OpCodes will act on the view.\n         */\n        get: function () {\n            var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n            var results = [];\n            for (var i = 0; i < __raw_opCodes.length; i++) {\n                var opCode = __raw_opCodes[i];\n                var result = void 0;\n                if (typeof opCode === 'string') {\n                    result = {\n                        __raw_opCode: opCode,\n                        type: 'Create Text Node',\n                        nodeIndex: __raw_opCodes[++i],\n                        text: opCode,\n                    };\n                }\n                if (typeof opCode === 'number') {\n                    switch (opCode & 7 /* MASK_OPCODE */) {\n                        case 1 /* AppendChild */:\n                            var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                            result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                            break;\n                        case 0 /* Select */:\n                            var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                            result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                            break;\n                        case 5 /* ElementEnd */:\n                            var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                            result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                            break;\n                        case 4 /* Attr */:\n                            elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                            result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                            result['attrName'] = __raw_opCodes[++i];\n                            result['attrValue'] = __raw_opCodes[++i];\n                            break;\n                    }\n                }\n                if (!result) {\n                    switch (opCode) {\n                        case COMMENT_MARKER:\n                            result = {\n                                __raw_opCode: opCode,\n                                type: 'COMMENT_MARKER',\n                                commentValue: __raw_opCodes[++i],\n                                nodeIndex: __raw_opCodes[++i],\n                            };\n                            break;\n                        case ELEMENT_MARKER:\n                            result = {\n                                __raw_opCode: opCode,\n                                type: 'ELEMENT_MARKER',\n                            };\n                            break;\n                    }\n                }\n                if (!result) {\n                    result = {\n                        __raw_opCode: opCode,\n                        type: 'Unknown Op Code',\n                        code: opCode,\n                    };\n                }\n                results.push(result);\n            }\n            return results;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return I18nMutateOpCodesDebug;\n}());\nvar I18nUpdateOpCodesDebug = /** @class */ (function () {\n    function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n        this.__raw_opCodes = __raw_opCodes;\n        this.icus = icus;\n        this.__lView = __lView;\n    }\n    Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n        /**\n         * A list of operation information about how the OpCodes will act on the view.\n         */\n        get: function () {\n            var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n            var results = [];\n            for (var i = 0; i < __raw_opCodes.length; i++) {\n                // bit code to check if we should apply the next update\n                var checkBit = __raw_opCodes[i];\n                // Number of opCodes to skip until next set of update codes\n                var skipCodes = __raw_opCodes[++i];\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = __raw_opCodes[j];\n                    if (typeof opCode === 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            // We cannot know the value of the binding so we only show the index\n                            value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = __raw_opCodes[++j];\n                                    var sanitizeFn = __raw_opCodes[++j];\n                                    results.push({\n                                        __raw_opCode: opCode,\n                                        checkBit: checkBit,\n                                        type: 'Attr',\n                                        attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                    });\n                                    break;\n                                case 0 /* Text */:\n                                    results.push({\n                                        __raw_opCode: opCode,\n                                        checkBit: checkBit,\n                                        type: 'Text', nodeIndex: nodeIndex,\n                                        text: value,\n                                    });\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = __raw_opCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                    result['tIcuIndex'] = tIcuIndex;\n                                    result['checkBit'] = checkBit;\n                                    result['mainBinding'] = value;\n                                    result['tIcu'] = tIcu;\n                                    results.push(result);\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = __raw_opCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                    result['tIcuIndex'] = tIcuIndex;\n                                    result['checkBit'] = checkBit;\n                                    result['tIcu'] = tIcu;\n                                    results.push(result);\n                                    break;\n                            }\n                        }\n                    }\n                }\n                i += skipCodes;\n            }\n            return results;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return I18nUpdateOpCodesDebug;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Selects an element for later binding instructions.\n *\n * Used in conjunction with instructions like {@link property} to act on elements with specified\n * indices, for example those created with {@link element} or {@link elementStart}.\n *\n * ```ts\n * (rf: RenderFlags, ctx: any) => {\n *   if (rf & 1) {\n *     element(0, 'div');\n *   }\n *   if (rf & 2) {\n *     select(0); // Select the <div/> created above.\n *     property('title', 'test');\n *   }\n *  }\n * ```\n * @param index the index of the item to act on with the following instructions\n *\n * @codeGenApi\n */\nfunction ÉµÉµselect(index) {\n    ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n    ngDevMode &&\n        assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n    var lView = getLView();\n    selectInternal(lView, index);\n}\nfunction selectInternal(lView, index) {\n    // Flush the initial hooks for elements in the view that have been added up to this point.\n    executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    // We must set the selected index *after* running the hooks, because hooks may have side-effects\n    // that cause other template functions to run, thus updating the selected index, which is global\n    // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n    // will be altered by the time we leave the `ÉµÉµselect` instruction.\n    setSelectedIndex(index);\n}\n\nvar Éµ0$4 = function () { return Promise.resolve(null); };\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = (Éµ0$4)();\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings, refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nfunction refreshDescendantViews(lView) {\n    var tView = lView[TVIEW];\n    var creationMode = isCreationMode(lView);\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = false;\n    // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n    lView[BINDING_INDEX] = tView.bindingStartIndex;\n    // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n    // This will be done in the update pass.\n    if (!creationMode) {\n        var checkNoChangesMode = getCheckNoChangesMode();\n        executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n        refreshDynamicEmbeddedViews(lView);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView, lView);\n        resetPreOrderHookFlags(lView);\n        executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n        setHostBindings(tView, lView);\n    }\n    // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n    // content queries are resolved during change detection (i.e. update mode), after embedded\n    // views are refreshed (see block above).\n    if (creationMode && tView.staticContentQueries) {\n        refreshContentQueries(tView, lView);\n    }\n    // We must materialize query results before child components are processed\n    // in case a child component has projected a container. The LContainer needs\n    // to exist so the embedded views are properly attached by the container.\n    if (!creationMode || tView.staticViewQueries) {\n        executeViewQueryFn(2 /* Update */, tView, lView[CONTEXT]);\n    }\n    refreshChildComponents(lView, tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(tView, viewData) {\n    var selectedIndex = getSelectedIndex();\n    try {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        setActiveHostElement(currentElementIndex);\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                        instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        // Each directive gets a uniqueId value that is the same for both\n                        // create and update calls when the hostBindings function is called. The\n                        // directive uniqueId is not set anywhere--it is just incremented between\n                        // each hostBindings call and is useful for helping instruction code\n                        // uniquely determine which directive is currently active when executed.\n                        incrementActiveDirectiveId();\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    finally {\n        setActiveHostElement(selectedIndex);\n    }\n}\n/** Refreshes all content queries declared by directives in a given view */\nfunction refreshContentQueries(tView, lView) {\n    var contentQueries = tView.contentQueries;\n    if (contentQueries !== null) {\n        for (var i = 0; i < contentQueries.length; i += 2) {\n            var queryStartIdx = contentQueries[i];\n            var directiveDefIdx = contentQueries[i + 1];\n            if (directiveDefIdx !== -1) {\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                setCurrentQueryIndex(queryStartIdx);\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(hostLView, components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(hostLView, components[i]);\n        }\n    }\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param name the tag name\n * @param overriddenRenderer Optional A renderer to override the default one\n * @returns the element created\n */\nfunction elementCreate(name, overriddenRenderer) {\n    var native;\n    var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n    var namespace = getNamespace();\n    if (isProceduralRenderer(rendererToUse)) {\n        native = rendererToUse.createElement(name, namespace);\n    }\n    else {\n        if (namespace === null) {\n            native = rendererToUse.createElement(name);\n        }\n        else {\n            native = rendererToUse.createElementNS(namespace, name);\n        }\n    }\n    return native;\n}\nfunction createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n    var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n    lView[HOST] = host;\n    lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n    resetPreOrderHookFlags(lView);\n    lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n    lView[CONTEXT] = context;\n    lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n    ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n    lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n    ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n    lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n    lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n    lView[T_HOST] = tHostNode;\n    ngDevMode && attachLViewDebug(lView);\n    return lView;\n}\nfunction getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n    // Keep this function short, so that the VM will inline it.\n    var adjustedIndex = index + HEADER_OFFSET;\n    var tNode = tView.data[adjustedIndex] ||\n        createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n    setPreviousOrParentTNode(tNode, true);\n    return tNode;\n}\nfunction createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var isParent = getIsParent();\n    var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var parentInSameView = parent && parent !== tHostNode;\n    var tParentNode = parentInSameView ? parent : null;\n    var tNode = tView.data[adjustedIndex] =\n        createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n    // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n    // instruction `i18nStart` and the first node has the index 1 or more\n    if (index === 0 || !tView.firstChild) {\n        tView.firstChild = tNode;\n    }\n    // Now link ourselves into the tree.\n    if (previousOrParentTNode) {\n        if (isParent && previousOrParentTNode.child == null &&\n            (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n            // We are in the same view, which means we are adding content node to the parent view.\n            previousOrParentTNode.child = tNode;\n        }\n        else if (!isParent) {\n            previousOrParentTNode.next = tNode;\n        }\n    }\n    return tNode;\n}\nfunction assignTViewNodeToLView(tView, tParentNode, index, lView) {\n    // View nodes are not stored in data because they can be added / removed at runtime (which\n    // would cause indices to change). Their TNodes are instead stored in tView.node.\n    var tNode = tView.node;\n    if (tNode == null) {\n        ngDevMode && tParentNode &&\n            assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n        tView.node = tNode = createTNode(tView, tParentNode, //\n        2 /* View */, index, null, null);\n    }\n    return lView[T_HOST] = tNode;\n}\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n *\n * @param view The LView containing the blueprint to adjust\n * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n */\nfunction allocExpando(view, numSlotsToAlloc) {\n    ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n    if (numSlotsToAlloc > 0) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nfunction createEmbeddedViewAndNode(tView, context, declarationView, injectorIndex) {\n    var _isParent = getIsParent();\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    setPreviousOrParentTNode(null, true);\n    var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n    lView[DECLARATION_VIEW] = declarationView;\n    assignTViewNodeToLView(tView, null, -1, lView);\n    if (tView.firstTemplatePass) {\n        tView.node.injectorIndex = injectorIndex;\n    }\n    setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n    return lView;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n * inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewToRender, tView, context) {\n    var _isParent = getIsParent();\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    var oldView;\n    if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n        // This is a root view inside the view tree\n        tickRootContext(getRootContext(viewToRender));\n    }\n    else {\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            setPreviousOrParentTNode(null, true);\n            oldView = enterView(viewToRender, viewToRender[T_HOST]);\n            resetPreOrderHookFlags(viewToRender);\n            executeTemplate(viewToRender, tView.template, getRenderFlags(viewToRender), context);\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            tView.firstTemplatePass = false;\n            refreshDescendantViews(viewToRender);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        }\n    }\n}\nfunction renderComponentOrTemplate(hostView, context, templateFn) {\n    var rendererFactory = hostView[RENDERER_FACTORY];\n    var oldView = enterView(hostView, hostView[T_HOST]);\n    var normalExecutionPath = !getCheckNoChangesMode();\n    var creationModeIsActive = isCreationMode(hostView);\n    // Will become true if the `try` block executes with no errors.\n    var safeToRunHooks = false;\n    try {\n        if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (creationModeIsActive) {\n            // creation mode pass\n            templateFn && executeTemplate(hostView, templateFn, 1 /* Create */, context);\n            refreshDescendantViews(hostView);\n            hostView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        // update mode pass\n        resetPreOrderHookFlags(hostView);\n        templateFn && executeTemplate(hostView, templateFn, 2 /* Update */, context);\n        refreshDescendantViews(hostView);\n        safeToRunHooks = true;\n    }\n    finally {\n        if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView, safeToRunHooks);\n    }\n}\nfunction executeTemplate(lView, templateFn, rf, context) {\n    namespaceHTMLInternal();\n    var prevSelectedIndex = getSelectedIndex();\n    try {\n        setActiveHostElement(null);\n        if (rf & 2 /* Update */) {\n            // When we're updating, have an inherent ÉµÉµselect(0) so we don't have to generate that\n            // instruction for most update blocks\n            selectInternal(lView, 0);\n        }\n        templateFn(rf, context);\n    }\n    finally {\n        setSelectedIndex(prevSelectedIndex);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. Update block and create block are\n * always run separately.\n */\nfunction getRenderFlags(view) {\n    return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n}\n//////////////////////////\n//// Element\n//////////////////////////\nfunction executeContentQueries(tView, tNode, lView) {\n    if (isContentQueryHost(tNode)) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n            var def = tView.data[directiveIndex];\n            if (def.contentQueries) {\n                def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n            }\n        }\n    }\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the node in question\n * @param localRefExtractor mapping function that extracts local ref value from TNode\n */\nfunction createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n    if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n    if (!getBindingsEnabled())\n        return;\n    instantiateAllDirectives(tView, lView, tNode);\n    invokeDirectivesHostBindings(tView, lView, tNode);\n    saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n    setActiveHostElement(null);\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LView in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        var localIndex = tNode.index + 1;\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ?\n                localRefExtractor(tNode, viewData) :\n                viewData[index];\n            viewData[localIndex++] = value;\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param def ComponentDef\n * @returns TView\n */\nfunction getOrCreateTView(def) {\n    return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param templateFn Template function\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n * @param viewQuery View queries for this view\n * @param schemas Schemas for this view\n */\nfunction createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n    ngDevMode && ngDevMode.tView++;\n    var bindingStartIndex = HEADER_OFFSET + consts;\n    // This length does not yet contain host bindings from child directives because at this point,\n    // we don't know which directives are active on this template. As soon as a directive is matched\n    // that has a host binding, we will update the blueprint with that def's hostVars count.\n    var initialViewLength = bindingStartIndex + vars;\n    var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n    return blueprint[TVIEW] = ngDevMode ?\n        new TViewConstructor(viewIndex, // id: number,\n        blueprint, // blueprint: LView,\n        templateFn, // template: ComponentTemplate<{}>|null,\n        null, // queries: TQueries|null\n        viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n        null, // node: TViewNode|TElementNode|null,\n        cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n        bindingStartIndex, // bindingStartIndex: number,\n        initialViewLength, // expandoStartIndex: number,\n        null, // expandoInstructions: ExpandoInstructions|null,\n        true, // firstTemplatePass: boolean,\n        false, // staticViewQueries: boolean,\n        false, // staticContentQueries: boolean,\n        null, // preOrderHooks: HookData|null,\n        null, // preOrderCheckHooks: HookData|null,\n        null, // contentHooks: HookData|null,\n        null, // contentCheckHooks: HookData|null,\n        null, // viewHooks: HookData|null,\n        null, // viewCheckHooks: HookData|null,\n        null, // destroyHooks: HookData|null,\n        null, // cleanup: any[]|null,\n        null, // contentQueries: number[]|null,\n        null, // components: number[]|null,\n        typeof directives === 'function' ?\n            directives() :\n            directives, // directiveRegistry: DirectiveDefList|null,\n        typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n        null, // firstChild: TNode|null,\n        schemas) :\n        {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            queries: null,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n}\nfunction createViewBlueprint(bindingStartIndex, initialViewLength) {\n    var blueprint = new (ngDevMode ? LViewBlueprint : Array)(initialViewLength)\n        .fill(null, 0, bindingStartIndex)\n        .fill(NO_CHANGE, bindingStartIndex);\n    blueprint[BINDING_INDEX] = bindingStartIndex;\n    return blueprint;\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(lView, context, cleanupFn) {\n    var lCleanup = getCleanup(lView);\n    lCleanup.push(context);\n    if (lView[TVIEW].firstTemplatePass) {\n        getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n    ngDevMode && ngDevMode.tNode++;\n    var injectorIndex = tParent ? tParent.injectorIndex : -1;\n    return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n    type, // type: TNodeType\n    adjustedIndex, // index: number\n    injectorIndex, // injectorIndex: number\n    -1, // directiveStart: number\n    -1, // directiveEnd: number\n    -1, // propertyMetadataStartIndex: number\n    -1, // propertyMetadataEndIndex: number\n    0, // flags: TNodeFlags\n    0, // providerIndexes: TNodeProviderIndexes\n    tagName, // tagName: string|null\n    attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n    null, // localNames: (string|number)[]|null\n    undefined, // initialInputs: (string[]|null)[]|null|undefined\n    undefined, // inputs: PropertyAliases|null|undefined\n    undefined, // outputs: PropertyAliases|null|undefined\n    null, // tViews: ITView|ITView[]|null\n    null, // next: ITNode|null\n    null, // projectionNext: ITNode|null\n    null, // child: ITNode|null\n    tParent, // parent: TElementNode|TContainerNode|null\n    null, // projection: number|(ITNode|RNode[])[]|null\n    null, // styles: TStylingContext|null\n    null) :\n        {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: injectorIndex,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            projection: null,\n            styles: null,\n            classes: null,\n        };\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param tNode\n * @param direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNode, direction) {\n    var tView = getLView()[TVIEW];\n    var propStore = null;\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    if (end > start) {\n        var isInput = direction === 0 /* Input */;\n        var defs = tView.data;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                        (propStore[publicName] = [i, publicName, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Mapping between attributes names that don't correspond to their element property names.\n * Note: this mapping has to be kept in sync with the equally named mapping in the template\n * type-checking machinery of ngtsc.\n */\nvar ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nfunction elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n    ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    var lView = getLView();\n    var element = getNativeByIndex(index, lView);\n    var tNode = getTNode(index, lView);\n    var inputData;\n    var dataValue;\n    if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n        (dataValue = inputData[propName])) {\n        setInputsForProperty(lView, dataValue, value);\n        if (isComponent(tNode))\n            markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n        if (ngDevMode) {\n            if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                /**\n                 * dataValue is an array containing runtime input or output names for the directives:\n                 * i+0: directive instance index\n                 * i+1: publicName\n                 * i+2: privateName\n                 *\n                 * e.g. [0, 'change', 'change-minified']\n                 * we want to set the reflected property with the privateName: dataValue[i+2]\n                 */\n                for (var i = 0; i < dataValue.length; i += 3) {\n                    setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                }\n            }\n        }\n    }\n    else if (tNode.type === 3 /* Element */) {\n        propName = ATTR_TO_PROP[propName] || propName;\n        if (ngDevMode) {\n            validateAgainstEventProperties(propName);\n            validateAgainstUnknownProperties(lView, element, propName, tNode);\n            ngDevMode.rendererSetProperty++;\n        }\n        savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n        var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n        // It is assumed that the sanitizer is only added when the compiler determines that the\n        // property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n        if (isProceduralRenderer(renderer)) {\n            renderer.setProperty(element, propName, value);\n        }\n        else if (!isAnimationProp(propName)) {\n            element.setProperty ? element.setProperty(propName, value) :\n                element[propName] = value;\n        }\n    }\n    else if (tNode.type === 0 /* Container */) {\n        // If the node is a container and the property didn't\n        // match any of the inputs or schemas we should throw.\n        if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n}\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(lView, viewIndex) {\n    ngDevMode && assertLView(lView);\n    var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n    if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n        childComponentLView[FLAGS] |= 64 /* Dirty */;\n    }\n}\nfunction setNgReflectProperty(lView, element, type, attrName, value) {\n    var _a;\n    var renderer = lView[RENDERER];\n    attrName = normalizeDebugBindingName(attrName);\n    var debugValue = normalizeDebugBindingValue(value);\n    if (type === 3 /* Element */) {\n        if (value == null) {\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                element.removeAttribute(attrName);\n        }\n        else {\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(element, attrName, debugValue) :\n                element.setAttribute(attrName, debugValue);\n        }\n    }\n    else {\n        var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n        if (isProceduralRenderer(renderer)) {\n            renderer.setValue(element, textContent);\n        }\n        else {\n            element.textContent = textContent;\n        }\n    }\n}\nfunction validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n    // If the tag matches any of the schemas we shouldn't throw.\n    if (matchingSchemas(hostView, tNode.tagName)) {\n        return;\n    }\n    // If prop is not a known property of the HTML element...\n    if (!(propName in element) &&\n        // and we are in a browser context... (web worker nodes should be skipped)\n        typeof Node === 'function' && element instanceof Node &&\n        // and isn't a synthetic animation property...\n        propName[0] !== ANIMATION_PROP_PREFIX) {\n        // ... it is probably a user error and we should throw.\n        throw createUnknownPropertyError(propName, tNode);\n    }\n}\nfunction matchingSchemas(hostView, tagName) {\n    var schemas = hostView[TVIEW].schemas;\n    if (schemas !== null) {\n        for (var i = 0; i < schemas.length; i++) {\n            var schema = schemas[i];\n            if (schema === NO_ERRORS_SCHEMA ||\n                schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**\n* Stores debugging data for this property binding on first template pass.\n* This enables features like DebugElement.properties.\n*/\nfunction savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n    var lastBindingIndex = lView[BINDING_INDEX] - 1;\n    // Bind/interpolation functions save binding metadata in the last binding index,\n    // but leave the property name blank. If the interpolation delimiter is at the 0\n    // index, we know that this is our first pass and the property name still needs to\n    // be set.\n    var bindingMetadata = tData[lastBindingIndex];\n    if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n        tData[lastBindingIndex] = propName + bindingMetadata;\n        // We don't want to store indices for host bindings because they are stored in a\n        // different part of LView (the expando section).\n        if (!nativeOnly) {\n            if (tNode.propertyMetadataStartIndex == -1) {\n                tNode.propertyMetadataStartIndex = lastBindingIndex;\n            }\n            tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n        }\n    }\n}\n/**\n* Creates an error that should be thrown when encountering an unknown property on an element.\n* @param propName Name of the invalid property.\n* @param tNode Node on which we encountered the error.\n*/\nfunction createUnknownPropertyError(propName, tNode) {\n    return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n}\n/**\n * Instantiate a root component.\n */\nfunction instantiateRootComponent(tView, viewData, def) {\n    var rootTNode = getPreviousOrParentTNode();\n    if (tView.firstTemplatePass) {\n        if (def.providersResolver)\n            def.providersResolver(def);\n        generateExpandoInstructionBlock(tView, rootTNode, 1);\n        baseResolveDirective(tView, viewData, def, def.factory);\n    }\n    var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n    postProcessBaseDirective(viewData, rootTNode, directive);\n    return directive;\n}\n/**\n * Resolve the matched directives on a node.\n */\nfunction resolveDirectives(tView, lView, tNode, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n    // tsickle.\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n    if (!getBindingsEnabled())\n        return;\n    var directives = findDirectiveMatches(tView, lView, tNode);\n    var exportsMap = localRefs ? { '': -1 } : null;\n    if (directives) {\n        initNodeFlags(tNode, tView.data.length, directives.length);\n        // When the same token is provided by several directives on the same node, some rules apply in\n        // the viewEngine:\n        // - viewProviders have priority over providers\n        // - the last directive in NgModule.declarations has priority over the previous one\n        // So to match these rules, the order in which providers are added in the arrays is very\n        // important.\n        for (var i = 0; i < directives.length; i++) {\n            var def = directives[i];\n            if (def.providersResolver)\n                def.providersResolver(def);\n        }\n        generateExpandoInstructionBlock(tView, tNode, directives.length);\n        var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n        var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n        var nodeIndex = tNode.index - HEADER_OFFSET;\n        for (var i = 0; i < directives.length; i++) {\n            var def = directives[i];\n            var directiveDefIdx = tView.data.length;\n            baseResolveDirective(tView, lView, def, def.factory);\n            saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/**\n * Instantiate all the directives that were previously resolved on the current node.\n */\nfunction instantiateAllDirectives(tView, lView, tNode) {\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    if (!tView.firstTemplatePass && start < end) {\n        getOrCreateNodeInjectorForNode(tNode, lView);\n    }\n    for (var i = start; i < end; i++) {\n        var def = tView.data[i];\n        if (isComponentDef(def)) {\n            addComponentLogic(lView, tNode, def);\n        }\n        var directive = getNodeInjectable(tView.data, lView, i, tNode);\n        postProcessDirective(lView, directive, def, i);\n    }\n}\nfunction invokeDirectivesHostBindings(tView, viewData, tNode) {\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    var expando = tView.expandoInstructions;\n    var firstTemplatePass = tView.firstTemplatePass;\n    var elementIndex = tNode.index - HEADER_OFFSET;\n    var selectedIndex = getSelectedIndex();\n    try {\n        setActiveHostElement(elementIndex);\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                // Each directive gets a uniqueId value that is the same for both\n                // create and update calls when the hostBindings function is called. The\n                // directive uniqueId is not set anywhere--it is just incremented between\n                // each hostBindings call and is useful for helping instruction code\n                // uniquely determine which directive is currently active when executed.\n                incrementActiveDirectiveId();\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    finally {\n        setActiveHostElement(selectedIndex);\n    }\n}\nfunction invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n    var previousExpandoLength = expando.length;\n    setCurrentDirectiveDef(def);\n    var elementIndex = tNode.index - HEADER_OFFSET;\n    def.hostBindings(1 /* Create */, directive, elementIndex);\n    setCurrentDirectiveDef(null);\n    // `hostBindings` function may or may not contain `allocHostVars` call\n    // (e.g. it may not if it only contains host listeners), so we need to check whether\n    // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n    // expando block, to make sure we execute it for DI cycle\n    if (previousExpandoLength === expando.length && firstTemplatePass) {\n        expando.push(def.hostBindings);\n    }\n}\n/**\n* Generates a new block in TView.expandoInstructions for this node.\n*\n* Each expando block starts with the element index (turned negative so we can distinguish\n* it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n*/\nfunction generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n    var elementIndex = -(tNode.index - HEADER_OFFSET);\n    var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n    var providerCount = tView.data.length - providerStartIndex;\n    (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n}\n/**\n * Process a directive on the current node after its creation.\n */\nfunction postProcessDirective(viewData, directive, def, directiveDefIdx) {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n    ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n    if (previousOrParentTNode && previousOrParentTNode.attrs) {\n        setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n    }\n    if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n        previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n    }\n    if (isComponentDef(def)) {\n        var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n        componentView[CONTEXT] = directive;\n    }\n}\n/**\n * A lighter version of postProcessDirective() that is used for the root component.\n */\nfunction postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent(getIsParent());\n    attachPatchData(directive, lView);\n    if (native) {\n        attachPatchData(native, lView);\n    }\n}\n/**\n* Matches the current node against all available selectors.\n* If a component is matched (at most one), it is returned in first position in the array.\n*/\nfunction findDirectiveMatches(tView, viewData, tNode) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n    var registry = tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                matches || (matches = ngDevMode ? new MatchesArray() : []);\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                if (isComponentDef(def)) {\n                    if (tNode.flags & 1 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 1 /* isComponent */;\n                    // The component is always stored first with directives after.\n                    matches.unshift(def);\n                }\n                else {\n                    matches.push(def);\n                }\n            }\n        }\n    }\n    return matches;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(previousOrParentTNode) {\n    var tView = getLView()[TVIEW];\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n    (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(previousOrParentTNode.index);\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames =\n            ngDevMode ? new TNodeLocalNames() : [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n* Builds up an export map as directives are created, so local refs can be quickly mapped\n* to their directive instances.\n*/\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs) {\n            for (var i = 0; i < def.exportAs.length; i++) {\n                exportsMap[def.exportAs[i]] = index;\n            }\n        }\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Initializes the flags on the current node, setting all indices to the initial index,\n * the directive count to 0, and adding the isComponent flag.\n * @param index the initial index\n */\nfunction initNodeFlags(tNode, index, numberOfDirectives) {\n    var flags = tNode.flags;\n    ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n    ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n    // When the first directive is created on a node, save the index\n    tNode.flags = flags & 1 /* isComponent */;\n    tNode.directiveStart = index;\n    tNode.directiveEnd = index + numberOfDirectives;\n    tNode.providerIndexes = index;\n}\nfunction baseResolveDirective(tView, viewData, def, directiveFactory) {\n    tView.data.push(def);\n    var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n    tView.blueprint.push(nodeInjectorFactory);\n    viewData.push(nodeInjectorFactory);\n}\nfunction addComponentLogic(lView, previousOrParentTNode, def) {\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    var tView = getOrCreateTView(def);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var rendererFactory = lView[RENDERER_FACTORY];\n    var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n    componentView[T_HOST] = previousOrParentTNode;\n    // Component view will always be created before any injected LContainers,\n    // so this is a regular element, wrap it with the component view\n    lView[previousOrParentTNode.index] = componentView;\n    if (lView[TVIEW].firstTemplatePass) {\n        queueComponentIndexForCheck(previousOrParentTNode);\n    }\n}\nfunction elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n    ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    ngDevMode && validateAgainstEventAttributes(name);\n    var element = getNativeByIndex(index, lView);\n    var renderer = lView[RENDERER];\n    if (value == null) {\n        ngDevMode && ngDevMode.rendererRemoveAttribute++;\n        isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n            element.removeAttribute(name);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererSetAttribute++;\n        var tNode = getTNode(index, lView);\n        var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n        if (isProceduralRenderer(renderer)) {\n            renderer.setAttribute(element, name, strValue, namespace);\n        }\n        else {\n            namespace ? element.setAttributeNS(namespace, name, strValue) :\n                element.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param def The directive def that contains the list of inputs\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        var setInput = def.setInput;\n        for (var i = 0; i < initialInputs.length;) {\n            var publicName = initialInputs[i++];\n            var privateName = initialInputs[i++];\n            var value = initialInputs[i++];\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n            if (ngDevMode) {\n                var lView = getLView();\n                var nativeElement = getNativeByTNode(tNode, lView);\n                setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n            }\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n    // Ensure that we don't create sparse arrays\n    for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n        initialInputData.push(null);\n    }\n    var attrs = tNode.attrs;\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        else if (attrName === 5 /* ProjectAs */) {\n            // Skip over the `ngProjectAs` value.\n            i += 2;\n            continue;\n        }\n        // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n        if (typeof attrName === 'number')\n            break;\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] ||\n                (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n            inputsToStore.push(attrName, minifiedInputName, attrValue);\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n// Not sure why I need to do `any` here but TS complains later.\nvar LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param hostNative The host element for the LContainer\n * @param hostTNode The host TNode for the LContainer\n * @param currentView The parent view of the LContainer\n * @param native The native comment element\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n    ngDevMode && assertDomNode(native);\n    ngDevMode && assertLView(currentView);\n    // https://jsperf.com/array-literal-vs-new-array-really\n    var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n    true, // Boolean `true` in this position signifies that this is an `LContainer`\n    isForViewContainerRef ? -1 : 0, // active index\n    currentView, // parent\n    null, // next\n    null, // queries\n    tNode, // t_host\n    native, // native,\n    null);\n    ngDevMode && attachLContainerDebug(lContainer);\n    return lContainer;\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n * them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lView) {\n    for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n        // Note: current can be an LView or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LView\n        // header.\n        if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n            for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                var dynamicViewData = current[i];\n                // The directives and pipes are not needed here as an existing view is only being\n                // refreshed.\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n            }\n        }\n    }\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n */\nfunction componentRefresh(hostLView, adjustedElementIndex) {\n    ngDevMode && assertDataInRange(hostLView, adjustedElementIndex);\n    var componentView = getComponentViewByIndex(adjustedElementIndex, hostLView);\n    ngDevMode &&\n        assertNodeType(hostLView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n    // Only components in creation mode, attached CheckAlways\n    // components or attached, dirty OnPush components should be checked\n    if ((viewAttachedToChangeDetector(componentView) || isCreationMode(hostLView)) &&\n        componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n        syncViewWithBlueprint(componentView);\n        checkView(componentView, componentView[CONTEXT]);\n    }\n}\n/**\n * Syncs an LView instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LView is created.\n * 3. Second <comp> is matched as a component and its LView is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LView was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param componentView The view to sync\n */\nfunction syncViewWithBlueprint(componentView) {\n    var componentTView = componentView[TVIEW];\n    for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n        componentView[i] = componentTView.blueprint[i];\n    }\n}\n/**\n * Adds LView or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param lView The view where LView or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n * @param lViewOrLContainer The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(lView, lViewOrLContainer) {\n    // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n    // to\n    // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n    // of\n    // order, the change detection will run out of order, as the act of retrieving the the\n    // LContainer\n    // from the RNode is what adds it to the queue.\n    if (lView[CHILD_HEAD]) {\n        lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n    }\n    else {\n        lView[CHILD_HEAD] = lViewOrLContainer;\n    }\n    lView[CHILD_TAIL] = lViewOrLContainer;\n    return lViewOrLContainer;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/**\n * Marks current view and all ancestors dirty.\n *\n * Returns the root view because it is found as a byproduct of marking the view tree\n * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n * change detection. Otherwise, such methods would need to traverse up the view tree\n * an additional time to get the root view and schedule a tick on it.\n *\n * @param lView The starting LView to mark dirty\n * @returns the root LView\n */\nfunction markViewDirty(lView) {\n    while (lView) {\n        lView[FLAGS] |= 64 /* Dirty */;\n        var parent_1 = getLViewParent(lView);\n        // Stop traversing up as soon as you find a root view that wasn't attached to any container\n        if (isRootView(lView) && !parent_1) {\n            return lView;\n        }\n        // continue otherwise\n        lView = parent_1;\n    }\n    return null;\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext, flags) {\n    var nothingScheduled = rootContext.flags === 0 /* Empty */;\n    rootContext.flags |= flags;\n    if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            if (rootContext.flags & 1 /* DetectChanges */) {\n                rootContext.flags &= ~1 /* DetectChanges */;\n                tickRootContext(rootContext);\n            }\n            if (rootContext.flags & 2 /* FlushPlayers */) {\n                rootContext.flags &= ~2 /* FlushPlayers */;\n                var playerHandler = rootContext.playerHandler;\n                if (playerHandler) {\n                    playerHandler.flushPlayers();\n                }\n            }\n            rootContext.clean = _CLEAN_PROMISE;\n            res_1(null);\n        });\n    }\n}\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n    }\n}\nfunction detectChangesInternal(view, context) {\n    var rendererFactory = view[RENDERER_FACTORY];\n    if (rendererFactory.begin)\n        rendererFactory.begin();\n    try {\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n    }\n    catch (error) {\n        handleError(view, error);\n        throw error;\n    }\n    finally {\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n}\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param lView The view which the change detection should be performed on.\n */\nfunction detectChangesInRootView(lView) {\n    tickRootContext(lView[CONTEXT]);\n}\nfunction checkNoChangesInternal(view, context) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChangesInternal(view, context);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param lView The view which the change detection should be checked on.\n */\nfunction checkNoChangesInRootView(lView) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChangesInRootView(lView);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n */\nfunction checkView(hostView, component) {\n    var hostTView = hostView[TVIEW];\n    var oldView = enterView(hostView, hostView[T_HOST]);\n    var templateFn = hostTView.template;\n    var creationMode = isCreationMode(hostView);\n    // Will become true if the `try` block executes with no errors.\n    var safeToRunHooks = false;\n    try {\n        resetPreOrderHookFlags(hostView);\n        creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n        executeTemplate(hostView, templateFn, getRenderFlags(hostView), component);\n        refreshDescendantViews(hostView);\n        safeToRunHooks = true;\n    }\n    finally {\n        leaveView(oldView, safeToRunHooks);\n    }\n}\nfunction executeViewQueryFn(flags, tView, component) {\n    var viewQuery = tView.viewQuery;\n    if (viewQuery !== null) {\n        setCurrentQueryIndex(0);\n        viewQuery(flags, component);\n    }\n}\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n/**\n * Creates binding metadata for a particular binding and stores it in\n * TView.data. These are generated in order to support DebugElement.properties.\n *\n * Each binding / interpolation will have one (including attribute bindings)\n * because at the time of binding, we don't know to which instruction the binding\n * belongs. It is always stored in TView.data at the index of the last binding\n * value in LView (e.g. for interpolation8, it would be stored at the index of\n * the 8th value).\n *\n * @param lView The LView that contains the current binding index.\n * @param prefix The static prefix string\n * @param suffix The static suffix string\n *\n * @returns Newly created binding metadata string for this binding or null\n */\nfunction storeBindingMetadata(lView, prefix, suffix) {\n    if (prefix === void 0) { prefix = ''; }\n    if (suffix === void 0) { suffix = ''; }\n    var tData = lView[TVIEW].data;\n    var lastBindingIndex = lView[BINDING_INDEX] - 1;\n    var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n    return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nfunction initializeTNodeInputs(tNode) {\n    // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked.\n    if (tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n    }\n    return tNode.inputs;\n}\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n}\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n}\n/**\n * There are cases where the sub component's renderer needs to be included\n * instead of the current renderer (see the componentSyntheticHost* instructions).\n */\nfunction loadComponentRenderer(tNode, lView) {\n    var componentLView = lView[tNode.index];\n    return componentLView[RENDERER];\n}\n/** Handles an error thrown in an LView. */\nfunction handleError(lView, error) {\n    var injector = lView[INJECTOR$1];\n    var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n    errorHandler && errorHandler.handleError(error);\n}\n/**\n * Set the inputs of directives at the current node to corresponding value.\n *\n * @param lView the `LView` which contains the directives.\n * @param inputs mapping between the public \"input\" name and privately-known,\n * possibly minified, property names to write to.\n * @param value Value to set.\n */\nfunction setInputsForProperty(lView, inputs, value) {\n    var tView = lView[TVIEW];\n    for (var i = 0; i < inputs.length;) {\n        var index = inputs[i++];\n        var publicName = inputs[i++];\n        var privateName = inputs[i++];\n        var instance = lView[index];\n        ngDevMode && assertDataInRange(lView, index);\n        var def = tView.data[index];\n        var setInput = def.setInput;\n        if (setInput) {\n            def.setInput(instance, value, publicName, privateName);\n        }\n        else {\n            instance[privateName] = value;\n        }\n    }\n}\n/**\n * Updates a text binding at a given index in a given LView.\n */\nfunction textBindingInternal(lView, index, value) {\n    ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n    ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n    var element = getNativeByIndex(index, lView);\n    ngDevMode && assertDefined(element, 'native element should exist');\n    ngDevMode && ngDevMode.rendererSetText++;\n    var renderer = lView[RENDERER];\n    isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n}\n/**\n * Renders all initial styling (class and style values) on to the element from the tNode.\n *\n * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n * These values are populated during the creation phase of an element and are then later\n * applied once the element is instantiated. This function applies each of the static\n * style and class entries to the element.\n */\nfunction renderInitialStyling(renderer, native, tNode) {\n    renderStylingMap(renderer, native, tNode.classes, true);\n    renderStylingMap(renderer, native, tNode.styles, false);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getLContainer(tNode, embeddedView) {\n    ngDevMode && assertLView(embeddedView);\n    var container = embeddedView[PARENT];\n    if (tNode.index === -1) {\n        // This is a dynamically created view inside a dynamic container.\n        // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n        return isLContainer(container) ? container : null;\n    }\n    else {\n        ngDevMode && assertLContainer(container);\n        // This is a inline view node (e.g. embeddedViewStart)\n        return container;\n    }\n}\n/**\n * Retrieves render parent for a given view.\n * Might be null if a view is not yet attached to any container.\n */\nfunction getContainerRenderParent(tViewNode, view) {\n    var container = getLContainer(tViewNode, view);\n    return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n    // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n    // won't be created until i18nApply() in the update block, so this node should be skipped.\n    // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n    // in `i18n_spec.ts`.\n    if (lNodeToHandle != null) {\n        var lContainer = void 0;\n        var isComponent = false;\n        // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n        // wrapped\n        // in an array which needs to be unwrapped. We need to know if it is a component and if\n        // it has LContainer so that we can process all of those cases appropriately.\n        if (isLContainer(lNodeToHandle)) {\n            lContainer = lNodeToHandle;\n        }\n        else if (isLView(lNodeToHandle)) {\n            isComponent = true;\n            ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n            lNodeToHandle = lNodeToHandle[HOST];\n        }\n        var rNode = unwrapRNode(lNodeToHandle);\n        ngDevMode && assertDomNode(rNode);\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, rNode, isComponent);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(rNode);\n        }\n        if (lContainer != null) {\n            executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n        }\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n        renderer.createTextNode(renderStringify(value));\n}\nfunction addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n    var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n    ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n    if (renderParent) {\n        var renderer = lView[RENDERER];\n        var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n        executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n    }\n}\n/**\n * Detach a `LView` from the DOM by detaching its nodes.\n *\n * @param lView the `LView` to be detached.\n */\nfunction renderDetachView(lView) {\n    executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    var lViewOrLContainer = rootView[CHILD_HEAD];\n    if (!lViewOrLContainer) {\n        return cleanUpView(rootView);\n    }\n    while (lViewOrLContainer) {\n        var next = null;\n        if (isLView(lViewOrLContainer)) {\n            // If LView, traverse down to child.\n            next = lViewOrLContainer[CHILD_HEAD];\n        }\n        else {\n            ngDevMode && assertLContainer(lViewOrLContainer);\n            // If container, traverse down to its first LView.\n            var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n            if (firstView)\n                next = firstView;\n        }\n        if (!next) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                cleanUpView(lViewOrLContainer);\n                lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n            }\n            cleanUpView(lViewOrLContainer || rootView);\n            next = lViewOrLContainer && lViewOrLContainer[NEXT];\n        }\n        lViewOrLContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param lView The view to insert\n * @param lContainer The container into which the view should be inserted\n * @param index Which index in the container to insert the child view into\n */\nfunction insertView(lView, lContainer, index) {\n    ngDevMode && assertLView(lView);\n    ngDevMode && assertLContainer(lContainer);\n    var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n    var containerLength = lContainer.length;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        lContainer[indexInContainer - 1][NEXT] = lView;\n    }\n    if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n        lView[NEXT] = lContainer[indexInContainer];\n        addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n    }\n    else {\n        lContainer.push(lView);\n        lView[NEXT] = null;\n    }\n    lView[PARENT] = lContainer;\n    // track views where declaration and insertion points are different\n    var declarationLContainer = lView[DECLARATION_LCONTAINER];\n    if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n        trackMovedView(declarationLContainer, lView);\n    }\n    // notify query that a new view has been added\n    var lQueries = lView[QUERIES];\n    if (lQueries !== null) {\n        lQueries.insertView(lView[TVIEW]);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 128 /* Attached */;\n}\n/**\n * Track views created from the declaration container (TemplateRef) and inserted into a\n * different LContainer.\n */\nfunction trackMovedView(declarationContainer, lView) {\n    ngDevMode && assertLContainer(declarationContainer);\n    var declaredViews = declarationContainer[MOVED_VIEWS];\n    if (declaredViews === null) {\n        declarationContainer[MOVED_VIEWS] = [lView];\n    }\n    else {\n        declaredViews.push(lView);\n    }\n}\nfunction detachMovedView(declarationContainer, lView) {\n    ngDevMode && assertLContainer(declarationContainer);\n    ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n    var projectedViews = declarationContainer[MOVED_VIEWS];\n    var declaredViewIndex = projectedViews.indexOf(lView);\n    projectedViews.splice(declaredViewIndex, 1);\n}\n/**\n * Detaches a view from a container.\n *\n * This method removes the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param lContainer The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns Detached LView instance.\n */\nfunction detachView(lContainer, removeIndex) {\n    if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n        return;\n    var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n    var viewToDetach = lContainer[indexInContainer];\n    if (viewToDetach) {\n        var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n            detachMovedView(declarationLContainer, viewToDetach);\n        }\n        if (removeIndex > 0) {\n            lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n        }\n        var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n        addRemoveViewFromContainer(viewToDetach, false);\n        // notify query that a view has been removed\n        var lQueries = removedLView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.detachView(removedLView[TVIEW]);\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n    }\n    return viewToDetach;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param lContainer The container from which to remove a view\n * @param removeIndex The index of the view to remove\n */\nfunction removeView(lContainer, removeIndex) {\n    var detachedView = detachView(lContainer, removeIndex);\n    detachedView && destroyLView(detachedView);\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param lView The view to be destroyed.\n */\nfunction destroyLView(lView) {\n    if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n        }\n        destroyViewTree(lView);\n    }\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(lViewOrLContainer, rootView) {\n    var tNode;\n    if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n        tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getLContainer(tNode, lViewOrLContainer);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n    }\n}\n/**\n * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n * can be propagated to @Output listeners.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(view) {\n    if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n        // Usually the Attached flag is removed when the view is detached from its parent, however\n        // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n        view[FLAGS] &= ~128 /* Attached */;\n        // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n        // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n        // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n        // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n        // really more of an \"afterDestroy\" hook if you think about it.\n        view[FLAGS] |= 256 /* Destroyed */;\n        executeOnDestroys(view);\n        removeListeners(view);\n        var hostTNode = view[T_HOST];\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view[RENDERER].destroy();\n        }\n        var declarationContainer = view[DECLARATION_LCONTAINER];\n        // we are dealing with an embedded view that is still inserted into a container\n        if (declarationContainer !== null && isLContainer(view[PARENT])) {\n            // and this is a projected view\n            if (declarationContainer !== view[PARENT]) {\n                detachMovedView(declarationContainer, view);\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            var lQueries = view[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(view[TVIEW]);\n            }\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(lView) {\n    var tCleanup = lView[TVIEW].cleanup;\n    if (tCleanup !== null) {\n        var lCleanup = lView[CLEANUP];\n        for (var i = 0; i < tCleanup.length - 1; i += 2) {\n            if (typeof tCleanup[i] === 'string') {\n                // This is a native DOM listener\n                var idxOrTargetGetter = tCleanup[i + 1];\n                var target = typeof idxOrTargetGetter === 'function' ?\n                    idxOrTargetGetter(lView) :\n                    unwrapRNode(lView[idxOrTargetGetter]);\n                var listener = lCleanup[tCleanup[i + 2]];\n                var useCaptureOrSubIdx = tCleanup[i + 3];\n                if (typeof useCaptureOrSubIdx === 'boolean') {\n                    // native DOM listener registered with Renderer3\n                    target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                }\n                else {\n                    if (useCaptureOrSubIdx >= 0) {\n                        // unregister\n                        lCleanup[useCaptureOrSubIdx]();\n                    }\n                    else {\n                        // Subscription\n                        lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                    }\n                }\n                i += 2;\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = lCleanup[tCleanup[i + 1]];\n                tCleanup[i].call(context);\n            }\n        }\n        lView[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view[TVIEW];\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        for (var i = 0; i < destroyHooks.length; i += 2) {\n            var context = view[destroyHooks[i]];\n            // Only call the destroy hook if the context has been requested.\n            if (!(context instanceof NodeInjectorFactory)) {\n                destroyHooks[i + 1].call(context);\n            }\n        }\n    }\n}\n/**\n * Returns a native element if a node can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is made for projection but has not been inserted\n *   into destination.\n */\nfunction getRenderParent(tNode, currentView) {\n    // Nodes of the top-most view can be inserted eagerly.\n    if (isRootView(currentView)) {\n        return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n    }\n    // Skip over element and ICU containers as those are represented by a comment node and\n    // can't be used as a render parent.\n    var parent = getHighestElementOrICUContainer(tNode);\n    var renderParent = parent.parent;\n    // If the parent is null, then we are inserting across views: either into an embedded view or a\n    // component view.\n    if (renderParent == null) {\n        var hostTNode = currentView[T_HOST];\n        if (hostTNode.type === 2 /* View */) {\n            // We are inserting a root element of an embedded view We might delay insertion of children\n            // for a given view if it is disconnected. This might happen for 2 main reasons:\n            // - view is not inserted into any container(view was created but not inserted yet)\n            // - view is inserted into a container but the container itself is not inserted into the DOM\n            // (container might be part of projection or child of a view that is not inserted yet).\n            // In other words we can insert children of a given view if this view was inserted into a\n            // container and the container itself has its render parent determined.\n            return getContainerRenderParent(hostTNode, currentView);\n        }\n        else {\n            // We are inserting a root element of the component view into the component host element and\n            // it should always be eager.\n            return getHostNative(currentView);\n        }\n    }\n    else {\n        var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n        // If the parent of this node is an ICU container, then it is represented by comment node and we\n        // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n        if (isIcuCase && parent.flags & 2 /* isProjected */) {\n            return getNativeByTNode(parent, currentView).parentNode;\n        }\n        ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n        if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n            var tData = currentView[TVIEW].data;\n            var tNode_1 = tData[renderParent.index];\n            var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n            // We've got a parent which is an element in the current view. We just need to verify if the\n            // parent element is not a component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would then move it to its final destination. Note that we can't\n            // make this assumption when using the Shadow DOM, because the native projection placeholders\n            // (<content> or <slot>) have to be in place as elements are being inserted.\n            if (encapsulation !== ViewEncapsulation.ShadowDom &&\n                encapsulation !== ViewEncapsulation.Native) {\n                return null;\n            }\n        }\n        return getNativeByTNode(renderParent, currentView);\n    }\n}\n/**\n * Gets the native host element for a given view. Will return null if the current view does not have\n * a host element.\n */\nfunction getHostNative(currentView) {\n    ngDevMode && assertLView(currentView);\n    var hostTNode = currentView[T_HOST];\n    return hostTNode && hostTNode.type === 3 /* Element */ ?\n        getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n        null;\n}\n/**\n * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n */\nfunction nativeInsertBefore(renderer, parent, child, beforeNode) {\n    ngDevMode && ngDevMode.rendererInsertBefore++;\n    if (isProceduralRenderer(renderer)) {\n        renderer.insertBefore(parent, child, beforeNode);\n    }\n    else {\n        parent.insertBefore(child, beforeNode, true);\n    }\n}\nfunction nativeAppendChild(renderer, parent, child) {\n    ngDevMode && ngDevMode.rendererAppendChild++;\n    if (isProceduralRenderer(renderer)) {\n        renderer.appendChild(parent, child);\n    }\n    else {\n        parent.appendChild(child);\n    }\n}\nfunction nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n    if (beforeNode !== null) {\n        nativeInsertBefore(renderer, parent, child, beforeNode);\n    }\n    else {\n        nativeAppendChild(renderer, parent, child);\n    }\n}\n/** Removes a node from the DOM given its native parent. */\nfunction nativeRemoveChild(renderer, parent, child, isHostElement) {\n    if (isProceduralRenderer(renderer)) {\n        renderer.removeChild(parent, child, isHostElement);\n    }\n    else {\n        parent.removeChild(child);\n    }\n}\n/**\n * Returns a native parent of a given native node.\n */\nfunction nativeParentNode(renderer, node) {\n    return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n}\n/**\n * Returns a native sibling of a given native node.\n */\nfunction nativeNextSibling(renderer, node) {\n    return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n}\n/**\n * Finds a native \"anchor\" node for cases where we can't append a native child directly\n * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n * @param parentTNode\n * @param lView\n */\nfunction getNativeAnchorNode(parentTNode, lView) {\n    if (parentTNode.type === 2 /* View */) {\n        var lContainer = getLContainer(parentTNode, lView);\n        var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n        return getBeforeNodeForView(index, lContainer);\n    }\n    else if (parentTNode.type === 4 /* ElementContainer */ ||\n        parentTNode.type === 5 /* IcuContainer */) {\n        return getNativeByTNode(parentTNode, lView);\n    }\n    return null;\n}\n/**\n * Appends the `child` native node (or a collection of nodes) to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param childEl The native child (or children) that should be appended\n * @param childTNode The TNode of the child element\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(childEl, childTNode, currentView) {\n    var e_1, _a;\n    var renderParent = getRenderParent(childTNode, currentView);\n    if (renderParent != null) {\n        var renderer = currentView[RENDERER];\n        var parentTNode = childTNode.parent || currentView[T_HOST];\n        var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n        if (Array.isArray(childEl)) {\n            try {\n                for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                    var nativeNode = childEl_1_1.value;\n                    nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        else {\n            nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n        }\n    }\n}\n/**\n * Gets the top-level element or an ICU container if those containers are nested.\n *\n * @param tNode The starting TNode for which we should skip element and ICU containers\n * @returns The TNode of the highest level ICU container or element container\n */\nfunction getHighestElementOrICUContainer(tNode) {\n    while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n        tNode.parent.type === 5 /* IcuContainer */)) {\n        tNode = tNode.parent;\n    }\n    return tNode;\n}\nfunction getBeforeNodeForView(viewIndexInContainer, lContainer) {\n    var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n    if (nextViewIndex < lContainer.length) {\n        var lView = lContainer[nextViewIndex];\n        ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n        var tViewNodeChild = lView[T_HOST].child;\n        return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n            lContainer[NATIVE];\n    }\n    else {\n        return lContainer[NATIVE];\n    }\n}\n/**\n * Removes a native node itself using a given renderer. To remove the node we are looking up its\n * parent from the native tree as not all platforms / browsers support the equivalent of\n * node.remove().\n *\n * @param renderer A renderer to be used\n * @param rNode The native node that should be removed\n * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n */\nfunction nativeRemoveNode(renderer, rNode, isHostElement) {\n    var nativeParent = nativeParentNode(renderer, rNode);\n    if (nativeParent) {\n        nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n    }\n}\n/**\n * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n * stored on a component host level.\n * @param lView A LView where nodes are inserted (target LView)\n * @param tProjectionNode A projection node where previously re-distribution should be appended\n * (target insertion place)\n * @param selectorIndex A bucket from where nodes to project should be taken\n * @param componentView A where projectable nodes were initially created (source view)\n */\nfunction appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n    var projectedView = componentView[PARENT];\n    var componentNode = componentView[T_HOST];\n    var nodeToProject = componentNode.projection[selectorIndex];\n    if (Array.isArray(nodeToProject)) {\n        appendChild(nodeToProject, tProjectionNode, lView);\n    }\n    else {\n        while (nodeToProject) {\n            if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n            }\n            nodeToProject = nodeToProject.projectionNext;\n        }\n    }\n}\n/**\n * Loops over all children of a TNode container and appends them to the DOM\n *\n * @param ngContainerChildTNode The first child of the TNode container\n * @param tProjectionNode The projection (ng-content) TNode\n * @param currentView Current LView\n * @param projectionView Projection view (view above current)\n */\nfunction appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n    while (ngContainerChildTNode) {\n        appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n        ngContainerChildTNode = ngContainerChildTNode.next;\n    }\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param projectedTNode The TNode to be projected\n * @param tProjectionNode The projection (ng-content) TNode\n * @param currentView Current LView\n * @param projectionView Projection view (view above current)\n */\nfunction appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n    var native = getNativeByTNode(projectedTNode, projectionView);\n    appendChild(native, tProjectionNode, currentView);\n    // the projected contents are processed while in the shadow view (which is the currentView)\n    // therefore we need to extract the view where the host element lives since it's the\n    // logical container of the content projected views\n    attachPatchData(native, projectionView);\n    var nodeOrContainer = projectionView[projectedTNode.index];\n    if (projectedTNode.type === 0 /* Container */) {\n        // The node we are adding is a container and we are adding it to an element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assign the final projection location in those cases.\n        for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n            addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n        }\n    }\n    else if (projectedTNode.type === 5 /* IcuContainer */) {\n        // The node we are adding is an ICU container which is why we also need to project all the\n        // children nodes that might have been created previously and are linked to this anchor\n        var ngContainerChildTNode = projectedTNode.child;\n        appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n    }\n    else {\n        if (projectedTNode.type === 4 /* ElementContainer */) {\n            appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n        }\n        if (isLContainer(nodeOrContainer)) {\n            appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n        }\n    }\n}\n/**\n * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n * destroy)\n *\n * Inserting a view without projection or containers at top level is simple. Just iterate over the\n * root nodes of the View, and for each node perform the `action`.\n *\n * Things get more complicated with containers and projections. That is because coming across:\n * - Container: implies that we have to insert/remove/destroy the views of that container as well\n *              which in turn can have their own Containers at the View roots.\n * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n *               complication is that the nodes we are projecting can themselves have Containers\n *               or other Projections.\n *\n * As you can see this is a very recursive problem. While the recursive implementation is not the\n * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n * recursive implementation.\n *\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param lView The LView which needs to be inserted, detached, destroyed.\n * @param renderParent parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n    var tView = lView[TVIEW];\n    ngDevMode && assertNodeType(tView.node, 2 /* View */);\n    var viewRootTNode = tView.node.child;\n    while (viewRootTNode !== null) {\n        executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n        viewRootTNode = viewRootTNode.next;\n    }\n}\n/**\n * `executeActionOnProjection` performs an operation on the projection specified by `action`\n * (insert, detach, destroy).\n *\n * Inserting a projection requires us to locate the projected nodes from the parent component. The\n * complication is that those nodes themselves could be re-projected from their parent component.\n *\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param lView The LView which needs to be inserted, detached, destroyed.\n * @param tProjectionNode projection TNode to process\n * @param renderParent parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n    var componentLView = findComponentView(lView);\n    var componentNode = componentLView[T_HOST];\n    ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n    var nodeToProject = componentNode.projection[tProjectionNode.projection];\n    if (nodeToProject !== undefined) {\n        if (Array.isArray(nodeToProject)) {\n            for (var i = 0; i < nodeToProject.length; i++) {\n                var rNode = nodeToProject[i];\n                ngDevMode && assertDomNode(rNode);\n                executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var projectionTNode = nodeToProject;\n            var projectedComponentLView = componentLView[PARENT];\n            while (projectionTNode !== null) {\n                executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                projectionTNode = projectionTNode.projectionNext;\n            }\n        }\n    }\n}\n/**\n * `executeActionOnContainer` performs an operation on the container and its views as specified by\n * `action` (insert, detach, destroy)\n *\n * Inserting a Container is complicated by the fact that the container may have Views which\n * themselves have containers or projections.\n *\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n * @param renderParent parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n    ngDevMode && assertLContainer(lContainer);\n    var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n    var native = unwrapRNode(lContainer);\n    // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n    // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n    // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n    // case we need to execute action on 2 nodes:\n    // - container's host node (this is done in the executeNodeAction)\n    // - container's host node (this is done here)\n    if (anchor !== native) {\n        executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n    }\n    for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n        var lView = lContainer[i];\n        executeActionOnView(renderer, action, lView, renderParent, anchor);\n    }\n}\n/**\n * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n * and its child nodes as specified by the `action` (insert, detach, destroy).\n *\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param lView The LView which needs to be inserted, detached, destroyed.\n * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n * @param renderParent parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n    var node = lView[tNode.index];\n    executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n    var childTNode = tNode.child;\n    while (childTNode) {\n        executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n        childTNode = childTNode.next;\n    }\n}\nfunction executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n    var nodeType = tNode.type;\n    if (!(tNode.flags & 32 /* isDetached */)) {\n        if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n            executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n        }\n        else if (nodeType === 1 /* Projection */) {\n            executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n        }\n        else {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n            executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the TNode of the parent injector is found.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @param startTNode The TNode instance of the starting element\n * @returns The TNode of the parent injector\n */\nfunction getParentInjectorTNode(location, startView, startTNode) {\n    if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n        // view offset is 0\n        var injectorIndex = startTNode.parent.injectorIndex;\n        var parentTNode_1 = startTNode.parent;\n        while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n            parentTNode_1 = parentTNode_1.parent;\n        }\n        return parentTNode_1;\n    }\n    var viewOffset = getParentInjectorViewOffset(location);\n    // view offset is 1\n    var parentView = startView;\n    var parentTNode = startView[T_HOST];\n    // view offset is superior to 1\n    while (viewOffset > 1) {\n        parentView = parentView[DECLARATION_VIEW];\n        parentTNode = parentView[T_HOST];\n        viewOffset--;\n    }\n    return parentTNode;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_lView, _context, _componentIndex) {\n        this._context = _context;\n        this._componentIndex = _componentIndex;\n        this._appRef = null;\n        this._viewContainerRef = null;\n        /**\n         * @internal\n         */\n        this._tViewNode = null;\n        this._lView = _lView;\n    }\n    Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n        get: function () {\n            if (this._lView[HOST] == null) {\n                var tView = this._lView[T_HOST];\n                return collectNativeNodes(this._lView, tView, []);\n            }\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"context\", {\n        get: function () { return this._context ? this._context : this._lookUpContext(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            var index = this._viewContainerRef.indexOf(this);\n            if (index > -1) {\n                this._viewContainerRef.detach(index);\n            }\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._lView);\n    };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n    ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    ViewRef.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._lView);\n    };\n    ViewRef.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef.prototype._lookUpContext = function () {\n        return this._context = getLViewParent(this._lView)[this._componentIndex];\n    };\n    return ViewRef;\n}());\n/** @internal */\nvar RootViewRef = /** @class */ (function (_super) {\n    __extends(RootViewRef, _super);\n    function RootViewRef(_view) {\n        var _this = _super.call(this, _view, null, -1) || this;\n        _this._view = _view;\n        return _this;\n    }\n    RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n    RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n    Object.defineProperty(RootViewRef.prototype, \"context\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return RootViewRef;\n}(ViewRef));\nfunction collectNativeNodes(lView, parentTNode, result) {\n    var tNodeChild = parentTNode.child;\n    while (tNodeChild) {\n        var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n        nativeNode && result.push(nativeNode);\n        if (tNodeChild.type === 4 /* ElementContainer */) {\n            collectNativeNodes(lView, tNodeChild, result);\n        }\n        else if (tNodeChild.type === 1 /* Projection */) {\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var parentView = getLViewParent(componentView);\n            var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n            while (currentProjectedNode && parentView) {\n                result.push(getNativeByTNode(currentProjectedNode, parentView));\n                currentProjectedNode = currentProjectedNode.next;\n            }\n        }\n        tNodeChild = tNodeChild.next;\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef(ElementRefToken) {\n    return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\nvar R3ElementRef;\n/**\n * Creates an ElementRef given a node.\n *\n * @param ElementRefToken The ElementRef type\n * @param tNode The node for which you'd like an ElementRef\n * @param view The view to which the node belongs\n * @returns The ElementRef instance to use\n */\nfunction createElementRef(ElementRefToken, tNode, view) {\n    if (!R3ElementRef) {\n        // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n        R3ElementRef = /** @class */ (function (_super) {\n            __extends(ElementRef_, _super);\n            function ElementRef_() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return ElementRef_;\n        }(ElementRefToken));\n    }\n    return new R3ElementRef(getNativeByTNode(tNode, view));\n}\nvar R3TemplateRef;\n/**\n * Creates a TemplateRef given a node.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef(TemplateRefToken, ElementRefToken) {\n    return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @param TemplateRefToken The TemplateRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node on which a TemplateRef is requested\n * @param hostView The view to which the node belongs\n * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n */\nfunction createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3TemplateRef) {\n        // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n        R3TemplateRef = /** @class */ (function (_super) {\n            __extends(TemplateRef_, _super);\n            function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                var _this = _super.call(this) || this;\n                _this._declarationView = _declarationView;\n                _this._declarationTContainer = _declarationTContainer;\n                _this.elementRef = elementRef;\n                return _this;\n            }\n            TemplateRef_.prototype.createEmbeddedView = function (context) {\n                var embeddedTView = this._declarationTContainer.tViews;\n                var lView = createEmbeddedViewAndNode(embeddedTView, context, this._declarationView, this._declarationTContainer.injectorIndex);\n                var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                ngDevMode && assertLContainer(declarationLContainer);\n                lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                var declarationViewLQueries = this._declarationView[QUERIES];\n                if (declarationViewLQueries !== null) {\n                    lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                }\n                renderEmbeddedTemplate(lView, embeddedTView, context);\n                var viewRef = new ViewRef(lView, context, -1);\n                viewRef._tViewNode = lView[T_HOST];\n                return viewRef;\n            };\n            return TemplateRef_;\n        }(TemplateRefToken));\n    }\n    if (hostTNode.type === 0 /* Container */) {\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n    }\n    else {\n        return null;\n    }\n}\nvar R3ViewContainerRef;\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n    var previousTNode = getPreviousOrParentTNode();\n    return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param ViewContainerRefToken The ViewContainerRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a ViewContainerRef\n * @param hostView The view to which the node belongs\n * @returns The ViewContainerRef instance to use\n */\nfunction createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3ViewContainerRef) {\n        // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n        R3ViewContainerRef = /** @class */ (function (_super) {\n            __extends(ViewContainerRef_, _super);\n            function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                var _this = _super.call(this) || this;\n                _this._lContainer = _lContainer;\n                _this._hostTNode = _hostTNode;\n                _this._hostView = _hostView;\n                return _this;\n            }\n            Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                get: function () {\n                    return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                /** @deprecated No replacement */\n                get: function () {\n                    var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                    var parentView = getParentInjectorView(parentLocation, this._hostView);\n                    var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                    return !hasParentInjector(parentLocation) || parentTNode == null ?\n                        new NodeInjector(null, this._hostView) :\n                        new NodeInjector(parentTNode, parentView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            ViewContainerRef_.prototype.clear = function () {\n                while (this.length > 0) {\n                    this.remove(this.length - 1);\n                }\n            };\n            ViewContainerRef_.prototype.get = function (index) {\n                return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n            };\n            Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                enumerable: true,\n                configurable: true\n            });\n            ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                var viewRef = templateRef.createEmbeddedView(context || {});\n                this.insert(viewRef, index);\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                var contextInjector = injector || this.parentInjector;\n                if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                    ngModuleRef = contextInjector.get(NgModuleRef, null);\n                }\n                var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                this.insert(componentRef.hostView, index);\n                return componentRef;\n            };\n            ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                }\n                this.allocateContainerIfNeeded();\n                var lView = viewRef._lView;\n                var adjustedIdx = this._adjustIndex(index);\n                if (viewAttachedToContainer(lView)) {\n                    // If view is already attached, fall back to move() so we clean up\n                    // references appropriately.\n                    return this.move(viewRef, adjustedIdx);\n                }\n                insertView(lView, this._lContainer, adjustedIdx);\n                var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                addRemoveViewFromContainer(lView, true, beforeNode);\n                viewRef.attachToViewContainerRef(this);\n                addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                }\n                var index = this.indexOf(viewRef);\n                if (index !== -1)\n                    this.detach(index);\n                this.insert(viewRef, newIndex);\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                return this._lContainer[VIEW_REFS] !== null ?\n                    this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                    0;\n            };\n            ViewContainerRef_.prototype.remove = function (index) {\n                this.allocateContainerIfNeeded();\n                var adjustedIdx = this._adjustIndex(index, -1);\n                removeView(this._lContainer, adjustedIdx);\n                removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n            };\n            ViewContainerRef_.prototype.detach = function (index) {\n                this.allocateContainerIfNeeded();\n                var adjustedIdx = this._adjustIndex(index, -1);\n                var view = detachView(this._lContainer, adjustedIdx);\n                var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n            };\n            ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                if (shift === void 0) { shift = 0; }\n                if (index == null) {\n                    return this.length + shift;\n                }\n                if (ngDevMode) {\n                    assertGreaterThan(index, -1, 'index must be positive');\n                    // +1 because it's legal to insert at the end.\n                    assertLessThan(index, this.length + 1 + shift, 'index');\n                }\n                return index;\n            };\n            ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                if (this._lContainer[VIEW_REFS] === null) {\n                    this._lContainer[VIEW_REFS] = [];\n                }\n            };\n            return ViewContainerRef_;\n        }(ViewContainerRefToken));\n    }\n    ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    var lContainer;\n    var slotValue = hostView[hostTNode.index];\n    if (isLContainer(slotValue)) {\n        // If the host is a container, we don't need to create a new LContainer\n        lContainer = slotValue;\n        lContainer[ACTIVE_INDEX] = -1;\n    }\n    else {\n        var commentNode = void 0;\n        // If the host is an element container, the native host element is guaranteed to be a\n        // comment and we can reuse that comment as anchor element for the new LContainer.\n        if (hostTNode.type === 4 /* ElementContainer */) {\n            commentNode = unwrapRNode(slotValue);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        }\n        // A container can be created on the root (topmost / bootstrapped) component and in this case we\n        // can't use LTree to insert container's marker node (both parent of a comment node and the\n        // commend node itself is located outside of elements hold by LTree). In this specific case we\n        // use low-level DOM manipulation to insert container's marker (comment) node.\n        if (isRootView(hostView)) {\n            var renderer = hostView[RENDERER];\n            var hostNative = getNativeByTNode(hostTNode, hostView);\n            var parentOfHostNative = nativeParentNode(renderer, hostNative);\n            nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n        }\n        else {\n            appendChild(commentNode, hostTNode, hostView);\n        }\n        hostView[hostTNode.index] = lContainer =\n            createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n        addToViewTree(hostView, lContainer);\n    }\n    return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef(isPipe) {\n    if (isPipe === void 0) { isPipe = false; }\n    return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param hostTNode The node that is requesting a ChangeDetectorRef\n * @param hostView The view to which the node belongs\n * @param isPipe Whether the view is being injected into a pipe.\n * @returns The ChangeDetectorRef to use\n */\nfunction createViewRef(hostTNode, hostView, isPipe) {\n    if (isComponent(hostTNode) && !isPipe) {\n        var componentIndex = hostTNode.directiveStart;\n        var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n        return new ViewRef(componentView, null, componentIndex);\n    }\n    else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n        hostTNode.type === 4 /* ElementContainer */) {\n        var hostComponentView = findComponentView(hostView);\n        return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n    }\n    return null;\n}\n/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\nfunction getOrCreateRenderer2(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer)) {\n        return renderer;\n    }\n    else {\n        throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n    }\n}\n/** Injects a Renderer2 for the current component. */\nfunction injectRenderer2() {\n    // We need the Renderer to be based on the component that it's being injected into, however since\n    // DI happens before we've entered its view, `getLView` will return the parent view instead.\n    var lView = getLView();\n    var tNode = getPreviousOrParentTNode();\n    var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n    return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    /**\n     * @internal\n     * @nocollapse\n     */\n    ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n    return ChangeDetectorRef;\n}());\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n};\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\nvar INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n/**\n * Determine whether a stringified type is a class which delegates its constructor\n * to its parent.\n *\n * This is not trivial since compiled code can actually contain a constructor function\n * even if the original source code did not. For instance, when the child class contains\n * an initialized instance property.\n */\nfunction isDelegateCtor(typeStr) {\n    return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n        (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n}\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] && paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (isDelegateCtor(typeStr)) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    var compiler = getCompilerFacade();\n    return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n}\nfunction reflectDependency(compiler, dep) {\n    var meta = {\n        token: null,\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        meta.token = token;\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param === undefined) {\n                // param may be undefined if type of dep is not set by ngtsc\n                continue;\n            }\n            else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = param.token;\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = param.attributeName;\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else if (param === ChangeDetectorRef) {\n                meta.token = param;\n                meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable(type, srcMeta) {\n    var def = null;\n    // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n    if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n        return;\n    Object.defineProperty(type, NG_INJECTABLE_DEF, {\n        get: function () {\n            if (def === null) {\n                // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                var meta = srcMeta || { providedIn: null };\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var compilerMeta = {\n                    name: type.name,\n                    type: type,\n                    typeArgumentCount: 0,\n                    providedIn: meta.providedIn,\n                    ctorDeps: reflectDependencies(type),\n                    userDeps: undefined,\n                };\n                if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                    compilerMeta.userDeps = convertDependencies(meta.deps);\n                }\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    compilerMeta.useClass = type;\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    compilerMeta.useClass = meta.useClass;\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    compilerMeta.useValue = meta.useValue;\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    compilerMeta.useFactory = meta.useFactory;\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    compilerMeta.useExisting = meta.useExisting;\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n            }\n            return def;\n        },\n    });\n}\nvar Éµ0$5 = getClosureSafeProperty;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$5 });\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$1 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$6 = getClosureSafeProperty;\nvar USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$6 });\nvar EMPTY_ARRAY$1 = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$2 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return ÉµÉµinject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            var _a;\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$7 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, Éµ0$7);\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction render2CompileInjectable(injectableType, options) {\n    if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n        injectableType.ngInjectableDef = ÉµÉµdefineInjectable({\n            token: injectableType,\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\nvar SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\nvar SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\nvar SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR = {};\nvar EMPTY_ARRAY$2 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR === undefined) {\n        NULL_INJECTOR = new NullInjector();\n    }\n    return NULL_INJECTOR;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @publicApi\n */\nfunction createInjector(defType, parent, additionalProviders, name) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent, name);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent, source) {\n        var _this = this;\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        this._destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        var dedupStack = [];\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n        additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        // Source name, used for debugging\n        this.source = source || (typeof def === 'object' ? null : stringify(def));\n    }\n    Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this._destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & InjectFlags.SkipSelf)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) && getInjectableDef(token);\n                    if (def && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n            return nextInjector.get(token, flags & InjectFlags.Optional ? null : notFoundValue);\n        }\n        catch (e) {\n            if (e.name === 'NullInjectorError') {\n                var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                path.unshift(stringify(token));\n                if (previousInjector) {\n                    // We still have a parent injector, keep throwing\n                    throw e;\n                }\n                else {\n                    // Format & throw the final error message when we don't have any previous injector\n                    return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                }\n            }\n            else {\n                throw e;\n            }\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.toString = function () {\n        var tokens = [], records = this.records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"R3Injector[\" + tokens.join(', ') + \"]\";\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this._destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     *\n     * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n     * the function will return \"true\" to indicate that the providers of the type definition need\n     * to be processed. This allows us to process providers of injector types after all imports of\n     * an injector definition are processed. (following View Engine semantics: see FW-1349)\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        if (!defOrWrappedDef)\n            return false;\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = getInjectorDef(defOrWrappedDef);\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // Check for circular dependencies.\n        if (ngDevMode && parents.indexOf(defType) !== -1) {\n            var defName = stringify(defType);\n            throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n        }\n        // Check for multiple imports of the same module\n        var isDuplicate = dedupStack.indexOf(defType) !== -1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = getInjectorDef(ngModule);\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return false;\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory, NOT_YET));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null && !isDuplicate) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            ngDevMode && parents.push(defType);\n            // Add it to the set of dedups. This way we can detect multiple imports of the same module\n            dedupStack.push(defType);\n            var importTypesWithProviders_1;\n            try {\n                deepForEach(def.imports, function (imported) {\n                    if (_this.processInjectorType(imported, parents, dedupStack)) {\n                        if (importTypesWithProviders_1 === undefined)\n                            importTypesWithProviders_1 = [];\n                        // If the processed import is an injector type with providers, we store it in the\n                        // list of import types with providers, so that we can process those afterwards.\n                        importTypesWithProviders_1.push(imported);\n                    }\n                });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                ngDevMode && parents.pop();\n            }\n            // Imports which are declared with providers (TypeWithProviders) need to be processed\n            // after all imported modules are processed. This is similar to how View Engine\n            // processes/merges module imports in the metadata resolver. See: FW-1349.\n            if (importTypesWithProviders_1 !== undefined) {\n                var _loop_1 = function (i) {\n                    var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                    deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                };\n                for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        var defProviders = def.providers;\n        if (defProviders != null && !isDuplicate) {\n            var injectorType_1 = defOrWrappedDef;\n            deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n        }\n        return (ngModule !== undefined &&\n            defOrWrappedDef.providers !== undefined);\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider, ngModuleType, providers);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throwMixedMultiProviderError();\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR) {\n            throwCyclicDependencyError(stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefOrInjectorDefFactory(token) {\n    // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n    var injectableDef = getInjectableDef(token);\n    if (injectableDef !== null) {\n        return injectableDef.factory;\n    }\n    // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n    var injectorDef = getInjectorDef(token);\n    if (injectorDef !== null) {\n        return injectorDef.factory;\n    }\n    // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n    // If it's missing that, it's an error.\n    if (token instanceof InjectionToken) {\n        throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    // Undecorated types can sometimes be created if they have no constructor arguments.\n    if (token instanceof Function) {\n        return getUndecoratedInjectableFactory(token);\n    }\n    // There was no way to resolve a factory for this token.\n    throw new Error('unreachable');\n}\nfunction getUndecoratedInjectableFactory(token) {\n    // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n    var paramLength = token.length;\n    if (paramLength > 0) {\n        var args = new Array(paramLength).fill('?');\n        throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n    }\n    // The constructor function appears to have no parameters.\n    // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n    // from an ancestor if there is one.\n    // Otherwise this really is a simple class with no dependencies, so return a factory that\n    // just instantiates the zero-arg constructor.\n    var inheritedInjectableDef = getInheritedInjectableDef(token);\n    if (inheritedInjectableDef !== null) {\n        return function () { return inheritedInjectableDef.factory(token); };\n    }\n    else {\n        return function () { return new token(); };\n    }\n}\nfunction providerToRecord(provider, ngModuleType, providers) {\n    var factory = providerToFactory(provider, ngModuleType, providers);\n    if (isValueProvider(provider)) {\n        return makeRecord(undefined, provider.useValue);\n    }\n    else {\n        return makeRecord(factory, NOT_YET);\n    }\n}\n/**\n * Converts a `SingleProvider` into a factory function.\n *\n * @param provider provider to convert to factory\n */\nfunction providerToFactory(provider, ngModuleType, providers) {\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n    }\n    else {\n        if (isValueProvider(provider)) {\n            factory = function () { return resolveForwardRef(provider.useValue); };\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return ÉµÉµinject(resolveForwardRef(provider.useExisting)); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = resolveForwardRef(provider &&\n                (provider.useClass || provider.provide));\n            if (!classRef_1) {\n                throwInvalidProviderError(ngModuleType, providers, provider);\n            }\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefOrInjectorDefFactory(classRef_1);\n            }\n        }\n    }\n    return factory;\n}\nfunction makeRecord(factory, value, multi) {\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction isValueProvider(value) {\n    return value !== null && typeof value == 'object' && USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!(value && value.useExisting);\n}\nfunction isFactoryProvider(value) {\n    return !!(value && value.useFactory);\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction isClassProvider(value) {\n    return !!value.useClass;\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return value !== null && typeof value === 'object' &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n    return new StaticInjector(providers, parent, name);\n}\nfunction INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n    return createInjector({ name: name }, parent, providers, name);\n}\nvar INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return INJECTOR_IMPL(options, parent, '');\n        }\n        else {\n            return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    /** @nocollapse */\n    Injector.ngInjectableDef = ÉµÉµdefineInjectable({\n        token: Injector,\n        providedIn: 'any',\n        factory: function () { return ÉµÉµinject(INJECTOR); },\n    });\n    /**\n     * @internal\n     * @nocollapse\n     */\n    Injector.__NG_ELEMENT_ID__ = -1;\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR$1 = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar NO_NEW_LINE$1 = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = Injector.NULL; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) ;\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR$1) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var _a;\n    var value;\n    if (record && !(flags & InjectFlags.SkipSelf)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR$1) {\n            throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR$1;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, InjectFlags.Default));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & InjectFlags.Self)) {\n        value = parent.get(token, notFoundValue, InjectFlags.Default);\n    }\n    return value;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6 /* Default */;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj, 'StaticInjectorError'));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * @publicApi\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @publicApi\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @publicApi\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n * that will populate the `entryComponents` field of components and NgModules\n * based on its `useValue` property value.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) are added to the `entryComponents` property.\n *\n * @usageNotes\n *\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on a router configuration that refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\nvar Éµ0$8 = function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n};\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nvar ContentChildren = makePropDecorator('ContentChildren', Éµ0$8, Query);\nvar Éµ1$1 = function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n};\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nvar ContentChild = makePropDecorator('ContentChild', Éµ1$1, Query);\nvar Éµ2 = function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n};\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar ViewChildren = makePropDecorator('ViewChildren', Éµ2, Query);\nvar Éµ3 = function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n};\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar ViewChild = makePropDecorator('ViewChild', Éµ3, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponent{\n * }\n *\n * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n *\n * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n *\n * // Use browser's `fetch()` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into `template` strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible for returning a `Promise` to the\n * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n */\nfunction resolveComponentResources(resourceResolver) {\n    // Store all promises which are fetching the resources.\n    var componentResolved = [];\n    // Cache so that we don't fetch the same resource more than once.\n    var urlMap = new Map();\n    function cachedResourceResolve(url) {\n        var promise = urlMap.get(url);\n        if (!promise) {\n            var resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach(function (component, type) {\n        var promises = [];\n        if (component.templateUrl) {\n            promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                component.template = template;\n            }));\n        }\n        var styleUrls = component.styleUrls;\n        var styles = component.styles || (component.styles = []);\n        var styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach(function (styleUrl, index) {\n            styles.push(''); // pre-allocate array.\n            promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            }));\n        });\n        var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n        componentResolved.push(fullyResolved);\n    });\n    clearResolutionOfComponentResourcesQueue();\n    return Promise.all(componentResolved).then(function () { return undefined; });\n}\nvar componentResourceResolutionQueue = new Map();\n// Track when existing ngComponentDef for a Type is waiting on resources.\nvar componentDefPendingResolution = new Set();\nfunction maybeQueueResolutionOfComponentResources(type, metadata) {\n    if (componentNeedsResolution(metadata)) {\n        componentResourceResolutionQueue.set(type, metadata);\n        componentDefPendingResolution.add(type);\n    }\n}\nfunction componentNeedsResolution(component) {\n    return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n        component.styleUrls && component.styleUrls.length);\n}\nfunction clearResolutionOfComponentResourcesQueue() {\n    var old = componentResourceResolutionQueue;\n    componentResourceResolutionQueue = new Map();\n    return old;\n}\nfunction isComponentResourceResolutionQueueEmpty() {\n    return componentResourceResolutionQueue.size === 0;\n}\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\nfunction componentDefResolved(type) {\n    componentDefPendingResolution.delete(type);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allocates the necessary amount of slots for host vars.\n *\n * @param count Amount of vars to be allocated\n *\n * @codeGenApi\n */\nfunction ÉµÉµallocHostVars(count) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    if (!tView.firstTemplatePass)\n        return;\n    queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n    prefillHostVars(tView, lView, count);\n}\n/**\n * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n * CD.\n */\nfunction queueHostBindingForCheck(tView, def, hostVars) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n    var expando = tView.expandoInstructions;\n    var length = expando.length;\n    // Check whether a given `hostBindings` function already exists in expandoInstructions,\n    // which can happen in case directive definition was extended from base definition (as a part of\n    // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n    // list, we just increase the number of host vars associated with that function, but do not add it\n    // into the list again.\n    if (length >= 2 && expando[length - 2] === def.hostBindings) {\n        expando[length - 1] = expando[length - 1] + hostVars;\n    }\n    else {\n        expando.push(def.hostBindings, hostVars);\n    }\n}\n/**\n * On the first template pass, we need to reserve space for host binding values\n * after directives are matched (so all directives are saved, then bindings).\n * Because we are updating the blueprint, we only need to do this once.\n */\nfunction prefillHostVars(tView, lView, totalHostVars) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n    for (var i = 0; i < totalHostVars; i++) {\n        lView.push(NO_CHANGE);\n        tView.blueprint.push(NO_CHANGE);\n        tView.data.push(null);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(misko): consider inlining\n/** Updates binding and returns the value. */\nfunction updateBinding(lView, bindingIndex, value) {\n    return lView[bindingIndex] = value;\n}\n/** Gets the current binding value. */\nfunction getBinding(lView, bindingIndex) {\n    ngDevMode && assertDataInRange(lView, bindingIndex);\n    ngDevMode &&\n        assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return lView[bindingIndex];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(lView, bindingIndex, value) {\n    ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    ngDevMode &&\n        assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n    var oldValue = lView[bindingIndex];\n    if (isDifferent(oldValue, value)) {\n        if (ngDevMode && getCheckNoChangesMode()) {\n            // View engine didn't report undefined values as changed on the first checkNoChanges pass\n            // (before the change detection was run).\n            var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n            if (!devModeEqual(oldValueToCompare, value)) {\n                throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n            }\n        }\n        lView[bindingIndex] = value;\n        return true;\n    }\n    return false;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n    var different = bindingUpdated(lView, bindingIndex, exp1);\n    return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Update a property on a selected element.\n *\n * Operates on the element selected by index via the {@link select} instruction.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n *\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @returns This function returns itself so that it may be chained\n * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n *\n * @codeGenApi\n */\nfunction ÉµÉµproperty(propName, value, sanitizer) {\n    var index = getSelectedIndex();\n    ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n    var lView = getLView();\n    var bindReconciledValue = bind(lView, value);\n    if (bindReconciledValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n    }\n    return ÉµÉµproperty;\n}\n/**\n * Creates a single value binding.\n *\n * @param lView Current view\n * @param value Value to diff\n */\nfunction bind(lView, value) {\n    var bindingIndex = lView[BINDING_INDEX]++;\n    storeBindingMetadata(lView);\n    return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n}\n\n/**\n * Updates the value of or removes a bound attribute on an Element.\n *\n * Used in the case of `[attr.title]=\"value\"`\n *\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n * @param namespace Optional namespace to use when setting the attribute.\n *\n * @codeGenApi\n */\nfunction ÉµÉµattribute(name, value, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var bound = bind(lView, value);\n    if (bound !== NO_CHANGE) {\n        elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattribute;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(lView, values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var isBindingUpdated = false;\n    var tData = lView[TVIEW].data;\n    var bindingIndex = lView[BINDING_INDEX];\n    if (tData[bindingIndex] == null) {\n        // 2 is the index of the first static interstitial value (ie. not prefix)\n        for (var i = 2; i < values.length; i += 2) {\n            tData[bindingIndex++] = values[i];\n        }\n        bindingIndex = lView[BINDING_INDEX];\n    }\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n    }\n    lView[BINDING_INDEX] = bindingIndex;\n    storeBindingMetadata(lView, values[0], values[values.length - 1]);\n    if (!isBindingUpdated) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += renderStringify(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(lView, prefix, v0, suffix) {\n    var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n    storeBindingMetadata(lView, prefix, suffix);\n    return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 2 expressions.\n */\nfunction interpolation2(lView, prefix, v0, i0, v1, suffix) {\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n    lView[BINDING_INDEX] += 2;\n    // Only set static strings the first time (data will be null subsequent runs).\n    var data = storeBindingMetadata(lView, prefix, suffix);\n    if (data) {\n        lView[TVIEW].data[bindingIndex] = i0;\n    }\n    return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 3 expressions.\n */\nfunction interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n    lView[BINDING_INDEX] += 3;\n    // Only set static strings the first time (data will be null subsequent runs).\n    var data = storeBindingMetadata(lView, prefix, suffix);\n    if (data) {\n        var tData = lView[TVIEW].data;\n        tData[bindingIndex] = i0;\n        tData[bindingIndex + 1] = i1;\n    }\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 expressions.\n */\nfunction interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    lView[BINDING_INDEX] += 4;\n    // Only set static strings the first time (data will be null subsequent runs).\n    var data = storeBindingMetadata(lView, prefix, suffix);\n    if (data) {\n        var tData = lView[TVIEW].data;\n        tData[bindingIndex] = i0;\n        tData[bindingIndex + 1] = i1;\n        tData[bindingIndex + 2] = i2;\n    }\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n            renderStringify(v3) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 expressions.\n */\nfunction interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n    lView[BINDING_INDEX] += 5;\n    // Only set static strings the first time (data will be null subsequent runs).\n    var data = storeBindingMetadata(lView, prefix, suffix);\n    if (data) {\n        var tData = lView[TVIEW].data;\n        tData[bindingIndex] = i0;\n        tData[bindingIndex + 1] = i1;\n        tData[bindingIndex + 2] = i2;\n        tData[bindingIndex + 3] = i3;\n    }\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n            renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 expressions.\n */\nfunction interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n    lView[BINDING_INDEX] += 6;\n    // Only set static strings the first time (data will be null subsequent runs).\n    var data = storeBindingMetadata(lView, prefix, suffix);\n    if (data) {\n        var tData = lView[TVIEW].data;\n        tData[bindingIndex] = i0;\n        tData[bindingIndex + 1] = i1;\n        tData[bindingIndex + 2] = i2;\n        tData[bindingIndex + 3] = i3;\n        tData[bindingIndex + 4] = i4;\n    }\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n            renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 expressions.\n */\nfunction interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n    lView[BINDING_INDEX] += 7;\n    // Only set static strings the first time (data will be null subsequent runs).\n    var data = storeBindingMetadata(lView, prefix, suffix);\n    if (data) {\n        var tData = lView[TVIEW].data;\n        tData[bindingIndex] = i0;\n        tData[bindingIndex + 1] = i1;\n        tData[bindingIndex + 2] = i2;\n        tData[bindingIndex + 3] = i3;\n        tData[bindingIndex + 4] = i4;\n        tData[bindingIndex + 5] = i5;\n    }\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n            renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n            renderStringify(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 expressions.\n */\nfunction interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n    lView[BINDING_INDEX] += 8;\n    // Only set static strings the first time (data will be null subsequent runs).\n    var data = storeBindingMetadata(lView, prefix, suffix);\n    if (data) {\n        var tData = lView[TVIEW].data;\n        tData[bindingIndex] = i0;\n        tData[bindingIndex + 1] = i1;\n        tData[bindingIndex + 2] = i2;\n        tData[bindingIndex + 3] = i3;\n        tData[bindingIndex + 4] = i4;\n        tData[bindingIndex + 5] = i5;\n        tData[bindingIndex + 6] = i6;\n    }\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n            renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n            renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n        NO_CHANGE;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate1('title', 'prefix', v0, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate1;\n}\n/**\n *\n * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate2;\n}\n/**\n *\n * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate3(\n * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate3;\n}\n/**\n *\n * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate4(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate4;\n}\n/**\n *\n * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate5(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate5;\n}\n/**\n *\n * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate6(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate6;\n}\n/**\n *\n * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate7(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate7;\n}\n/**\n *\n * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolate8(\n *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolate8;\n}\n/**\n * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 7.\n *\n * ```html\n * <div\n *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµattributeInterpolateV(\n *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * @param attrName The name of the attribute to update.\n * @param values The a collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµattributeInterpolateV(attrName, values, sanitizer, namespace) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolationV(lView, values);\n    if (interpolated !== NO_CHANGE) {\n        elementAttributeInternal(index, attrName, interpolated, lView, sanitizer, namespace);\n    }\n    return ÉµÉµattributeInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var view = getComponentViewByInstance(component);\n    detectChangesInternal(view, component);\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n *\n * @publicApi\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var rootView = markViewDirty(getComponentViewByInstance(component));\n    ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n    scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates an LContainer for inline views, e.g.\n *\n * % if (showing) {\n *   <div></div>\n * % }\n *\n * @param index The index of the container in the data array\n *\n * @codeGenApi\n */\nfunction ÉµÉµcontainer(index) {\n    var lView = getLView();\n    var tNode = containerInternal(lView, index, null, null);\n    if (lView[TVIEW].firstTemplatePass) {\n        tNode.tViews = [];\n    }\n    setIsNotParent();\n}\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param index The index of the container in the data array\n * @param templateFn Inline template\n * @param consts The number of nodes, local refs, and pipes for this template\n * @param vars The number of bindings for this template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n * @param localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n *\n * @codeGenApi\n */\nfunction ÉµÉµtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    // TODO: consider a separate node type for templates\n    var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n    if (tView.firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n        var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        if (tView.queries !== null) {\n            tView.queries.template(tView, tContainerNode);\n            embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n        }\n    }\n    createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n    attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n    registerPostOrderHooks(tView, tContainerNode);\n    setIsNotParent();\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n *\n * @codeGenApi\n */\nfunction ÉµÉµcontainerRefreshStart(index) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var previousOrParentTNode = loadInternal(tView.data, index);\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    setPreviousOrParentTNode(previousOrParentTNode, true);\n    lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n    // We need to execute init hooks here so ngOnInit hooks are called in top level views\n    // before they are called in embedded views (for backwards compatibility).\n    executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n}\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of LContainer is the time when to child views get inserted or removed.\n *\n * @codeGenApi\n */\nfunction ÉµÉµcontainerRefreshEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getIsParent()) {\n        setIsNotParent();\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n        ngDevMode && assertHasParent(previousOrParentTNode);\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode, false);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    var lContainer = getLView()[previousOrParentTNode.index];\n    var nextIndex = lContainer[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n        removeView(lContainer, nextIndex);\n    }\n}\nfunction containerInternal(lView, nodeIndex, tagName, attrs) {\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n    var adjustedIndex = nodeIndex + HEADER_OFFSET;\n    ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    var comment = lView[adjustedIndex] =\n        lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n    var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n    var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n    appendChild(comment, tNode, lView);\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(lView, lContainer);\n    ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n    return tNode;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n        tView.blueprint[adjustedIndex] = null;\n    }\n    lView[adjustedIndex] = value;\n}\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @param index The index of the local ref in contextViewData.\n *\n * @codeGenApi\n */\nfunction ÉµÉµreference(index) {\n    var contextLView = getContextLView();\n    return loadInternal(contextLView, index);\n}\n/**\n * Retrieves a value from current `viewData`.\n *\n * @codeGenApi\n */\nfunction ÉµÉµload(index) {\n    return loadInternal(getLView(), index);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ÉµÉµdirectiveInject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    token = resolveForwardRef(token);\n    var lView = getLView();\n    // Fall back to inject() if view hasn't been created. This situation can happen in tests\n    // if inject utilities are used before bootstrapping.\n    if (lView == null)\n        return ÉµÉµinject(token, flags);\n    return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n}\n/**\n * Facade for the attribute injection from DI.\n *\n * @codeGenApi\n */\nfunction ÉµÉµinjectAttribute(attrNameToInject) {\n    return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n}\n\n/**\n * --------\n *\n * This file contains the core logic for how styling instructions are processed in Angular.\n *\n * To learn more about the algorithm see `TStylingContext`.\n *\n * --------\n */\n/**\n * Temporary function to bridge styling functionality between this new\n * refactor (which is here inside of `styling_next/`) and the old\n * implementation (which lives inside of `styling/`).\n *\n * This function is executed during the creation block of an element.\n * Because the existing styling implementation issues a call to the\n * `styling()` instruction, this instruction will also get run. The\n * central idea here is that the directive index values are bound\n * into the context. The directive index is temporary and is only\n * required until the `select(n)` instruction is fully functional.\n *\n * @codeGenApi\n */\nfunction ÉµÉµstyling() {\n    var tView = getLView()[TVIEW];\n    if (tView.firstTemplatePass) {\n        updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n    }\n}\n/**\n * Sets the current style sanitizer function which will then be used\n * within all follow-up prop and map-based style binding instructions\n * for the given element.\n *\n * Note that once styling has been applied to the element (i.e. once\n * `select(n)` is executed or the hostBindings/template function exits)\n * then the active `sanitizerFn` will be set to `null`. This means that\n * once styling is applied to another element then a another call to\n * `styleSanitizer` will need to be made.\n *\n * @param sanitizerFn The sanitization function that will be used to\n *       process style prop/value entries.\n *\n * @codeGenApi\n */\nfunction ÉµÉµstyleSanitizer(sanitizer) {\n    setCurrentStyleSanitizer(sanitizer);\n}\n/**\n * Update a style binding on an element with the provided value.\n *\n * If the style value is falsy then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `styleMap` or any static styles that are\n * present from when the element was created with `styling`).\n *\n * Note that the styling element is updated as part of `stylingApply`.\n *\n * @param prop A valid CSS property.\n * @param value New value to write (`null` or an empty string to remove).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n *\n * Note that this will apply the provided style value to the host element if this function is called\n * within a host binding.\n *\n * @codeGenApi\n */\nfunction ÉµÉµstyleProp(prop, value, suffix) {\n    stylePropInternal(getSelectedIndex(), prop, value, suffix);\n}\nfunction stylePropInternal(elementIndex, prop, value, suffix) {\n    var lView = getLView();\n    // if a value is interpolated then it may render a `NO_CHANGE` value.\n    // in this case we do not need to do anything, but the binding index\n    // still needs to be incremented because all styling binding values\n    // are stored inside of the lView.\n    var bindingIndex = lView[BINDING_INDEX]++;\n    var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n    if (ngDevMode) {\n        ngDevMode.styleProp++;\n        if (updated) {\n            ngDevMode.stylePropCacheMiss++;\n        }\n    }\n}\n/**\n * Update a class binding on an element with the provided value.\n *\n * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n * therefore, the class binding itself must already be allocated using\n * `styling` within the creation block.\n *\n * @param prop A valid CSS class (only one).\n * @param value A true/false value which will turn the class on or off.\n *\n * Note that this will apply the provided class value to the host element if this function\n * is called within a host binding.\n *\n * @codeGenApi\n */\nfunction ÉµÉµclassProp(className, value) {\n    var lView = getLView();\n    // if a value is interpolated then it may render a `NO_CHANGE` value.\n    // in this case we do not need to do anything, but the binding index\n    // still needs to be incremented because all styling binding values\n    // are stored inside of the lView.\n    var bindingIndex = lView[BINDING_INDEX]++;\n    var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n    if (ngDevMode) {\n        ngDevMode.classProp++;\n        if (updated) {\n            ngDevMode.classPropCacheMiss++;\n        }\n    }\n}\n/**\n * Shared function used to update a prop-based styling binding for an element.\n */\nfunction _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n    var lView = getLView();\n    var tNode = getTNode(elementIndex, lView);\n    var native = getNativeByTNode(tNode, lView);\n    var updated = false;\n    if (value !== NO_CHANGE) {\n        if (isClassBased) {\n            updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n        }\n        else {\n            var sanitizer = getCurrentStyleSanitizer();\n            updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n        }\n    }\n    return updated;\n}\n/**\n * Update style bindings using an object literal on an element.\n *\n * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n * When styles are applied to the element they will then be updated with respect to\n * any styles/classes set via `styleProp`. If any styles are set to falsy\n * then they will be removed from the element.\n *\n * Note that the styling instruction will not be applied until `stylingApply` is called.\n *\n * @param styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n *\n * Note that this will apply the provided styleMap value to the host element if this function\n * is called within a host binding.\n *\n * @codeGenApi\n */\nfunction ÉµÉµstyleMap(styles) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var tNode = getTNode(index, lView);\n    var context = getStylesContext(tNode);\n    var directiveIndex = getActiveDirectiveStylingIndex();\n    // if a value is interpolated then it may render a `NO_CHANGE` value.\n    // in this case we do not need to do anything, but the binding index\n    // still needs to be incremented because all styling binding values\n    // are stored inside of the lView.\n    var bindingIndex = lView[BINDING_INDEX]++;\n    // inputs are only evaluated from a template binding into a directive, therefore,\n    // there should not be a situation where a directive host bindings function\n    // evaluates the inputs (this should only happen in the template function)\n    if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n        updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n        styles = NO_CHANGE;\n    }\n    var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n    if (ngDevMode) {\n        ngDevMode.styleMap++;\n        if (updated) {\n            ngDevMode.styleMapCacheMiss++;\n        }\n    }\n}\n/**\n * Update class bindings using an object literal or class-string on an element.\n *\n * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n * When classes are applied to the element they will then be updated with\n * respect to any styles/classes set via `classProp`. If any\n * classes are set to falsy then they will be removed from the element.\n *\n * Note that the styling instruction will not be applied until `stylingApply` is called.\n * Note that this will the provided classMap value to the host element if this function is called\n * within a host binding.\n *\n * @param classes A key/value map or string of CSS classes that will be added to the\n *        given element. Any missing classes (that have already been applied to the element\n *        beforehand) will be removed (unset) from the element's list of CSS classes.\n *\n * @codeGenApi\n */\nfunction ÉµÉµclassMap(classes) {\n    classMapInternal(getSelectedIndex(), classes);\n}\nfunction classMapInternal(elementIndex, classes) {\n    var lView = getLView();\n    var tNode = getTNode(elementIndex, lView);\n    var context = getClassesContext(tNode);\n    var directiveIndex = getActiveDirectiveStylingIndex();\n    // if a value is interpolated then it may render a `NO_CHANGE` value.\n    // in this case we do not need to do anything, but the binding index\n    // still needs to be incremented because all styling binding values\n    // are stored inside of the lView.\n    var bindingIndex = lView[BINDING_INDEX]++;\n    // inputs are only evaluated from a template binding into a directive, therefore,\n    // there should not be a situation where a directive host bindings function\n    // evaluates the inputs (this should only happen in the template function)\n    if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n        updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n        classes = NO_CHANGE;\n    }\n    var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n    if (ngDevMode) {\n        ngDevMode.classMap++;\n        if (updated) {\n            ngDevMode.classMapCacheMiss++;\n        }\n    }\n}\n/**\n * Shared function used to update a map-based styling binding for an element.\n *\n * When this function is called it will activate support for `[style]` and\n * `[class]` bindings in Angular.\n */\nfunction _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n    activateStylingMapFeature();\n    var lView = getLView();\n    var valueHasChanged = false;\n    if (value !== NO_CHANGE) {\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = lView[bindingIndex];\n        valueHasChanged = hasValueChanged(oldValue, value);\n        var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        if (isClassBased) {\n            updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n        }\n        else {\n            var sanitizer = getCurrentStyleSanitizer();\n            updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n        }\n    }\n    return valueHasChanged;\n}\n/**\n * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n *\n * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n * will take priority over the underlying style/class styling bindings. This value will\n * be updated for the binding each time during change detection.\n *\n * When this occurs this function will attempt to write the value to the input binding\n * depending on the following situations:\n *\n * - If `oldValue !== newValue`\n * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n *    which is when the context is not locked yet)\n */\nfunction updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n    var oldValue = lView[bindingIndex];\n    if (oldValue !== newValue) {\n        // even if the value has changed we may not want to emit it to the\n        // directive input(s) in the event that it is falsy during the\n        // first update pass.\n        if (newValue || isContextLocked(context)) {\n            var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n            var initialValue = getInitialStylingValue(context);\n            var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n            setInputsForProperty(lView, inputs, value);\n        }\n        lView[bindingIndex] = newValue;\n    }\n}\n/**\n * Returns the appropriate directive input value for `style` or `class`.\n *\n * Earlier versions of Angular expect a binding value to be passed into directive code\n * exactly as it is unless there is a static value present (in which case both values\n * will be stringified and concatenated).\n */\nfunction normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n    var value = bindingValue;\n    // we only concat values if there is an initial value, otherwise we return the value as is.\n    // Note that this is to satisfy backwards-compatibility in Angular.\n    if (initialValue.length > 0) {\n        if (isClassBased) {\n            value = concatString(initialValue, forceClassesAsString(bindingValue));\n        }\n        else {\n            value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n        }\n    }\n    return value;\n}\n/**\n * Flushes all styling code to the element.\n *\n * This function is designed to be called from the template and hostBindings\n * functions and may be called multiple times depending whether multiple\n * sources of styling exist. If called multiple times, only the last call\n * to `stlyingApply()` will render styling to the element.\n *\n * @codeGenApi\n */\nfunction ÉµÉµstylingApply() {\n    var elementIndex = getSelectedIndex();\n    var lView = getLView();\n    var tNode = getTNode(elementIndex, lView);\n    var renderer = getRenderer(tNode, lView);\n    var native = getNativeByTNode(tNode, lView);\n    var directiveIndex = getActiveDirectiveStylingIndex();\n    var sanitizer = getCurrentStyleSanitizer();\n    flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n    setCurrentStyleSanitizer(null);\n}\nfunction getRenderer(tNode, lView) {\n    return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n}\n/**\n * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n * and registers them in their respective styling contexts.\n */\nfunction registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n    var hasAdditionalInitialStyling = false;\n    var styles = getStylingMapArray(tNode.styles);\n    var classes = getStylingMapArray(tNode.classes);\n    var mode = -1;\n    for (var i = startIndex; i < attrs.length; i++) {\n        var attr = attrs[i];\n        if (typeof attr == 'number') {\n            mode = attr;\n        }\n        else if (mode == 1 /* Classes */) {\n            classes = classes || [''];\n            addItemToStylingMap(classes, attr, true);\n            hasAdditionalInitialStyling = true;\n        }\n        else if (mode == 2 /* Styles */) {\n            var value = attrs[++i];\n            styles = styles || [''];\n            addItemToStylingMap(styles, attr, value);\n            hasAdditionalInitialStyling = true;\n        }\n    }\n    if (classes && classes.length > 1 /* ValuesStartPosition */) {\n        if (!tNode.classes) {\n            tNode.classes = classes;\n        }\n        updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n    }\n    if (styles && styles.length > 1 /* ValuesStartPosition */) {\n        if (!tNode.styles) {\n            tNode.styles = styles;\n        }\n        updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n    }\n    return hasAdditionalInitialStyling;\n}\nfunction updateRawValueOnContext(context, value) {\n    var stylingMapArr = getStylingMapArray(context);\n    stylingMapArr[0 /* RawValuePosition */] = value;\n}\nfunction getActiveDirectiveStylingIndex() {\n    // whenever a directive's hostBindings function is called a uniqueId value\n    // is assigned. Normally this is enough to help distinguish one directive\n    // from another for the styling context, but there are situations where a\n    // sub-class directive could inherit and assign styling in concert with a\n    // parent directive. To help the styling code distinguish between a parent\n    // sub-classed directive the inheritance depth is taken into account as well.\n    return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n}\n/**\n * Temporary function that will update the max directive index value in\n * both the classes and styles contexts present on the provided `tNode`.\n *\n * This code is only used because the `select(n)` code functionality is not\n * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n * bindings function code in sync with the associated template function code.\n * For this reason the styling algorithm needs to track the last directive index\n * value so that it knows exactly when to render styling to the element since\n * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n * removed once `select(n)` is fixed).\n */\nfunction updateLastDirectiveIndex$1(tNode, directiveIndex) {\n    updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n    updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n}\nfunction getStylesContext(tNode) {\n    return getContext(tNode, false);\n}\nfunction getClassesContext(tNode) {\n    return getContext(tNode, true);\n}\n/**\n * Returns/instantiates a styling context from/to a `tNode` instance.\n */\nfunction getContext(tNode, isClassBased) {\n    var context = isClassBased ? tNode.classes : tNode.styles;\n    if (!isStylingContext(context)) {\n        context = allocTStylingContext(context);\n        if (ngDevMode) {\n            attachStylingDebugObject(context);\n        }\n        if (isClassBased) {\n            tNode.classes = context;\n        }\n        else {\n            tNode.styles = context;\n        }\n    }\n    return context;\n}\nfunction resolveStylePropValue(value, suffix) {\n    if (value === NO_CHANGE)\n        return value;\n    var resolvedValue = null;\n    if (value !== null) {\n        if (suffix) {\n            // when a suffix is applied then it will bypass\n            // sanitization entirely (b/c a new string is created)\n            resolvedValue = renderStringify(value) + suffix;\n        }\n        else {\n            // sanitization happens by dealing with a String value\n            // this means that the string value will be passed through\n            // into the style rendering later (which is where the value\n            // will be sanitized before it is applied)\n            resolvedValue = value;\n        }\n    }\n    return resolvedValue;\n}\n/**\n * Whether or not a style/class binding update should be applied later.\n *\n * This function will decide whether a binding should be applied immediately\n * or later (just before the styles/classes are flushed to the element). The\n * reason why this feature exists is because of super/sub directive inheritance.\n * Angular will evaluate host bindings on the super directive first and the sub\n * directive, but the styling bindings on the sub directive are of higher priority\n * than the super directive. For this reason all styling bindings that take place\n * in this circumstance will need to be deferred until later so that they can be\n * applied together and in a different order (the algorithm handles that part).\n */\nfunction deferStylingUpdate() {\n    return getActiveDirectiveSuperClassHeight() > 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n *\n * @codeGenApi\n */\nfunction ÉµÉµelementStart(index, name, attrs, localRefs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n    var native = lView[index + HEADER_OFFSET] = elementCreate(name);\n    var renderer = lView[RENDERER];\n    var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n    if (attrs != null) {\n        var lastAttrIndex = setUpAttributes(native, attrs);\n        if (tView.firstTemplatePass) {\n            registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n        }\n    }\n    renderInitialStyling(renderer, native, tNode);\n    appendChild(native, tNode, lView);\n    // any immediate children of a component or template container must be pre-emptively\n    // monkey-patched with the component view data so that the element can be inspected\n    // later on using any element discovery utility methods (see `element_discovery.ts`)\n    if (getElementDepthCount() === 0) {\n        attachPatchData(native, lView);\n    }\n    increaseElementDepthCount();\n    // if a directive contains a host binding for \"class\" then all class-based data will\n    // flow through that (except for `[class.prop]` bindings). This also includes initial\n    // static class values as well. (Note that this will be fixed once map-based `[style]`\n    // and `[class]` bindings work for multiple directives.)\n    if (tView.firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        resolveDirectives(tView, lView, tNode, localRefs || null);\n        var inputData = initializeTNodeInputs(tNode);\n        if (inputData && inputData.hasOwnProperty('class')) {\n            tNode.flags |= 8 /* hasClassInput */;\n        }\n        if (inputData && inputData.hasOwnProperty('style')) {\n            tNode.flags |= 16 /* hasStyleInput */;\n        }\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n    }\n    createDirectivesAndLocals(tView, lView, tNode);\n    executeContentQueries(tView, tNode, lView);\n}\n/**\n * Mark the end of the element.\n *\n * @codeGenApi\n */\nfunction ÉµÉµelementEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n    if (getIsParent()) {\n        setIsNotParent();\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode, false);\n    }\n    var tNode = previousOrParentTNode;\n    ngDevMode && assertNodeType(tNode, 3 /* Element */);\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    registerPostOrderHooks(tView, previousOrParentTNode);\n    decreaseElementDepthCount();\n    if (tView.firstTemplatePass && tView.queries !== null &&\n        isContentQueryHost(previousOrParentTNode)) {\n        tView.queries.elementEnd(previousOrParentTNode);\n    }\n    if (hasClassInput(tNode) && tNode.classes) {\n        setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n    }\n    if (hasStyleInput(tNode) && tNode.styles) {\n        setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n    }\n}\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n *\n * @codeGenApi\n */\nfunction ÉµÉµelement(index, name, attrs, localRefs) {\n    ÉµÉµelementStart(index, name, attrs, localRefs);\n    ÉµÉµelementEnd();\n}\n/**\n * Assign static attribute values to a host element.\n *\n * This instruction will assign static attribute values as well as class and style\n * values to an element within the host bindings function. Since attribute values\n * can consist of different types of values, the `attrs` array must include the values in\n * the following format:\n *\n * attrs = [\n *   // static attributes (like `title`, `name`, `id`...)\n *   attr1, value1, attr2, value,\n *\n *   // a single namespace value (like `x:id`)\n *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n *\n *   // another single namespace value (like `x:name`)\n *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n *\n *   // a series of CSS classes that will be applied to the element (no spaces)\n *   CLASSES_MARKER, class1, class2, class3,\n *\n *   // a series of CSS styles (property + value) that will be applied to the element\n *   STYLES_MARKER, prop1, value1, prop2, value2\n * ]\n *\n * All non-class and non-style attributes must be defined at the start of the list\n * first before all class and style values are set. When there is a change in value\n * type (like when classes and styles are introduced) a marker must be used to separate\n * the entries. The marker values themselves are set via entries found in the\n * [AttributeMarker] enum.\n *\n * NOTE: This instruction is meant to used from `hostBindings` function only.\n *\n * @param directive A directive instance the styling is associated with.\n * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n * values.\n *\n * @codeGenApi\n */\nfunction ÉµÉµelementHostAttrs(attrs) {\n    var hostElementIndex = getSelectedIndex();\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var tNode = getTNode(hostElementIndex, lView);\n    // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n    // element nodes and adding styles/classes on to them will cause runtime\n    // errors...\n    if (tNode.type === 3 /* Element */) {\n        var native = getNativeByTNode(tNode, lView);\n        var lastAttrIndex = setUpAttributes(native, attrs);\n        if (tView.firstTemplatePass) {\n            var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            // this is only called during the first template pass in the\n            // event that this current directive assigned initial style/class\n            // host attribute values to the element. Because initial styling\n            // values are applied before directives are first rendered (within\n            // `createElement`) this means that initial styling for any directives\n            // still needs to be applied. Note that this will only happen during\n            // the first template pass and not each time a directive applies its\n            // attribute values to the element.\n            if (stylingNeedsToBeRendered) {\n                var renderer = lView[RENDERER];\n                renderInitialStyling(renderer, native, tNode);\n            }\n        }\n    }\n}\nfunction setDirectiveStylingInput(context, lView, stylingInputs) {\n    // older versions of Angular treat the input as `null` in the\n    // event that the value does not exist at all. For this reason\n    // we can't have a styling value be an empty string.\n    var value = getInitialStylingValue(context) || null;\n    // Ivy does an extra `[class]` write with a falsy value since the value\n    // is applied during creation mode. This is a deviation from VE and should\n    // be (Jira Issue = FW-1467).\n    setInputsForProperty(lView, stylingInputs, value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param attrs Set of attributes to be used when matching directives.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n *\n * @codeGenApi\n */\nfunction ÉµÉµelementContainerStart(index, attrs, localRefs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var renderer = lView[RENDERER];\n    var tagName = 'ng-container';\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n    var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n    ngDevMode && assertDataInRange(lView, index - 1);\n    var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n    if (attrs && tView.firstTemplatePass) {\n        // While ng-container doesn't necessarily support styling, we use the style context to identify\n        // and execute directives on the ng-container.\n        registerInitialStylingOnTNode(tNode, attrs, 0);\n    }\n    appendChild(native, tNode, lView);\n    if (tView.firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        resolveDirectives(tView, lView, tNode, localRefs || null);\n        if (tView.queries) {\n            tView.queries.elementStart(tView, tNode);\n        }\n    }\n    createDirectivesAndLocals(tView, lView, tNode);\n    attachPatchData(native, lView);\n    executeContentQueries(tView, tNode, lView);\n}\n/**\n * Mark the end of the <ng-container>.\n *\n * @codeGenApi\n */\nfunction ÉµÉµelementContainerEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    if (getIsParent()) {\n        setIsNotParent();\n    }\n    else {\n        ngDevMode && assertHasParent(previousOrParentTNode);\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode, false);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n    registerPostOrderHooks(tView, previousOrParentTNode);\n    if (tView.firstTemplatePass && tView.queries !== null &&\n        isContentQueryHost(previousOrParentTNode)) {\n        tView.queries.elementEnd(previousOrParentTNode);\n    }\n}\n/**\n * Creates an empty logical container using {@link elementContainerStart}\n * and {@link elementContainerEnd}\n *\n * @param index Index of the element in the LView array\n * @param attrs Set of attributes to be used when matching directives.\n * @param localRefs A set of local reference bindings on the element.\n *\n * @codeGenApi\n */\nfunction ÉµÉµelementContainer(index, attrs, localRefs) {\n    ÉµÉµelementContainerStart(index, attrs, localRefs);\n    ÉµÉµelementContainerEnd();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n *\n * @codeGenApi\n */\nfunction ÉµÉµembeddedViewStart(viewBlockId, consts, vars) {\n    var lView = getLView();\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    // The previous node can be a view node if we are processing an inline for loop\n    var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n        previousOrParentTNode.parent :\n        previousOrParentTNode;\n    var lContainer = lView[containerTNode.index];\n    ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n    var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n    if (viewToRender) {\n        setIsParent();\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n        var tParentNode = getIsParent() ? previousOrParentTNode :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    if (lContainer) {\n        if (isCreationMode(viewToRender)) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n        }\n        lContainer[ACTIVE_INDEX]++;\n    }\n    return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param vars The number of bindings and pure function bindings in this template\n * @param container The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n    }\n    return containerTViews[viewIndex];\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param lContainer to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n */\nfunction scanForView(lContainer, startIdx, viewBlockId) {\n    for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n        var viewAtPositionId = lContainer[i][TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return lContainer[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the searchdef.cont here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the end of an embedded view.\n *\n * @codeGenApi\n */\nfunction ÉµÉµembeddedViewEnd() {\n    var lView = getLView();\n    var viewHost = lView[T_HOST];\n    if (isCreationMode(lView)) {\n        refreshDescendantViews(lView); // creation mode pass\n        lView[FLAGS] &= ~4 /* CreationMode */;\n    }\n    resetPreOrderHookFlags(lView);\n    refreshDescendantViews(lView); // update mode pass\n    var lContainer = lView[PARENT];\n    ngDevMode && assertLContainerOrUndefined(lContainer);\n    // It's always safe to run hooks here, as `leaveView` is not called during the 'finally' block\n    // of a try-catch-finally statement, so it can never be reached while unwinding the stack due to\n    // an error being thrown.\n    leaveView(lContainer[PARENT], /* safeToRunHooks */ true);\n    setPreviousOrParentTNode(viewHost, false);\n}\n\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @codeGenApi\n */\nfunction ÉµÉµgetCurrentView() {\n    return getLView();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use isObservable once we update pass rxjs 6.1\n    // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener\n * @param eventTargetResolver Function that returns global target information in case this listener\n * should be attached to a global object like window, document or body\n *\n * @codeGenApi\n */\nfunction ÉµÉµlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n    if (useCapture === void 0) { useCapture = false; }\n    listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n}\n/**\n* Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n*\n* This instruction is for compatibility purposes and is designed to ensure that a\n* synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n* in the component's renderer. Normally all host listeners are evaluated with the\n* parent component's renderer, but, in the case of animation @triggers, they need\n* to be evaluated with the sub component's renderer (because that's where the\n* animation triggers are defined).\n*\n* Do not use this instruction as a replacement for `listener`. This instruction\n* only exists to ensure compatibility with the ViewEngine's host binding behavior.\n*\n* @param eventName Name of the event\n* @param listenerFn The function to be called when event emits\n* @param useCapture Whether or not to use capture in event listener\n* @param eventTargetResolver Function that returns global target information in case this listener\n* should be attached to a global object like window, document or body\n *\n * @codeGenApi\n*/\nfunction ÉµÉµcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n    if (useCapture === void 0) { useCapture = false; }\n    listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n}\n/**\n * A utility function that checks if a given element has already an event handler registered for an\n * event with a specified name. The TView.cleanup data structure is used to find out which events\n * are registered for a given element.\n */\nfunction findExistingListener(lView, eventName, tNodeIdx) {\n    var tView = lView[TVIEW];\n    var tCleanup = tView.cleanup;\n    if (tCleanup != null) {\n        for (var i = 0; i < tCleanup.length - 1; i += 2) {\n            var cleanupEventName = tCleanup[i];\n            if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                // We have found a matching event name on the same node but it might not have been\n                // registered yet, so we must explicitly verify entries in the LView cleanup data\n                // structures.\n                var lCleanup = lView[CLEANUP];\n                var listenerIdxInLCleanup = tCleanup[i + 2];\n                return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n            }\n            // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n            // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n            // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n            // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n            // documentation of TView.cleanup for more details of this data structure layout.\n            if (typeof cleanupEventName === 'string') {\n                i += 2;\n            }\n        }\n    }\n    return null;\n}\nfunction listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n    if (useCapture === void 0) { useCapture = false; }\n    var lView = getLView();\n    var tNode = getPreviousOrParentTNode();\n    var tView = lView[TVIEW];\n    var firstTemplatePass = tView.firstTemplatePass;\n    var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n    var processOutputs = true;\n    // add native event listener - applicable to elements only\n    if (tNode.type === 3 /* Element */) {\n        var native = getNativeByTNode(tNode, lView);\n        var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n        var target = resolved.target || native;\n        var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n        var lCleanup = getCleanup(lView);\n        var lCleanupIndex = lCleanup.length;\n        var idxOrTargetGetter = eventTargetResolver ?\n            function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n            tNode.index;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            // There might be cases where multiple directives on the same element try to register an event\n            // handler function for the same event. In this situation we want to avoid registration of\n            // several native listeners as each registration would be intercepted by NgZone and\n            // trigger change detection. This would mean that a single user action would result in several\n            // change detections being invoked. To avoid this situation we want to have only one call to\n            // native handler registration (for the same element and same type of event).\n            //\n            // In order to have just one native event handler in presence of multiple handler functions,\n            // we just register a first handler function as a native event listener and then chain\n            // (coalesce) other handler functions on top of the first native handler function.\n            var existingListener = null;\n            // Please note that the coalescing described here doesn't happen for events specifying an\n            // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n            // view engine.\n            // Also, we don't have to search for existing listeners is there are no directives\n            // matching on a given node as we can't register multiple event handlers for the same event in\n            // a template (this would mean having duplicate attributes).\n            if (!eventTargetResolver && hasDirectives(tNode)) {\n                existingListener = findExistingListener(lView, eventName, tNode.index);\n            }\n            if (existingListener !== null) {\n                // Attach a new listener at the head of the coalesced listeners list.\n                listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                existingListener.__ngNextListenerFn__ = listenerFn;\n                processOutputs = false;\n            }\n            else {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn, cleanupFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n            }\n        }\n        else {\n            listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n            target.addEventListener(eventName, listenerFn, useCapture);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            lCleanup.push(listenerFn);\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n        }\n    }\n    // subscribe to directive outputs\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var props;\n    if (processOutputs && outputs && (props = outputs[eventName])) {\n        var propsLength = props.length;\n        if (propsLength) {\n            var lCleanup = getCleanup(lView);\n            for (var i = 0; i < propsLength; i += 3) {\n                var index = props[i];\n                ngDevMode && assertDataInRange(lView, index);\n                var minifiedName = props[i + 2];\n                var directiveInstance = lView[index];\n                var output = directiveInstance[minifiedName];\n                if (ngDevMode && !isObservable(output)) {\n                    throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                }\n                var subscription = output.subscribe(listenerFn);\n                var idx = lCleanup.length;\n                lCleanup.push(listenerFn, subscription);\n                tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n            }\n        }\n    }\n}\nfunction executeListenerWithErrorHandling(lView, listenerFn, e) {\n    try {\n        // Only explicitly returning false from a listener should preventDefault\n        return listenerFn(e) !== false;\n    }\n    catch (error) {\n        handleError(lView, error);\n        return false;\n    }\n}\n/**\n * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n * if applicable.\n *\n * @param tNode The TNode associated with this listener\n * @param lView The LView that contains this listener\n * @param listenerFn The listener function to call\n * @param wrapWithPreventDefault Whether or not to prevent default behavior\n * (the procedural renderer does this already, so in those cases, we should skip)\n */\nfunction wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n    // Note: we are performing most of the work in the listener function itself\n    // to optimize listener registration.\n    return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n        // In order to be backwards compatible with View Engine, events on component host nodes\n        // must also mark the component view itself dirty (i.e. the view that it owns).\n        var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n        // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n        if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n            markViewDirty(startView);\n        }\n        var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n        // A just-invoked listener function might have coalesced listeners so we need to check for\n        // their presence and invoke as needed.\n        var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n        while (nextListenerFn) {\n            // We should prevent default if any of the listeners explicitly return false\n            result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n            nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n        }\n        if (wrapWithPreventDefault && result === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n        return result;\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @param level The relative level of the view from which to grab context compared to contextVewData\n * @returns context\n *\n * @codeGenApi\n */\nfunction ÉµÉµnextContext(level) {\n    if (level === void 0) { level = 1; }\n    return nextContextImpl(level);\n}\n\n/**\n * Checks a given node against matching projection slots and returns the\n * determined slot index. Returns \"null\" if no slot matched the given node.\n *\n * This function takes into account the parsed ngProjectAs selector from the\n * node's attributes. If present, it will check whether the ngProjectAs selector\n * matches any of the projection slot selectors.\n */\nfunction matchingProjectionSlotIndex(tNode, projectionSlots) {\n    var wildcardNgContentIndex = null;\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < projectionSlots.length; i++) {\n        var slotValue = projectionSlots[i];\n        // The last wildcard projection slot should match all nodes which aren't matching\n        // any selector. This is necessary to be backwards compatible with view engine.\n        if (slotValue === '*') {\n            wildcardNgContentIndex = i;\n            continue;\n        }\n        // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n        // to the list of selectors, otherwise we fall back to matching against the node.\n        if (ngProjectAsAttrVal === null ?\n            isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n            isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n            return i; // first matching selector \"captures\" a given node\n        }\n    }\n    return wildcardNgContentIndex;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param projectionSlots? A collection of projection slots. A projection slot can be based\n *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n *        all nodes which do not match any selector. If not specified, a single wildcard\n *        selector projection slot will be defined.\n *\n * @codeGenApi\n */\nfunction ÉµÉµprojectionDef(projectionSlots) {\n    var componentNode = findComponentView(getLView())[T_HOST];\n    if (!componentNode.projection) {\n        // If no explicit projection slots are defined, fall back to a single\n        // projection slot with the wildcard selector.\n        var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n        var projectionHeads = componentNode.projection =\n            new Array(numProjectionSlots).fill(null);\n        var tails = projectionHeads.slice();\n        var componentChild = componentNode.child;\n        while (componentChild !== null) {\n            var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n            if (slotIndex !== null) {\n                if (tails[slotIndex]) {\n                    tails[slotIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[slotIndex] = componentChild;\n                }\n                tails[slotIndex] = componentChild;\n            }\n            componentChild = componentChild.next;\n        }\n    }\n}\nvar delayProjection = false;\nfunction setDelayProjection(value) {\n    delayProjection = value;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n *\n * @codeGenApi\n*/\nfunction ÉµÉµprojection(nodeIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var lView = getLView();\n    var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (tProjectionNode.projection === null)\n        tProjectionNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    setIsNotParent();\n    // We might need to delay the projection of nodes if they are in the middle of an i18n block\n    if (!delayProjection) {\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n}\n\n/**\n *\n * Update an interpolated property on an element with a lone bound value\n *\n * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n * surrounds that interpolated value:\n *\n * ```html\n * <div title=\"{{v0}}\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate('title', v0);\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate(propName, v0, sanitizer) {\n    ÉµÉµpropertyInterpolate1(propName, '', v0, '', sanitizer);\n    return ÉµÉµpropertyInterpolate;\n}\n/**\n *\n * Update an interpolated property on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate1;\n}\n/**\n *\n * Update an interpolated property on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate2;\n}\n/**\n *\n * Update an interpolated property on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate3(\n * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate3;\n}\n/**\n *\n * Update an interpolated property on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate4(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate4;\n}\n/**\n *\n * Update an interpolated property on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate5(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate5;\n}\n/**\n *\n * Update an interpolated property on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate6(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate6;\n}\n/**\n *\n * Update an interpolated property on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate7(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate7;\n}\n/**\n *\n * Update an interpolated property on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolate8(\n *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolate8;\n}\n/**\n * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 7.\n *\n * ```html\n * <div\n *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ÉµÉµpropertyInterpolateV(\n *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update.\n * @param values The a collection of values and the strings inbetween those values, beginning with a\n * string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµpropertyInterpolateV(propName, values, sanitizer) {\n    var index = getSelectedIndex();\n    var interpolatedValue = interpolationV(getLView(), values);\n    if (interpolatedValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n    }\n    return ÉµÉµpropertyInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n *\n * @codeGenApi\n */\nfunction ÉµÉµtext(index, value) {\n    var lView = getLView();\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n    var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n    ngDevMode && ngDevMode.rendererSetText++;\n    var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n    // Text nodes are self closing.\n    setIsNotParent();\n    appendChild(textNative, tNode, lView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param value Stringified value to write.\n *\n * @codeGenApi\n */\nfunction ÉµÉµtextBinding(value) {\n    var lView = getLView();\n    var index = getSelectedIndex();\n    var bound = bind(lView, value);\n    if (bound !== NO_CHANGE) {\n        textBindingInternal(lView, index, renderStringify(bound));\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * Update text content with a lone bound value\n *\n * Used when a text node has 1 interpolated value in it, an no additional text\n * surrounds that interpolated value:\n *\n * ```html\n * <div>{{v0}}</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate(v0);\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate(v0) {\n    ÉµÉµtextInterpolate1('', v0, '');\n    return ÉµÉµtextInterpolate;\n}\n/**\n *\n * Update text content with single bound value surrounded by other text.\n *\n * Used when a text node has 1 interpolated value in it:\n *\n * ```html\n * <div>prefix{{v0}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate1('prefix', v0, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate1(prefix, v0, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation1(lView, prefix, v0, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate1;\n}\n/**\n *\n * Update text content with 2 bound values surrounded by other text.\n *\n * Used when a text node has 2 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate2(prefix, v0, i0, v1, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate2;\n}\n/**\n *\n * Update text content with 3 bound values surrounded by other text.\n *\n * Used when a text node has 3 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate3(\n * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate3;\n}\n/**\n *\n * Update text content with 4 bound values surrounded by other text.\n *\n * Used when a text node has 4 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate4(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see ÉµÉµtextInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate4;\n}\n/**\n *\n * Update text content with 5 bound values surrounded by other text.\n *\n * Used when a text node has 5 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate5(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate5;\n}\n/**\n *\n * Update text content with 6 bound values surrounded by other text.\n *\n * Used when a text node has 6 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate6(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change. @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate6;\n}\n/**\n *\n * Update text content with 7 bound values surrounded by other text.\n *\n * Used when a text node has 7 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate7(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate7;\n}\n/**\n *\n * Update text content with 8 bound values surrounded by other text.\n *\n * Used when a text node has 8 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolate8(\n *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolate8;\n}\n/**\n * Update text content with 9 or more bound values other surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµtextInterpolateV(\n *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *.\n * @param values The a collection of values and the strings in between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n *\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµtextInterpolateV(values) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    var interpolated = interpolationV(lView, values);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, index, interpolated);\n    }\n    return ÉµÉµtextInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * Update an interpolated class on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate1('prefix', v0, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate1(prefix, v0, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n *\n * Update an interpolated class on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n *\n * Update an interpolated class on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate3(\n * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n *\n * Update an interpolated class on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate4(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n *\n * Update an interpolated class on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate5(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n *\n * Update an interpolated class on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate6(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n *\n * Update an interpolated class on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate7(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n *\n * Update an interpolated class on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolate8(\n *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n/**\n * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 7.\n *\n * ```html\n * <div\n *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµclassMapInterpolateV(\n *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *.\n * @param values The a collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @codeGenApi\n */\nfunction ÉµÉµclassMapInterpolateV(values) {\n    var lView = getLView();\n    var interpolatedValue = interpolationV(lView, values);\n    classMapInternal(getSelectedIndex(), interpolatedValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * Update an interpolated style property on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate1;\n}\n/**\n *\n * Update an interpolated style property on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate2;\n}\n/**\n *\n * Update an interpolated style property on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate3;\n}\n/**\n *\n * Update an interpolated style property on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate4;\n}\n/**\n *\n * Update an interpolated style property on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate5;\n}\n/**\n *\n * Update an interpolated style property on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate6;\n}\n/**\n *\n * Update an interpolated style property on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate7(\n *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate7;\n}\n/**\n *\n * Update an interpolated style property on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n * '-', v7, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolate8;\n}\n/**\n * Update an interpolated style property on an element with 8 or more bound values surrounded by\n * text.\n *\n * Used when the number of interpolated values exceeds 7.\n *\n * ```html\n * <div\n *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n * </div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ÉµÉµstylePropInterpolateV(\n *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`..\n * @param values The a collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ÉµÉµstylePropInterpolateV(prop, values, valueSuffix) {\n    var lView = getLView();\n    var interpolatedValue = interpolationV(lView, values);\n    stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n    return ÉµÉµstylePropInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Update a property on a host element. Only applies to native node properties, not inputs.\n *\n * Operates on the element selected by index via the {@link select} instruction.\n *\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @returns This function returns itself so that it may be chained\n * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n *\n * @codeGenApi\n */\nfunction ÉµÉµhostProperty(propName, value, sanitizer) {\n    var index = getSelectedIndex();\n    ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n    var lView = getLView();\n    var bindReconciledValue = bind(lView, value);\n    if (bindReconciledValue !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n    }\n    return ÉµÉµhostProperty;\n}\n/**\n * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n * the component's renderer. Normally all host bindings are evaluated with the parent\n * component's renderer, but, in the case of animation @triggers, they need to be\n * evaluated with the sub component's renderer (because that's where the animation\n * triggers are defined).\n *\n * Do not use this instruction as a replacement for `elementProperty`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n *\n * @codeGenApi\n */\nfunction ÉµÉµupdateSyntheticHostBinding(propName, value, sanitizer) {\n    var index = getSelectedIndex();\n    var lView = getLView();\n    // TODO(benlesh): remove bind call here.\n    var bound = bind(lView, value);\n    if (bound !== NO_CHANGE) {\n        elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n    }\n    return ÉµÉµupdateSyntheticHostBinding;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nfunction getComponent(element) {\n    var context = loadLContextFromNode(element);\n    if (context.component === undefined) {\n        context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n    }\n    return context.component;\n}\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nfunction getContext$1(element) {\n    var context = loadLContextFromNode(element);\n    return context.lView[CONTEXT];\n}\n/**\n * Returns the component instance associated with view which owns the DOM element (`null`\n * otherwise).\n *\n * @param element DOM element which is owned by an existing component's view.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n * expect(getViewComponent(<my-app>)).toEqual(null);\n * ```\n *\n * @publicApi\n */\nfunction getViewComponent(element) {\n    var context = loadLContext(element);\n    var lView = context.lView;\n    var parent;\n    ngDevMode && assertLView(lView);\n    while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n        // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n        lView = parent;\n    }\n    return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n}\n/**\n * Retrieve all root components.\n *\n * Root components are those which have been bootstrapped by Angular.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getRootComponents(target) {\n    return __spread(getRootContext(target).components);\n}\n/**\n * Retrieves an `Injector` associated with the element, component or directive.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getInjector(target) {\n    var context = loadLContext(target);\n    var tNode = context.lView[TVIEW].data[context.nodeIndex];\n    return new NodeInjector(tNode, context.lView);\n}\n/**\n * Retrieve a set of injection tokens at a given DOM node.\n *\n * @param element Element for which the injection tokens should be retrieved.\n * @publicApi\n */\nfunction getInjectionTokens(element) {\n    var context = loadLContext(element, false);\n    if (!context)\n        return [];\n    var lView = context.lView;\n    var tView = lView[TVIEW];\n    var tNode = tView.data[context.nodeIndex];\n    var providerTokens = [];\n    var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n    var endIndex = tNode.directiveEnd;\n    for (var i = startIndex; i < endIndex; i++) {\n        var value = tView.data[i];\n        if (isDirectiveDefHack(value)) {\n            // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n            // design flaw.  We should always store same type so that we can be monomorphic. The issue\n            // is that for Components/Directives we store the def instead the type. The correct behavior\n            // is that we should always be storing injectable type in this location.\n            value = value.type;\n        }\n        providerTokens.push(value);\n    }\n    return providerTokens;\n}\n/**\n * Retrieves directives associated with a given DOM host element.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getDirectives(target) {\n    var context = loadLContext(target);\n    if (context.directives === undefined) {\n        context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n    }\n    return context.directives || [];\n}\nfunction loadLContext(target, throwOnNotFound) {\n    if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n    var context = getLContext(target);\n    if (!context && throwOnNotFound) {\n        throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n            'Invalid ng target');\n    }\n    return context;\n}\n/**\n * Retrieve map of local references.\n *\n * The references are retrieved as a map of local reference name to element or directive instance.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getLocalRefs(target) {\n    var context = loadLContext(target);\n    if (context.localRefs === undefined) {\n        context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n    }\n    return context.localRefs || {};\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param directive Component or Directive for which the host element should be retrieved.\n *\n * @publicApi\n */\nfunction getHostElement(directive) {\n    return getLContext(directive).native;\n}\nfunction loadLContextFromNode(node) {\n    if (!(node instanceof Node))\n        throw new Error('Expecting instance of DOM Node');\n    return loadLContext(node);\n}\nfunction isBrowserEvents(listener) {\n    // Browser events are those which don't have `useCapture` as boolean.\n    return typeof listener.useCapture === 'boolean';\n}\n/**\n * Retrieves a list of DOM listeners.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div (click)=\"doSomething()\">\n *     </div>\n * </mp-app>\n *\n * expect(getListeners(<div>)).toEqual({\n *   name: 'click',\n *   element: <div>,\n *   callback: () => doSomething(),\n *   useCapture: false\n * });\n * ```\n *\n * @param element Element for which the DOM listeners should be retrieved.\n * @publicApi\n */\nfunction getListeners(element) {\n    var lContext = loadLContextFromNode(element);\n    var lView = lContext.lView;\n    var tView = lView[TVIEW];\n    var lCleanup = lView[CLEANUP];\n    var tCleanup = tView.cleanup;\n    var listeners = [];\n    if (tCleanup && lCleanup) {\n        for (var i = 0; i < tCleanup.length;) {\n            var firstParam = tCleanup[i++];\n            var secondParam = tCleanup[i++];\n            if (typeof firstParam === 'string') {\n                var name_1 = firstParam;\n                var listenerElement = unwrapRNode(lView[secondParam]);\n                var callback = lCleanup[tCleanup[i++]];\n                var useCaptureOrIndx = tCleanup[i++];\n                // if useCaptureOrIndx is boolean then report it as is.\n                // if useCaptureOrIndx is positive number then it in unsubscribe method\n                // if useCaptureOrIndx is negative number then it is a Subscription\n                var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                    useCaptureOrIndx :\n                    (useCaptureOrIndx >= 0 ? false : null);\n                if (element == listenerElement) {\n                    listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                }\n            }\n        }\n    }\n    listeners.sort(sortListeners);\n    return listeners;\n}\nfunction sortListeners(a, b) {\n    if (a.name == b.name)\n        return 0;\n    return a.name < b.name ? -1 : 1;\n}\n/**\n * This function should not exist because it is megamorphic and only mostly correct.\n *\n * See call site for more info.\n */\nfunction isDirectiveDefHack(obj) {\n    return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file introduces series of globally accessible debug tools\n * to allow for the Angular debugging story to function.\n *\n * To see this in action run the following command:\n *\n *   bazel run --define=compile=aot\n *   //packages/core/test/bundling/todo:devserver\n *\n *  Then load `localhost:5432` and start using the console tools.\n */\n/**\n * This value reflects the property on the window where the dev\n * tools are patched (window.ng).\n * */\nvar GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\nvar _published = false;\n/**\n * Publishes a collection of default debug tools onto`window.ng`.\n *\n * These functions are available globally when Angular is in development\n * mode and are automatically stripped away from prod mode is on.\n */\nfunction publishDefaultGlobalUtils() {\n    if (!_published) {\n        _published = true;\n        publishGlobalUtil('getComponent', getComponent);\n        publishGlobalUtil('getContext', getContext$1);\n        publishGlobalUtil('getListeners', getListeners);\n        publishGlobalUtil('getViewComponent', getViewComponent);\n        publishGlobalUtil('getHostElement', getHostElement);\n        publishGlobalUtil('getInjector', getInjector);\n        publishGlobalUtil('getRootComponents', getRootComponents);\n        publishGlobalUtil('getDirectives', getDirectives);\n        publishGlobalUtil('markDirty', markDirty);\n    }\n}\n/**\n * Publishes the given function to `window.ng` so that it can be\n * used from the browser console when an application is not in production.\n */\nfunction publishGlobalUtil(name, fn) {\n    var w = _global;\n    ngDevMode && assertDefined(fn, 'function not defined');\n    if (w) {\n        var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n        if (!container) {\n            container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n        }\n        container[name] = fn;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && publishDefaultGlobalUtils();\n    ngDevMode && assertComponentType(componentType);\n    // this is preemptively set to avoid having test and debug code accidentally\n    // read data from a previous application state...\n    setActiveHostElement(null);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = getComponentDef(componentType);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n        16 /* CheckAlways */ | 512 /* IsRoot */;\n    var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n    var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n    var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n    var oldView = enterView(rootView, null);\n    var component;\n    // Will become true if the `try` block executes with no errors.\n    var safeToRunHooks = false;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n        component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n        addToViewTree(rootView, componentView);\n        refreshDescendantViews(rootView); // creation mode pass\n        rootView[FLAGS] &= ~4 /* CreationMode */;\n        resetPreOrderHookFlags(rootView);\n        refreshDescendantViews(rootView); // update mode pass\n        safeToRunHooks = true;\n    }\n    finally {\n        leaveView(oldView, safeToRunHooks);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * Creates the root component view and the root component node.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n * @param rootView The parent view where the host node is stored\n * @param renderer The current renderer\n * @param sanitizer The sanitizer, if provided\n *\n * @returns Component view created\n */\nfunction createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n    resetComponentState();\n    var tView = rootView[TVIEW];\n    ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n    rootView[0 + HEADER_OFFSET] = rNode;\n    var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n    var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n    if (tView.firstTemplatePass) {\n        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n        tNode.flags = 1 /* isComponent */;\n        initNodeFlags(tNode, rootView.length, 1);\n        queueComponentIndexForCheck(tNode);\n    }\n    // Store component view at node index, with node as the HOST\n    return rootView[HEADER_OFFSET] = componentView;\n}\n/**\n * Creates a root component and sets it up with features and host bindings. Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n */\nfunction createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n    var tView = rootView[TVIEW];\n    // Create directive instance with factory() and store at next index in viewData\n    var component = instantiateRootComponent(tView, rootView, componentDef);\n    rootContext.components.push(component);\n    componentView[CONTEXT] = component;\n    hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n    // We want to generate an empty QueryList for root content queries for backwards\n    // compatibility with ViewEngine.\n    if (componentDef.contentQueries) {\n        componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n    }\n    var rootTNode = getPreviousOrParentTNode();\n    if (tView.firstTemplatePass && componentDef.hostBindings) {\n        var elementIndex = rootTNode.index - HEADER_OFFSET;\n        setActiveHostElement(elementIndex);\n        var expando = tView.expandoInstructions;\n        invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n        setActiveHostElement(null);\n    }\n    return component;\n}\nfunction createRootContext(scheduler, playerHandler) {\n    return {\n        components: [],\n        scheduler: scheduler || defaultScheduler,\n        clean: CLEAN_PROMISE,\n        playerHandler: playerHandler || null,\n        flags: 0 /* Empty */\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\nfunction LifecycleHooksFeature(component, def) {\n    var rootTView = readPatchedLView(component)[TVIEW];\n    var dirIndex = rootTView.data.length - 1;\n    registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n    // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n    // LNode).\n    registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a basic change from a previous to a new value for a single\n * property on a directive instance. Passed as a value in a\n * {@link SimpleChanges} object to the `ngOnChanges` hook.\n *\n * @see `OnChanges`\n *\n * @publicApi\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature()]\n * });\n * ```\n *\n * @codeGenApi\n */\nfunction ÉµÉµNgOnChangesFeature() {\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeatureImpl.ngInherit = true;\n    return NgOnChangesFeatureImpl;\n}\nfunction NgOnChangesFeatureImpl(definition) {\n    if (definition.type.prototype.ngOnChanges) {\n        definition.setInput = ngOnChangesSetInput;\n        definition.onChanges = wrapOnChanges();\n    }\n}\nfunction wrapOnChanges() {\n    return function wrapOnChangesHook_inPreviousChangesStorage() {\n        var simpleChangesStore = getSimpleChangesStore(this);\n        var current = simpleChangesStore && simpleChangesStore.current;\n        if (current) {\n            var previous = simpleChangesStore.previous;\n            if (previous === EMPTY_OBJ) {\n                simpleChangesStore.previous = current;\n            }\n            else {\n                // New changes are copied to the previous store, so that we don't lose history for inputs\n                // which were not changed this time\n                for (var key in current) {\n                    previous[key] = current[key];\n                }\n            }\n            simpleChangesStore.current = null;\n            this.ngOnChanges(current);\n        }\n    };\n}\nfunction ngOnChangesSetInput(instance, value, publicName, privateName) {\n    var simpleChangesStore = getSimpleChangesStore(instance) ||\n        setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n    var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n    var previous = simpleChangesStore.previous;\n    var declaredName = this.declaredInputs[publicName];\n    var previousChange = previous[declaredName];\n    current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n    instance[privateName] = value;\n}\nvar SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\nfunction getSimpleChangesStore(instance) {\n    return instance[SIMPLE_CHANGES_STORE] || null;\n}\nfunction setSimpleChangesStore(instance, store) {\n    return instance[SIMPLE_CHANGES_STORE] = store;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n *\n * @codeGenApi\n */\nfunction ÉµÉµInheritDefinitionFeature(definition) {\n    var e_1, _a;\n    var superType = getSuperType(definition.type);\n    while (superType) {\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n        }\n        else {\n            if (superType.ngComponentDef) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngDirectiveDef;\n        }\n        var baseDef = superType.ngBaseDef;\n        // Some fields in the definition may be empty, if there were no values to put in them that\n        // would've justified object creation. Unwrap them if necessary.\n        if (baseDef || superDef) {\n            var writeableDef = definition;\n            writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n            writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n            writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n        }\n        if (baseDef) {\n            var baseViewQuery = baseDef.viewQuery;\n            var baseContentQueries = baseDef.contentQueries;\n            var baseHostBindings = baseDef.hostBindings;\n            baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n            baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n            baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n            fillProperties(definition.inputs, baseDef.inputs);\n            fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n            fillProperties(definition.outputs, baseDef.outputs);\n        }\n        if (superDef) {\n            // Merge hostBindings\n            var superHostBindings = superDef.hostBindings;\n            superHostBindings && inheritHostBindings(definition, superHostBindings);\n            // Merge queries\n            var superViewQuery = superDef.viewQuery;\n            var superContentQueries = superDef.contentQueries;\n            superViewQuery && inheritViewQuery(definition, superViewQuery);\n            superContentQueries && inheritContentQueries(definition, superContentQueries);\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, superDef.inputs);\n            fillProperties(definition.declaredInputs, superDef.declaredInputs);\n            fillProperties(definition.outputs, superDef.outputs);\n            // Inherit hooks\n            // Assume super class inheritance feature has already run.\n            definition.afterContentChecked =\n                definition.afterContentChecked || superDef.afterContentChecked;\n            definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n            definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n            definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n            definition.doCheck = definition.doCheck || superDef.doCheck;\n            definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n            definition.onInit = definition.onInit || superDef.onInit;\n            // Run parent features\n            var features = superDef.features;\n            if (features) {\n                try {\n                    for (var features_1 = (e_1 = void 0, __values(features)), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                        var feature = features_1_1.value;\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        }\n        else {\n            // Even if we don't have a definition, check the type for the hooks and use those if need be\n            var superPrototype = superType.prototype;\n            if (superPrototype) {\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                definition.afterContentInit =\n                    definition.afterContentInit || superPrototype.ngAfterContentInit;\n                definition.afterViewChecked =\n                    definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                if (superPrototype.ngOnChanges) {\n                    ÉµÉµNgOnChangesFeature()(definition);\n                }\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n    }\n}\nfunction maybeUnwrapEmpty(value) {\n    if (value === EMPTY_OBJ) {\n        return {};\n    }\n    else if (value === EMPTY_ARRAY) {\n        return [];\n    }\n    else {\n        return value;\n    }\n}\nfunction inheritViewQuery(definition, superViewQuery) {\n    var prevViewQuery = definition.viewQuery;\n    if (prevViewQuery) {\n        definition.viewQuery = function (rf, ctx) {\n            superViewQuery(rf, ctx);\n            prevViewQuery(rf, ctx);\n        };\n    }\n    else {\n        definition.viewQuery = superViewQuery;\n    }\n}\nfunction inheritContentQueries(definition, superContentQueries) {\n    var prevContentQueries = definition.contentQueries;\n    if (prevContentQueries) {\n        definition.contentQueries = function (rf, ctx, directiveIndex) {\n            superContentQueries(rf, ctx, directiveIndex);\n            prevContentQueries(rf, ctx, directiveIndex);\n        };\n    }\n    else {\n        definition.contentQueries = superContentQueries;\n    }\n}\nfunction inheritHostBindings(definition, superHostBindings) {\n    var prevHostBindings = definition.hostBindings;\n    // If the subclass does not have a host bindings function, we set the subclass host binding\n    // function to be the superclass's (in this feature). We should check if they're the same here\n    // to ensure we don't inherit it twice.\n    if (superHostBindings !== prevHostBindings) {\n        if (prevHostBindings) {\n            // because inheritance is unknown during compile time, the runtime code\n            // needs to be informed of the super-class depth so that instruction code\n            // can distinguish one host bindings function from another. The reason why\n            // relying on the directive uniqueId exclusively is not enough is because the\n            // uniqueId value and the directive instance stay the same between hostBindings\n            // calls throughout the directive inheritance chain. This means that without\n            // a super-class depth value, there is no way to know whether a parent or\n            // sub-class host bindings function is currently being executed.\n            definition.hostBindings = function (rf, ctx, elementIndex) {\n                // The reason why we increment first and then decrement is so that parent\n                // hostBindings calls have a higher id value compared to sub-class hostBindings\n                // calls (this way the leaf directive is always at a super-class depth of 0).\n                adjustActiveDirectiveSuperClassDepthPosition(1);\n                try {\n                    superHostBindings(rf, ctx, elementIndex);\n                }\n                finally {\n                    adjustActiveDirectiveSuperClassDepthPosition(-1);\n                }\n                prevHostBindings(rf, ctx, elementIndex);\n            };\n        }\n        else {\n            definition.hostBindings = superHostBindings;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves the providers which are defined in the DirectiveDef.\n *\n * When inserting the tokens and the factories in their respective arrays, we can assume that\n * this method is called first for the component (if any), and then for other directives on the same\n * node.\n * As a consequence,the providers are always processed in that order:\n * 1) The view providers of the component\n * 2) The providers of the component\n * 3) The providers of the other directives\n * This matches the structure of the injectables arrays of a view (for each node).\n * So the tokens and the factories can be pushed at the end of the arrays, except\n * in one case for multi providers.\n *\n * @param def the directive definition\n * @param providers: Array of `providers`.\n * @param viewProviders: Array of `viewProviders`.\n */\nfunction providersResolver(def, providers, viewProviders) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    if (tView.firstTemplatePass) {\n        var isComponent = isComponentDef(def);\n        // The list of view providers is processed first, and the flags are updated\n        resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n        // Then, the list of providers is processed, and the flags are updated\n        resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n    }\n}\n/**\n * Resolves a provider and publishes it to the DI system.\n */\nfunction resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n    provider = resolveForwardRef(provider);\n    if (Array.isArray(provider)) {\n        // Recursively call `resolveProvider`\n        // Recursion is OK in this case because this code will not be in hot-path once we implement\n        // cloning of the initial state.\n        for (var i = 0; i < provider.length; i++) {\n            resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n        }\n    }\n    else {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        var providerFactory = providerToFactory(provider);\n        var tNode = getPreviousOrParentTNode();\n        var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveStart;\n        var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n        if (isClassProvider(provider) || isTypeProvider(provider)) {\n            var prototype = (provider.useClass || provider).prototype;\n            var ngOnDestroy = prototype.ngOnDestroy;\n            if (ngOnDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n            }\n        }\n        if (isTypeProvider(provider) || !provider.multi) {\n            // Single provider case: the factory is created and pushed immediately\n            var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ÉµÉµdirectiveInject);\n            var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n            if (existingFactoryIndex == -1) {\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                lInjectablesBlueprint[existingFactoryIndex] = factory;\n                lView[existingFactoryIndex] = factory;\n            }\n        }\n        else {\n            // Multi provider case:\n            // We create a multi factory which is going to aggregate all the values.\n            // Since the output of such a factory depends on content or view injection,\n            // we create two of them, which are linked together.\n            //\n            // The first one (for view providers) is always in the first block of the injectables array,\n            // and the second one (for providers) is always in the second block.\n            // This is important because view providers have higher priority. When a multi token\n            // is being looked up, the view providers should be found first.\n            // Note that it is not possible to have a multi factory in the third block (directive block).\n            //\n            // The algorithm to process multi providers is as follows:\n            // 1) If the multi provider comes from the `viewProviders` of the component:\n            //   a) If the special view providers factory doesn't exist, it is created and pushed.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            // 2) If the multi provider comes from the `providers` of the component or of another\n            // directive:\n            //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n            //      It is also linked to the multi factory for view providers, if it exists.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n            var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n            var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingProvidersFactoryIndex];\n            var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n            if (isViewProvider && !doesViewProvidersFactoryExist ||\n                !isViewProvider && !doesProvidersFactoryExist) {\n                // Cases 1.a and 2.a\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                if (!isViewProvider && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                }\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                // Cases 1.b and 2.b\n                multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n            }\n            if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n            }\n        }\n    }\n}\n/**\n * Add a factory in a multi factory.\n */\nfunction multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n    multiFactory.multi.push(factory);\n    if (isComponentProvider) {\n        multiFactory.componentProviders++;\n    }\n}\n/**\n * Returns the index of item in the array, but only in the begin to end range.\n */\nfunction indexOf(item, arr, begin, end) {\n    for (var i = begin; i < end; i++) {\n        if (arr[i] === item)\n            return i;\n    }\n    return -1;\n}\n/**\n * Use this with `multi` `providers`.\n */\nfunction multiProvidersFactoryResolver(_, tData, lData, tNode) {\n    return multiResolve(this.multi, []);\n}\n/**\n * Use this with `multi` `viewProviders`.\n *\n * This factory knows how to concatenate itself with the existing `multi` `providers`.\n */\nfunction multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n    var factories = this.multi;\n    var result;\n    if (this.providerFactory) {\n        var componentCount = this.providerFactory.componentProviders;\n        var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n        // Copy the section of the array which contains `multi` `providers` from the component\n        result = multiProviders.slice(0, componentCount);\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n        // Copy the section of the array which contains `multi` `providers` from other directives\n        for (var i = componentCount; i < multiProviders.length; i++) {\n            result.push(multiProviders[i]);\n        }\n    }\n    else {\n        result = [];\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n    }\n    return result;\n}\n/**\n * Maps an array of factories into an array of values.\n */\nfunction multiResolve(factories, result) {\n    for (var i = 0; i < factories.length; i++) {\n        var factory = factories[i];\n        result.push(factory());\n    }\n    return result;\n}\n/**\n * Creates a multi factory.\n */\nfunction multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n    var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ÉµÉµdirectiveInject);\n    factory.multi = [];\n    factory.index = index;\n    factory.componentProviders = 0;\n    multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n    return factory;\n}\n\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * ```ts\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ngComponentDef = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    consts: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        ÉµÉµtext(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        ÉµÉµselect(0);\n *        ÉµÉµtextBinding(ctx.greeter.greet());\n *      }\n *    },\n *    features: [ProvidersFeature([GreeterDE])]\n *  });\n * }\n * ```\n *\n * @param definition\n *\n * @codeGenApi\n */\nfunction ÉµÉµProvidersFeature(providers, viewProviders) {\n    if (viewProviders === void 0) { viewProviders = []; }\n    return function (definition) {\n        definition.providersResolver =\n            function (def, processProvidersFn) {\n                return providersResolver(def, //\n                processProvidersFn ? processProvidersFn(providers) : providers, //\n                viewProviders);\n            };\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * Base class for a factory that can create a component dynamically.\n * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n *\n * @see [Dynamic Components](guide/dynamic-component-loader)\n *\n * @publicApi\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * A simple registry that maps `Components` to generated `ComponentFactory` classes\n * that can be used to create instances of components.\n * Use to obtain the factory for a given component type,\n * then use the factory's `create()` method to create a component of that type.\n *\n * @see [Dynamic Components](guide/dynamic-component-loader)\n * @publicApi\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noop() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // Do nothing.\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    /**\n     * @internal\n     * @nocollapse\n     */\n    ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n    return ElementRef;\n}());\nvar SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\nvar SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * @publicApi\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @publicApi\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @publicApi\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nvar RendererStyleFlags2;\n(function (RendererStyleFlags2) {\n    /**\n     * Marks a style as important.\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    /**\n     * Marks a style as using dash case naming (this-is-dash-case).\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags2 || (RendererStyleFlags2 = {}));\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    /**\n     * @internal\n     * @nocollapse\n     */\n    Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n    return Renderer2;\n}());\nvar SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\nvar SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\nvar SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @publicApi\n */\nvar VERSION = new Version('8.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    /** @nocollapse */\n    IterableDiffers.ngInjectableDef = ÉµÉµdefineInjectable({\n        token: IterableDiffers,\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    /** @nocollapse */\n    KeyValueDiffers.ngInjectableDef = ÉµÉµdefineInjectable({\n        token: KeyValueDiffers,\n        providedIn: 'root',\n        factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n    });\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    /**\n     * @internal\n     * @nocollapse\n     */\n    TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n    return TemplateRef;\n}());\nvar SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\nvar SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    /**\n     * @internal\n     * @nocollapse\n     */\n    ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n    return ViewContainerRef;\n}());\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount$1 = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount$1++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var _a;\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$3 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT && provider.value === true) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        var injectableDef = void 0;\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n            var index = data._providers.length;\n            data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView$1(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView$1(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView$1(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /** @deprecated No replacement */\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView$1(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\n        var flags = 0 /* None */;\n        if (injectFlags & InjectFlags.SkipSelf) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & InjectFlags.Self) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance$1(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var outputObservable = instance[output.propName];\n            if (isObservable(outputObservable)) {\n                var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n            else {\n                throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n            }\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance$1(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey = depDef.tokenKey;\n    if (tokenKey === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey$1:\n                case INJECTORRefTokenKey$1:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver, _super);\n    /**\n     * @param ngModule The NgModuleRef to which all resolved factories are bound.\n     */\n    function ComponentFactoryResolver(ngModule) {\n        var _this = _super.call(this) || this;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = getComponentDef(component);\n        return new ComponentFactory$1(componentDef, this.ngModule);\n    };\n    return ComponentFactoryResolver;\n}(ComponentFactoryResolver));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n    providedIn: 'root',\n    factory: function () { return defaultScheduler; },\n});\nfunction createChainedInjector(rootViewInjector, moduleInjector) {\n    return {\n        get: function (token, notFoundValue, flags) {\n            var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n            if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                // Return the value from the root element injector when\n                // - it provides it\n                //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                // - the module injector should not be checked\n                //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                return value;\n            }\n            return moduleInjector.get(token, notFoundValue, flags);\n        }\n    };\n}\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory, _super);\n    /**\n     * @param componentDef The component definition.\n     * @param ngModule The NgModuleRef to which the factory is bound.\n     */\n    function ComponentFactory(componentDef, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.ngModule = ngModule;\n        _this.componentType = componentDef.type;\n        // default to 'div' in case this component has an attribute selector\n        _this.selector = componentDef.selectors[0][0] || 'div';\n        _this.ngContentSelectors =\n            componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n        _this.isBoundToModule = !!ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngModule = ngModule || this.ngModule;\n        var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n        var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n        var sanitizer = rootViewInjector.get(Sanitizer, null);\n        // Ensure that the namespace for the root node is correct,\n        // otherwise the browser might not render out the element properly.\n        namespaceHTMLInternal();\n        var hostRNode = rootSelectorOrNode ?\n            locateHostElement(rendererFactory, rootSelectorOrNode) :\n            elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef));\n        var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        // Check whether this Component needs to be isolated from other components, i.e. whether it\n        // should be placed into its own (empty) root context or existing root context should be used.\n        // Note: this is internal-only convention and might change in the future, so it should not be\n        // relied upon externally.\n        var isIsolated = typeof rootSelectorOrNode === 'string' &&\n            /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n        var rootContext = createRootContext();\n        var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n        if (rootSelectorOrNode && hostRNode) {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                hostRNode.setAttribute('ng-version', VERSION.full);\n        }\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n        // rootView is the parent when bootstrapping\n        var oldLView = enterView(rootLView, null);\n        var component;\n        var tElementNode;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n            tElementNode = getTNode(0, rootLView);\n            if (projectableNodes) {\n                // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                // complex checks down the line.\n                tElementNode.projection =\n                    projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n            }\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n            addToViewTree(rootLView, componentView);\n            refreshDescendantViews(rootLView);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldLView, safeToRunHooks);\n        }\n        var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n        if (!rootSelectorOrNode || isIsolated) {\n            // The host element of the internal or isolated root view is attached to the component's host\n            // view node.\n            componentRef.hostView._tViewNode.child = tElementNode;\n        }\n        return componentRef;\n    };\n    return ComponentFactory;\n}(ComponentFactory));\nvar componentFactoryResolver = new ComponentFactoryResolver$1();\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef, _super);\n    function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n        var _this = _super.call(this) || this;\n        _this.location = location;\n        _this._rootLView = _rootLView;\n        _this._tNode = _tNode;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n        _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n        _this.componentType = componentType;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef.prototype, \"injector\", {\n        get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef.prototype.destroy = function () {\n        if (this.destroyCbs) {\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        }\n    };\n    ComponentRef.prototype.onDestroy = function (callback) {\n        if (this.destroyCbs) {\n            this.destroyCbs.push(callback);\n        }\n    };\n    return ComponentRef;\n}(ComponentRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n */\nif (typeof ngI18nClosureMode === 'undefined') {\n    // These property accesses can be ignored because ngI18nClosureMode will be set to false\n    // when optimizing code and the whole if statement will be dropped.\n    // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n    // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n    (function () {\n        // tslint:disable-next-line:no-toplevel-property-access\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            // tslint:disable-next-line:no-toplevel-property-access\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    })();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This const is used to store the locale data registered with `registerLocaleData`\n */\nvar LOCALE_DATA = {};\n/**\n * Index of each type of locale data from the locale data array\n */\nvar LocaleDataIndex;\n(function (LocaleDataIndex) {\n    LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n    LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n    LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n    LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n    LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n    LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n    LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n    LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n    LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n    LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n    LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n    LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n    LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n    LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n})(LocaleDataIndex || (LocaleDataIndex = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\nvar u = undefined;\nfunction plural(n) {\n    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nvar localeEn = [\n    'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n    [\n        ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n    ],\n    u,\n    [\n        ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ]\n    ],\n    u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n    ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n    ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n    ['.', ',', ';', '%', '+', '-', 'E', 'Ã', 'â°', 'â', 'NaN', ':'],\n    ['#,##0.###', '#,##0%', 'Â¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves the plural function used by ICU expressions to determine the plural case to use\n * for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The plural function for the locale.\n * @see `NgPlural`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction getLocalePluralCase(locale) {\n    var data = findLocaleData(locale);\n    return data[LocaleDataIndex.PluralCase];\n}\n/**\n * Finds the locale data for a given locale.\n *\n * @param locale The locale code.\n * @returns The locale data.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction findLocaleData(locale) {\n    var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n    var match = LOCALE_DATA[normalizedLocale];\n    if (match) {\n        return match;\n    }\n    // let's try to find a parent locale\n    var parentLocale = normalizedLocale.split('-')[0];\n    match = LOCALE_DATA[parentLocale];\n    if (match) {\n        return match;\n    }\n    if (parentLocale === 'en') {\n        return localeEn;\n    }\n    throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the plural case based on the locale\n */\nfunction getPluralCase(value, locale) {\n    var plural = getLocalePluralCase(locale)(value);\n    switch (plural) {\n        case 0:\n            return 'zero';\n        case 1:\n            return 'one';\n        case 2:\n            return 'two';\n        case 3:\n            return 'few';\n        case 4:\n            return 'many';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MARKER = \"\\uFFFD\";\nvar ICU_BLOCK_REGEXP = /^\\s*(ï¿½\\d+:?\\d*ï¿½)\\s*,\\s*(select|plural)\\s*,/;\nvar SUBTEMPLATE_REGEXP = /ï¿½\\/?\\*(\\d+:\\d+)ï¿½/gi;\nvar PH_REGEXP = /ï¿½(\\/?[#*!]\\d+):?\\d*ï¿½/gi;\nvar BINDING_REGEXP = /ï¿½(\\d+):?\\d*ï¿½/gi;\nvar ICU_REGEXP = /({\\s*ï¿½\\d+:?\\d*ï¿½\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n// i18nPostprocess consts\nvar ROOT_TEMPLATE_ID = 0;\nvar PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(ï¿½.+?ï¿½?)\\]/;\nvar PP_PLACEHOLDERS_REGEXP = /\\[(ï¿½.+?ï¿½?)\\]|(ï¿½\\/?\\*\\d+:\\d+ï¿½)/g;\nvar PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\nvar PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\nvar PP_ICUS_REGEXP = /ï¿½I18N_EXP_(ICU(_\\d+)?)ï¿½/g;\nvar PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\nvar PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n * keys and cases.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern (sub)Pattern to be broken.\n *\n */\nfunction extractParts(pattern) {\n    if (!pattern) {\n        return [];\n    }\n    var prevPos = 0;\n    var braceStack = [];\n    var results = [];\n    var braces = /[{}]/g;\n    // lastIndex doesn't get set to 0 so we have to.\n    braces.lastIndex = 0;\n    var match;\n    while (match = braces.exec(pattern)) {\n        var pos = match.index;\n        if (match[0] == '}') {\n            braceStack.pop();\n            if (braceStack.length == 0) {\n                // End of the block.\n                var block = pattern.substring(prevPos, pos);\n                if (ICU_BLOCK_REGEXP.test(block)) {\n                    results.push(parseICUBlock(block));\n                }\n                else {\n                    results.push(block);\n                }\n                prevPos = pos + 1;\n            }\n        }\n        else {\n            if (braceStack.length == 0) {\n                var substring_1 = pattern.substring(prevPos, pos);\n                results.push(substring_1);\n                prevPos = pos + 1;\n            }\n            braceStack.push('{');\n        }\n    }\n    var substring = pattern.substring(prevPos);\n    results.push(substring);\n    return results;\n}\n/**\n * Parses text containing an ICU expression and produces a JSON object for it.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern Text containing an ICU expression that needs to be parsed.\n *\n */\nfunction parseICUBlock(pattern) {\n    var cases = [];\n    var values = [];\n    var icuType = 1 /* plural */;\n    var mainBinding = 0;\n    pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n        if (type === 'select') {\n            icuType = 0 /* select */;\n        }\n        else {\n            icuType = 1 /* plural */;\n        }\n        mainBinding = parseInt(binding.substr(1), 10);\n        return '';\n    });\n    var parts = extractParts(pattern);\n    // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n    for (var pos = 0; pos < parts.length;) {\n        var key = parts[pos++].trim();\n        if (icuType === 1 /* plural */) {\n            // Key can be \"=x\", we just want \"x\"\n            key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n        }\n        if (key.length) {\n            cases.push(key);\n        }\n        var blocks = extractParts(parts[pos++]);\n        if (cases.length > values.length) {\n            values.push(blocks);\n        }\n    }\n    assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n    // TODO(ocombe): support ICU expressions in attributes, see #21615\n    return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n}\n/**\n * Removes everything inside the sub-templates of a message.\n */\nfunction removeInnerTemplateTranslation(message) {\n    var match;\n    var res = '';\n    var index = 0;\n    var inTemplate = false;\n    var tagMatched;\n    while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n        if (!inTemplate) {\n            res += message.substring(index, match.index + match[0].length);\n            tagMatched = match[1];\n            inTemplate = true;\n        }\n        else {\n            if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                index = match.index;\n                inTemplate = false;\n            }\n        }\n    }\n    ngDevMode &&\n        assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n    res += message.substr(index);\n    return res;\n}\n/**\n * Extracts a part of a message and removes the rest.\n *\n * This method is used for extracting a part of the message associated with a template. A translated\n * message can span multiple templates.\n *\n * Example:\n * ```\n * <div i18n>Translate <span *ngIf>me</span>!</div>\n * ```\n *\n * @param message The message to crop\n * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n * external template and removes all sub-templates.\n */\nfunction getTranslationForTemplate(message, subTemplateIndex) {\n    if (typeof subTemplateIndex !== 'number') {\n        // We want the root template message, ignore all sub-templates\n        return removeInnerTemplateTranslation(message);\n    }\n    else {\n        // We want a specific sub-template\n        var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n        var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n        return removeInnerTemplateTranslation(message.substring(start, end));\n    }\n}\n/**\n * Generate the OpCodes to update the bindings of a string.\n *\n * @param str The string containing the bindings.\n * @param destinationNode Index of the destination node which will receive the binding.\n * @param attrName Name of the attribute, if the string belongs to an attribute.\n * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n */\nfunction generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n    if (sanitizeFn === void 0) { sanitizeFn = null; }\n    var updateOpCodes = [null, null]; // Alloc space for mask and size\n    var textParts = str.split(BINDING_REGEXP);\n    var mask = 0;\n    for (var j = 0; j < textParts.length; j++) {\n        var textValue = textParts[j];\n        if (j & 1) {\n            // Odd indexes are bindings\n            var bindingIndex = parseInt(textValue, 10);\n            updateOpCodes.push(-1 - bindingIndex);\n            mask = mask | toMaskBit(bindingIndex);\n        }\n        else if (textValue !== '') {\n            // Even indexes are text\n            updateOpCodes.push(textValue);\n        }\n    }\n    updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n        (attrName ? 1 /* Attr */ : 0 /* Text */));\n    if (attrName) {\n        updateOpCodes.push(attrName, sanitizeFn);\n    }\n    updateOpCodes[0] = mask;\n    updateOpCodes[1] = updateOpCodes.length - 2;\n    return updateOpCodes;\n}\nfunction getBindingMask(icuExpression, mask) {\n    if (mask === void 0) { mask = 0; }\n    mask = mask | toMaskBit(icuExpression.mainBinding);\n    var match;\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        var valueArr = icuExpression.values[i];\n        for (var j = 0; j < valueArr.length; j++) {\n            var value = valueArr[j];\n            if (typeof value === 'string') {\n                while (match = BINDING_REGEXP.exec(value)) {\n                    mask = mask | toMaskBit(parseInt(match[1], 10));\n                }\n            }\n            else {\n                mask = getBindingMask(value, mask);\n            }\n        }\n    }\n    return mask;\n}\nvar i18nIndexStack = [];\nvar i18nIndexStackPointer = -1;\n/**\n * Convert binding index to mask bit.\n *\n * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n * that we will execute binding code more often than necessary. (penalty of performance)\n */\nfunction toMaskBit(bindingIndex) {\n    return 1 << Math.min(bindingIndex, 31);\n}\nvar parentIndexStack = [];\n/**\n * Marks a block of text as translatable.\n *\n * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `ï¿½{index}(:{block})ï¿½`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `ï¿½#{index}(:{block})ï¿½`/`ï¿½/#{index}(:{block})ï¿½`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `ï¿½!{index}(:{block})ï¿½`/`ï¿½/!{index}(:{block})ï¿½`: *Projection Placeholder*:  Marks the\n *   beginning and end of <ng-content> that was embedded in the original translation block.\n *   The placeholder `index` points to the element index in the template instructions set.\n *   An optional `block` that matches the sub-template in which it was declared.\n * - `ï¿½*{index}:{block}ï¿½`/`ï¿½/*{index}:{block}ï¿½`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n *\n * @codeGenApi\n */\nfunction ÉµÉµi18nStart(index, message, subTemplateIndex) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    i18nIndexStack[++i18nIndexStackPointer] = index;\n    // We need to delay projections until `i18nEnd`\n    setDelayProjection(true);\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nStartFirstPass(tView, index, message, subTemplateIndex);\n    }\n}\n// Count for the number of vars that will be allocated for each i18n block.\n// It is global because this is used in multiple functions that include loops and recursive calls.\n// This is reset to 0 when `i18nStartFirstPass` is called.\nvar i18nVarsCount;\n/**\n * See `i18nStart` above.\n */\nfunction i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n    var viewData = getLView();\n    var startIndex = tView.blueprint.length - HEADER_OFFSET;\n    i18nVarsCount = 0;\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n        previousOrParentTNode && previousOrParentTNode.parent;\n    var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n    var parentIndexPointer = 0;\n    parentIndexStack[parentIndexPointer] = parentIndex;\n    var createOpCodes = [];\n    // If the previous node wasn't the direct parent then we have a translation without top level\n    // element and we need to keep a reference of the previous element if there is one\n    if (index > 0 && previousOrParentTNode !== parentTNode) {\n        // Create an OpCode to select the previous TNode\n        createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n    }\n    var updateOpCodes = [];\n    var icuExpressions = [];\n    var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n    var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n    for (var i = 0; i < msgParts.length; i++) {\n        var value = msgParts[i];\n        if (i & 1) {\n            // Odd indexes are placeholders (elements and sub-templates)\n            if (value.charAt(0) === '/') {\n                // It is a closing tag\n                if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                    var phIndex = parseInt(value.substr(2), 10);\n                    parentIndex = parentIndexStack[--parentIndexPointer];\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                }\n            }\n            else {\n                var phIndex = parseInt(value.substr(1), 10);\n                // The value represents a placeholder that we move to the designated index\n                createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                    parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                }\n            }\n        }\n        else {\n            // Even indexes are text (including bindings & ICU expressions)\n            var parts = extractParts(value);\n            for (var j = 0; j < parts.length; j++) {\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // Create the comment node that will anchor the ICU expression\n                    var icuNodeIndex = startIndex + i18nVarsCount++;\n                    createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    // Update codes for the ICU expression\n                    var icuExpression = parts[j];\n                    var mask = getBindingMask(icuExpression);\n                    icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                    // Since this is recursive, the last TIcu that was pushed is the one we want\n                    var tIcuIndex = icuExpressions.length - 1;\n                    updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                    3, // skip 3 opCodes if not changed\n                    -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                    2, // skip 2 opCodes if not changed\n                    icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                }\n                else if (parts[j] !== '') {\n                    var text = parts[j];\n                    // Even indexes are text (including bindings)\n                    var hasBinding = text.match(BINDING_REGEXP);\n                    // Create text nodes\n                    var textNodeIndex = startIndex + i18nVarsCount++;\n                    createOpCodes.push(\n                    // If there is a binding, the value will be set during update\n                    hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                    }\n                }\n            }\n        }\n    }\n    if (i18nVarsCount > 0) {\n        allocExpando(viewData, i18nVarsCount);\n    }\n    ngDevMode &&\n        attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n    // NOTE: local var needed to properly assert the type of `TI18n`.\n    var tI18n = {\n        vars: i18nVarsCount,\n        create: createOpCodes,\n        update: updateOpCodes,\n        icus: icuExpressions.length ? icuExpressions : null,\n    };\n    tView.data[index + HEADER_OFFSET] = tI18n;\n}\nfunction appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n    ngDevMode && ngDevMode.rendererMoveNode++;\n    var nextNode = tNode.next;\n    if (!previousTNode) {\n        previousTNode = parentTNode;\n    }\n    // Re-organize node tree to put this node in the correct position.\n    if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n        tNode.next = parentTNode.child;\n        parentTNode.child = tNode;\n    }\n    else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n        tNode.next = previousTNode.next;\n        previousTNode.next = tNode;\n    }\n    else {\n        tNode.next = null;\n    }\n    if (parentTNode !== viewData[T_HOST]) {\n        tNode.parent = parentTNode;\n    }\n    // If tNode was moved around, we might need to fix a broken link.\n    var cursor = tNode.next;\n    while (cursor) {\n        if (cursor.next === tNode) {\n            cursor.next = nextNode;\n        }\n        cursor = cursor.next;\n    }\n    // If the placeholder to append is a projection, we need to move the projected nodes instead\n    if (tNode.type === 1 /* Projection */) {\n        var tProjectionNode = tNode;\n        appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n        return tNode;\n    }\n    appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n    var slotValue = viewData[tNode.index];\n    if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n        // Nodes that inject ViewContainerRef also have a comment node that should be moved\n        appendChild(slotValue[NATIVE], tNode, viewData);\n    }\n    return tNode;\n}\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [ï¿½*1:1ï¿½ï¿½#2:1ï¿½|ï¿½#4:1ï¿½|ï¿½5ï¿½])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n * 4. Replace all ICU references with corresponding values (like ï¿½ICU_EXP_ICU_1ï¿½)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @codeGenApi\n */\nfunction ÉµÉµi18nPostprocess(message, replacements) {\n    if (replacements === void 0) { replacements = {}; }\n    /**\n     * Step 1: resolve all multi-value placeholders like [ï¿½#5ï¿½|ï¿½*1:1ï¿½ï¿½#2:1ï¿½|ï¿½#4:1ï¿½]\n     *\n     * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n     * grouped by templates, for example: [ï¿½#5ï¿½|ï¿½#6ï¿½|ï¿½#1:1ï¿½|ï¿½#3:2ï¿½] where ï¿½#5ï¿½ and ï¿½#6ï¿½ belong to root\n     * template, ï¿½#1:1ï¿½ belong to nested template with index 1 and ï¿½#1:2ï¿½ - nested template with index\n     * 3. However in real templates the order might be different: i.e. ï¿½#1:1ï¿½ and/or ï¿½#3:2ï¿½ may go in\n     * front of ï¿½#6ï¿½. The post processing step restores the right order by keeping track of the\n     * template id stack and looks for placeholders that belong to the currently active template.\n     */\n    var result = message;\n    if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n        var matches_1 = {};\n        var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n        result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n            var content = phs || tmpl;\n            var placeholders = matches_1[content] || [];\n            if (!placeholders.length) {\n                content.split('|').forEach(function (placeholder) {\n                    var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                    var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                    var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                    placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                });\n                matches_1[content] = placeholders;\n            }\n            if (!placeholders.length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n            var idx = 0;\n            // find placeholder index that matches current template id\n            for (var i = 0; i < placeholders.length; i++) {\n                if (placeholders[i][0] === currentTemplateId) {\n                    idx = i;\n                    break;\n                }\n            }\n            // update template id stack based on the current tag extracted\n            var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n            if (isCloseTemplateTag) {\n                templateIdsStack_1.pop();\n            }\n            else if (currentTemplateId !== templateId) {\n                templateIdsStack_1.push(templateId);\n            }\n            // remove processed tag from the list\n            placeholders.splice(idx, 1);\n            return placeholder;\n        });\n    }\n    // return current result if no replacements specified\n    if (!Object.keys(replacements).length) {\n        return result;\n    }\n    /**\n     * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n     */\n    result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n        return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n    });\n    /**\n     * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     */\n    result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n        return replacements.hasOwnProperty(key) ? replacements[key] : match;\n    });\n    /**\n     * Step 4: replace all ICU references with corresponding values (like ï¿½ICU_EXP_ICU_1ï¿½) in case\n     * multiple ICUs have the same placeholder name\n     */\n    result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n        if (replacements.hasOwnProperty(key)) {\n            var list = replacements[key];\n            if (!list.length) {\n                throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n            }\n            return list.shift();\n        }\n        return match;\n    });\n    return result;\n}\n/**\n * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n *\n * @codeGenApi\n */\nfunction ÉµÉµi18nEnd() {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    i18nEndFirstPass(tView);\n    // Stop delaying projections\n    setDelayProjection(false);\n}\n/**\n * See `i18nEnd` above.\n */\nfunction i18nEndFirstPass(tView) {\n    var viewData = getLView();\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n    var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n    var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n    ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n    // Find the last node that was added before `i18nEnd`\n    var lastCreatedNode = getPreviousOrParentTNode();\n    // Read the instructions to insert/move/remove DOM elements\n    var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n    // Remove deleted nodes\n    for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n        if (visitedNodes.indexOf(i) === -1) {\n            removeNode(i, viewData);\n        }\n    }\n}\n/**\n * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n */\nfunction createDynamicNodeAtIndex(lView, index, type, native, name) {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n    lView[index + HEADER_OFFSET] = native;\n    var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n    // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n    // We will link ourselves into the tree later with `appendI18nNode`.\n    if (previousOrParentTNode.next === tNode) {\n        previousOrParentTNode.next = null;\n    }\n    return tNode;\n}\nfunction readCreateOpCodes(index, createOpCodes, icus, viewData) {\n    var renderer = getLView()[RENDERER];\n    var currentTNode = null;\n    var previousTNode = null;\n    var visitedNodes = [];\n    for (var i = 0; i < createOpCodes.length; i++) {\n        var opCode = createOpCodes[i];\n        if (typeof opCode == 'string') {\n            var textRNode = createTextNode(opCode, renderer);\n            var textNodeIndex = createOpCodes[++i];\n            ngDevMode && ngDevMode.rendererCreateTextNode++;\n            previousTNode = currentTNode;\n            currentTNode =\n                createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n            visitedNodes.push(textNodeIndex);\n            setIsNotParent();\n        }\n        else if (typeof opCode == 'number') {\n            switch (opCode & 7 /* MASK_OPCODE */) {\n                case 1 /* AppendChild */:\n                    var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                    var destinationTNode = void 0;\n                    if (destinationNodeIndex === index) {\n                        // If the destination node is `i18nStart`, we don't have a\n                        // top-level node and we should use the host node instead\n                        destinationTNode = viewData[T_HOST];\n                    }\n                    else {\n                        destinationTNode = getTNode(destinationNodeIndex, viewData);\n                    }\n                    ngDevMode &&\n                        assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                    previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                    break;\n                case 0 /* Select */:\n                    var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    visitedNodes.push(nodeIndex);\n                    previousTNode = currentTNode;\n                    currentTNode = getTNode(nodeIndex, viewData);\n                    if (currentTNode) {\n                        setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                    }\n                    break;\n                case 5 /* ElementEnd */:\n                    var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                    previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                    setPreviousOrParentTNode(currentTNode, false);\n                    break;\n                case 4 /* Attr */:\n                    var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    var attrName = createOpCodes[++i];\n                    var attrValue = createOpCodes[++i];\n                    // This code is used for ICU expressions only, since we don't support\n                    // directives/components in ICUs, we don't need to worry about inputs here\n                    elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n        else {\n            switch (opCode) {\n                case COMMENT_MARKER:\n                    var commentValue = createOpCodes[++i];\n                    var commentNodeIndex = createOpCodes[++i];\n                    ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                    var commentRNode = renderer.createComment(commentValue);\n                    ngDevMode && ngDevMode.rendererCreateComment++;\n                    previousTNode = currentTNode;\n                    currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                    visitedNodes.push(commentNodeIndex);\n                    attachPatchData(commentRNode, viewData);\n                    currentTNode.activeCaseIndex = null;\n                    // We will add the case nodes later, during the update phase\n                    setIsNotParent();\n                    break;\n                case ELEMENT_MARKER:\n                    var tagNameValue = createOpCodes[++i];\n                    var elementNodeIndex = createOpCodes[++i];\n                    ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                    var elementRNode = renderer.createElement(tagNameValue);\n                    ngDevMode && ngDevMode.rendererCreateElement++;\n                    previousTNode = currentTNode;\n                    currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                    visitedNodes.push(elementNodeIndex);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n    }\n    setIsNotParent();\n    return visitedNodes;\n}\nfunction readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n    if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n    var caseCreated = false;\n    for (var i = 0; i < updateOpCodes.length; i++) {\n        // bit code to check if we should apply the next update\n        var checkBit = updateOpCodes[i];\n        // Number of opCodes to skip until next set of update codes\n        var skipCodes = updateOpCodes[++i];\n        if (bypassCheckBit || (checkBit & changeMask)) {\n            // The value has been updated since last checked\n            var value = '';\n            for (var j = i + 1; j <= (i + skipCodes); j++) {\n                var opCode = updateOpCodes[j];\n                if (typeof opCode == 'string') {\n                    value += opCode;\n                }\n                else if (typeof opCode == 'number') {\n                    if (opCode < 0) {\n                        // It's a binding index whose value is negative\n                        value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                    }\n                    else {\n                        var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                        var tIcuIndex = void 0;\n                        var tIcu = void 0;\n                        var icuTNode = void 0;\n                        switch (opCode & 3 /* MASK_OPCODE */) {\n                            case 1 /* Attr */:\n                                var propName = updateOpCodes[++j];\n                                var sanitizeFn = updateOpCodes[++j];\n                                elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                break;\n                            case 0 /* Text */:\n                                textBindingInternal(viewData, nodeIndex, value);\n                                break;\n                            case 2 /* IcuSwitch */:\n                                tIcuIndex = updateOpCodes[++j];\n                                tIcu = icus[tIcuIndex];\n                                icuTNode = getTNode(nodeIndex, viewData);\n                                // If there is an active case, delete the old nodes\n                                if (icuTNode.activeCaseIndex !== null) {\n                                    var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                    for (var k = 0; k < removeCodes.length; k++) {\n                                        var removeOpCode = removeCodes[k];\n                                        switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                            case 3 /* Remove */:\n                                                var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                removeNode(nodeIndex_1, viewData);\n                                                break;\n                                            case 6 /* RemoveNestedIcu */:\n                                                var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                if (activeIndex !== null) {\n                                                    var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    var nestedTIcu = icus[nestedIcuTIndex];\n                                                    addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                }\n                                                break;\n                                        }\n                                    }\n                                }\n                                // Update the active caseIndex\n                                var caseIndex = getCaseIndex(tIcu, value);\n                                icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                // Add the nodes for the new case\n                                readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                caseCreated = true;\n                                break;\n                            case 3 /* IcuUpdate */:\n                                tIcuIndex = updateOpCodes[++j];\n                                tIcu = icus[tIcuIndex];\n                                icuTNode = getTNode(nodeIndex, viewData);\n                                readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        i += skipCodes;\n    }\n}\nfunction removeNode(index, viewData) {\n    var removedPhTNode = getTNode(index, viewData);\n    var removedPhRNode = getNativeByIndex(index, viewData);\n    if (removedPhRNode) {\n        nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n    }\n    var slotValue = ÉµÉµload(index);\n    if (isLContainer(slotValue)) {\n        var lContainer = slotValue;\n        if (removedPhTNode.type !== 0 /* Container */) {\n            nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n        }\n    }\n    // Define this node as detached so that we don't risk projecting it\n    removedPhTNode.flags |= 32 /* isDetached */;\n    ngDevMode && ngDevMode.rendererRemoveNode++;\n}\n/**\n *\n * Use this instruction to create a translation block that doesn't contain any placeholder.\n * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n *\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `ï¿½{index}(:{block})ï¿½`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `ï¿½#{index}(:{block})ï¿½`/`ï¿½/#{index}(:{block})ï¿½`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `ï¿½*{index}:{block}ï¿½`/`ï¿½/*{index}:{block}ï¿½`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n *\n * @codeGenApi\n */\nfunction ÉµÉµi18n(index, message, subTemplateIndex) {\n    ÉµÉµi18nStart(index, message, subTemplateIndex);\n    ÉµÉµi18nEnd();\n}\n/**\n * Marks a list of attributes as translatable.\n *\n * @param index A unique index in the static block\n * @param values\n *\n * @codeGenApi\n */\nfunction ÉµÉµi18nAttributes(index, values) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    i18nAttributesFirstPass(tView, index, values);\n}\n/**\n * See `i18nAttributes` above.\n */\nfunction i18nAttributesFirstPass(tView, index, values) {\n    var previousElement = getPreviousOrParentTNode();\n    var previousElementIndex = previousElement.index - HEADER_OFFSET;\n    var updateOpCodes = [];\n    for (var i = 0; i < values.length; i += 2) {\n        var attrName = values[i];\n        var message = values[i + 1];\n        var parts = message.split(ICU_REGEXP);\n        for (var j = 0; j < parts.length; j++) {\n            var value = parts[j];\n            if (j & 1) {\n                // Odd indexes are ICU expressions\n                // TODO(ocombe): support ICU expressions in attributes\n                throw new Error('ICU expressions are not yet supported in attributes');\n            }\n            else if (value !== '') {\n                // Even indexes are text (including bindings)\n                var hasBinding = !!value.match(BINDING_REGEXP);\n                if (hasBinding) {\n                    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                }\n                else {\n                    var lView = getLView();\n                    elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                    // Check if that attribute is a directive input\n                    var tNode = getTNode(previousElementIndex, lView);\n                    var dataValue = tNode.inputs && tNode.inputs[attrName];\n                    if (dataValue) {\n                        setInputsForProperty(lView, dataValue, value);\n                    }\n                }\n            }\n        }\n    }\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n}\nvar changeMask = 0;\nvar shiftsCounter = 0;\n/**\n * Stores the values of the bindings during each update cycle in order to determine if we need to\n * update the translated nodes.\n *\n * @param value The binding's value\n * @returns This function returns itself so that it may be chained\n * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n *\n * @codeGenApi\n */\nfunction ÉµÉµi18nExp(value) {\n    var lView = getLView();\n    var expression = bind(lView, value);\n    if (expression !== NO_CHANGE) {\n        changeMask = changeMask | (1 << shiftsCounter);\n    }\n    shiftsCounter++;\n    return ÉµÉµi18nExp;\n}\n/**\n * Updates a translation block or an i18n attribute when the bindings have changed.\n *\n * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n * (i18n attribute) on which it should update the content.\n *\n * @codeGenApi\n */\nfunction ÉµÉµi18nApply(index) {\n    if (shiftsCounter) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        var tI18n = tView.data[index + HEADER_OFFSET];\n        var updateOpCodes = void 0;\n        var icus = null;\n        if (Array.isArray(tI18n)) {\n            updateOpCodes = tI18n;\n        }\n        else {\n            updateOpCodes = tI18n.update;\n            icus = tI18n.icus;\n        }\n        var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n        readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n        // Reset changeMask & maskBit to default for the next update cycle\n        changeMask = 0;\n        shiftsCounter = 0;\n    }\n}\n/**\n * Returns the index of the current case of an ICU expression depending on the main binding value\n *\n * @param icuExpression\n * @param bindingValue The value of the main binding used by this ICU expression\n */\nfunction getCaseIndex(icuExpression, bindingValue) {\n    var index = icuExpression.cases.indexOf(bindingValue);\n    if (index === -1) {\n        switch (icuExpression.type) {\n            case 1 /* plural */: {\n                var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                index = icuExpression.cases.indexOf(resolvedCase);\n                if (index === -1 && resolvedCase !== 'other') {\n                    index = icuExpression.cases.indexOf('other');\n                }\n                break;\n            }\n            case 0 /* select */: {\n                index = icuExpression.cases.indexOf('other');\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n * Generate the OpCodes for ICU expressions.\n *\n * @param tIcus\n * @param icuExpression\n * @param startIndex\n * @param expandoStartIndex\n */\nfunction icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n    var createCodes = [];\n    var removeCodes = [];\n    var updateCodes = [];\n    var vars = [];\n    var childIcus = [];\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        // Each value is an array of strings & other ICU expressions\n        var valueArr = icuExpression.values[i];\n        var nestedIcus = [];\n        for (var j = 0; j < valueArr.length; j++) {\n            var value = valueArr[j];\n            if (typeof value !== 'string') {\n                // It is an nested ICU expression\n                var icuIndex = nestedIcus.push(value) - 1;\n                // Replace nested ICU expression by a comment node\n                valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n            }\n        }\n        var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n        createCodes.push(icuCase.create);\n        removeCodes.push(icuCase.remove);\n        updateCodes.push(icuCase.update);\n        vars.push(icuCase.vars);\n        childIcus.push(icuCase.childIcus);\n    }\n    var tIcu = {\n        type: icuExpression.type,\n        vars: vars,\n        childIcus: childIcus,\n        cases: icuExpression.cases,\n        create: createCodes,\n        remove: removeCodes,\n        update: updateCodes\n    };\n    tIcus.push(tIcu);\n    // Adding the maximum possible of vars needed (based on the cases with the most vars)\n    i18nVarsCount += Math.max.apply(Math, __spread(vars));\n}\n/**\n * Transforms a string template into an HTML template and a list of instructions used to update\n * attributes or nodes that contain bindings.\n *\n * @param unsafeHtml The string to parse\n * @param parentIndex\n * @param nestedIcus\n * @param tIcus\n * @param expandoStartIndex\n */\nfunction parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    var inertBodyHelper = new InertBodyHelper(document);\n    var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    if (!inertBodyElement) {\n        throw new Error('Unable to generate inert body element');\n    }\n    var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n    var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n    parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n    return opCodes;\n}\nvar NESTED_ICU = /ï¿½(\\d+)ï¿½/;\n/**\n * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n *\n * @param currentNode The first node to parse\n * @param icuCase The data for the ICU expression case that contains those nodes\n * @param parentIndex Index of the current node's parent\n * @param nestedIcus Data for the nested ICU expressions that this case contains\n * @param tIcus Data for all ICU expressions of the current message\n * @param expandoStartIndex Expando start index for the current ICU expression\n */\nfunction parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    if (currentNode) {\n        var nestedIcusToCreate = [];\n        while (currentNode) {\n            var nextNode = currentNode.nextSibling;\n            var newIndex = expandoStartIndex + ++icuCase.vars;\n            switch (currentNode.nodeType) {\n                case Node.ELEMENT_NODE:\n                    var element = currentNode;\n                    var tagName = element.tagName.toLowerCase();\n                    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                        // This isn't a valid element, we won't create an element for it\n                        icuCase.vars--;\n                    }\n                    else {\n                        icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        var elAttrs = element.attributes;\n                        for (var i = 0; i < elAttrs.length; i++) {\n                            var attr = elAttrs.item(i);\n                            var lowerAttrName = attr.name.toLowerCase();\n                            var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                            // we assume the input string is safe, unless it's using a binding\n                            if (hasBinding_1) {\n                                if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                    if (URI_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                    }\n                                    else if (SRCSET_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                    }\n                                    else {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                    }\n                                }\n                                else {\n                                    ngDevMode &&\n                                        console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                }\n                            }\n                            else {\n                                icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                            }\n                        }\n                        // Parse the children of this node (if any)\n                        parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                        // Remove the parent node after the children\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    }\n                    break;\n                case Node.TEXT_NODE:\n                    var value = currentNode.textContent || '';\n                    var hasBinding = value.match(BINDING_REGEXP);\n                    icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                    }\n                    break;\n                case Node.COMMENT_NODE:\n                    // Check if the comment node is a placeholder for a nested ICU\n                    var match = NESTED_ICU.exec(currentNode.textContent || '');\n                    if (match) {\n                        var nestedIcuIndex = parseInt(match[1], 10);\n                        var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                        // Create the comment node that will anchor the ICU expression\n                        icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        var nestedIcu = nestedIcus[nestedIcuIndex];\n                        nestedIcusToCreate.push([nestedIcu, newIndex]);\n                    }\n                    else {\n                        // We do not handle any other type of comment\n                        icuCase.vars--;\n                    }\n                    break;\n                default:\n                    // We do not handle any other type of element\n                    icuCase.vars--;\n            }\n            currentNode = nextNode;\n        }\n        for (var i = 0; i < nestedIcusToCreate.length; i++) {\n            var nestedIcu = nestedIcusToCreate[i][0];\n            var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n            icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n            // Since this is recursive, the last TIcu that was pushed is the one we want\n            var nestTIcuIndex = tIcus.length - 1;\n            icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n            icuCase.childIcus.push(nestTIcuIndex);\n            var mask = getBindingMask(nestedIcu);\n            icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n            3, // skip 3 opCodes if not changed\n            -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n            2, // skip 2 opCodes if not changed\n            nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n            icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n        }\n    }\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here, since translations\n * might contain this special character.\n */\nvar NGSP_UNICODE_REGEXP = /\\uE500/g;\nfunction replaceNgsp(value) {\n    return value.replace(NGSP_UNICODE_REGEXP, ' ');\n}\nvar TRANSLATIONS = {};\n/**\n * Set the configuration for `i18nLocalize`.\n *\n * @deprecated this method is temporary & should not be used as it will be removed soon\n */\nfunction i18nConfigureLocalize(options) {\n    if (options === void 0) { options = {\n        translations: {}\n    }; }\n    TRANSLATIONS = options.translations;\n}\nvar LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n/**\n * A goog.getMsg-like function for users that do not use Closure.\n *\n * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n * running outside of Closure Compiler. This method will not be needed once runtime translation\n * service support is introduced.\n *\n * @codeGenApi\n * @deprecated this method is temporary & should not be used as it will be removed soon\n */\nfunction ÉµÉµi18nLocalize(input, placeholders) {\n    if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n        input = TRANSLATIONS[input];\n    }\n    if (placeholders !== undefined && Object.keys(placeholders).length) {\n        return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n    }\n    return input;\n}\n/**\n * The locale id that the application is currently using (for translations and ICU expressions).\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n */\nvar DEFAULT_LOCALE_ID = 'en-US';\nvar LOCALE_ID = DEFAULT_LOCALE_ID;\n/**\n * Sets the locale id that will be used for translations and ICU expressions.\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n *\n * @param localeId\n */\nfunction setLocaleId(localeId) {\n    LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n}\n/**\n * Gets the locale id that will be used for translations and ICU expressions.\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n */\nfunction getLocaleId() {\n    return LOCALE_ID;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map of module-id to the corresponding NgModule.\n * - In pre Ivy we track NgModuleFactory,\n * - In post Ivy we track the NgModuleType\n */\nvar modules = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @publicApi\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = modules.get(id);\n    assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n    modules.set(id, factory);\n}\nfunction assertSameOrNotExisting(id, type, incoming) {\n    if (type && type !== incoming) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n    }\n}\nfunction registerNgModuleType(ngModuleType) {\n    if (ngModuleType.ngModuleDef.id !== null) {\n        var id = ngModuleType.ngModuleDef.id;\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    var imports = ngModuleType.ngModuleDef.imports;\n    if (imports instanceof Function) {\n        imports = imports();\n    }\n    if (imports) {\n        imports.forEach(function (i) { return registerNgModuleType(i); });\n    }\n}\nfunction getRegisteredNgModuleType(id) {\n    return modules.get(id);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver,\n    useClass: ComponentFactoryResolver$1,\n    deps: [NgModuleRef],\n};\nvar NgModuleRef$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$1, _super);\n    function NgModuleRef$1(ngModuleType, _parent) {\n        var _this = _super.call(this) || this;\n        _this._parent = _parent;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.injector = _this;\n        _this.destroyCbs = [];\n        var ngModuleDef = getNgModuleDef(ngModuleType);\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n        if (ngLocaleIdDef) {\n            setLocaleId(ngLocaleIdDef);\n        }\n        _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n        var additionalProviders = [\n            {\n                provide: NgModuleRef,\n                useValue: _this,\n            },\n            COMPONENT_FACTORY_RESOLVER\n        ];\n        _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n        _this.instance = _this.get(ngModuleType);\n        return _this;\n    }\n    NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\n        if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n            return this;\n        }\n        return this._r3Injector.get(token, notFoundValue, injectFlags);\n    };\n    Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n        get: function () {\n            return this.get(ComponentFactoryResolver);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        var injector = this._r3Injector;\n        !injector.destroyed && injector.destroy();\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$1;\n}(NgModuleRef));\nvar NgModuleFactory$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory, _super);\n    function NgModuleFactory(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        var ngModuleDef = getNgModuleDef(moduleType);\n        if (ngModuleDef !== null) {\n            // Register the NgModule with Angular's module registry. The location (and hence timing) of\n            // this call is critical to ensure this works correctly (modules get registered when expected)\n            // without bloating bundles (modules are registered when otherwise not referenced).\n            //\n            // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n            // several practical consequences:\n            //\n            // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n            //   tree shaken).\n            // - If an .ngfactory file is imported from, the module will be registered even if an instance\n            //   is not actually created (via `create` below).\n            // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n            //   imports,\n            //\n            // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n            // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n            // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n            // the side effect of registration is added here, in the constructor of NgModuleFactory,\n            // ensuring no matter how a factory is created, the module is registered correctly.\n            //\n            // An alternative would be to include the registration side effect inline following the actual\n            // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n            // will be registered and retained even if they're otherwise never referenced.\n            registerNgModuleType(moduleType);\n        }\n        return _this;\n    }\n    NgModuleFactory.prototype.create = function (parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n * on the type.\n *\n * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n *\n * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n * tree-shaken away during production builds.\n */\nfunction setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n    return noSideEffects(function () {\n        var _a;\n        var clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the parent\n        // constructor and checking whether it's the same as the subclass metadata below. We can't use\n        // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n        // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        var parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bindings for pure functions are stored after regular bindings.\n *\n * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n * ------------------------------------------------------------------------------------------\n * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n * ------------------------------------------------------------------------------------------\n *                    ^                      ^\n *      TView.bindingStartIndex      TView.expandoStartIndex\n *\n * Pure function instructions are given an offset from the binding root. Adding the offset to the\n * binding root gives the first index where the bindings are stored. In component views, the binding\n * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n * any directive instances + any hostVars in directives evaluated before it.\n *\n * See VIEW_DATA.md for more information about host binding resolution.\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns a value\n * @param thisArg Optional calling context of pureFn\n * @returns value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction0(slotOffset, pureFn, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return isCreationMode() ?\n        updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n        getBinding(lView, bindingIndex);\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction1(slotOffset, pureFn, exp, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var lView = getLView();\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated(lView, bindingIndex, exp) ?\n        updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        getBinding(lView, bindingIndex + 1);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n        updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        getBinding(lView, bindingIndex + 2);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n        updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        getBinding(lView, bindingIndex + 3);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n        updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        getBinding(lView, bindingIndex + 4);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n        updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        getBinding(lView, bindingIndex + 5);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n        updateBinding(lView, bindingIndex + 6, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        getBinding(lView, bindingIndex + 6);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n        updateBinding(lView, bindingIndex + 7, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        getBinding(lView, bindingIndex + 7);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n        updateBinding(lView, bindingIndex + 8, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        getBinding(lView, bindingIndex + 8);\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ÉµÉµpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var different = false;\n    var lView = getLView();\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n    }\n    return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n        getBinding(lView, bindingIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n *\n * @codeGenApi\n */\nfunction ÉµÉµpipe(index, pipeName) {\n    var tView = getLView()[TVIEW];\n    var pipeDef;\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n *\n * @publicApi\n */\nfunction getPipeDef$1(name, registry) {\n    if (registry) {\n        for (var i = registry.length - 1; i >= 0; i--) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ÉµÉµpipeBind1(index, slotOffset, v1) {\n    var pipeInstance = ÉµÉµload(index);\n    return unwrapValue$1(isPure(index) ? ÉµÉµpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1));\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ÉµÉµpipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = ÉµÉµload(index);\n    return unwrapValue$1(isPure(index) ? ÉµÉµpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2));\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ÉµÉµpipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = ÉµÉµload(index);\n    return unwrapValue$1(isPure(index) ?\n        ÉµÉµpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3));\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ÉµÉµpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = ÉµÉµload(index);\n    return unwrapValue$1(isPure(index) ?\n        ÉµÉµpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4));\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n *\n * @codeGenApi\n */\nfunction ÉµÉµpipeBindV(index, slotOffset, values) {\n    var pipeInstance = ÉµÉµload(index);\n    return unwrapValue$1(isPure(index) ? ÉµÉµpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values));\n}\nfunction isPure(index) {\n    return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n}\n/**\n * Unwrap the output of a pipe transformation.\n * In order to trick change detection into considering that the new value is always different from\n * the old one, the old value is overwritten by NO_CHANGE.\n *\n * @param newValue the pipe transformation output.\n */\nfunction unwrapValue$1(newValue) {\n    if (WrappedValue.isWrapped(newValue)) {\n        newValue = WrappedValue.unwrap(newValue);\n        var lView = getLView();\n        // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n        // stored\n        var bindingToInvalidateIdx = lView[BINDING_INDEX];\n        lView[bindingToInvalidateIdx] = NO_CHANGE;\n    }\n    return newValue;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * @usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```html\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```html\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * @publicApi\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of this class that can\n     * deliver events synchronously or asynchronously.\n     *\n     * @param isAsync When true, deliver events asynchronously.\n     *\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * Emits an event containing a given value.\n     * @param value The value to emit.\n     */\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param generatorOrNext When supplied, a custom handler for emitted events.\n     * @param error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     */\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction symbolIterator() {\n    return this._results[getSymbolIterator()]();\n}\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n        // This function should be declared on the prototype, but doing so there will cause the class\n        // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n        // the constructor.\n        // [getSymbolIterator()](): Iterator<T> { ... }\n        var symbol = getSymbolIterator();\n        var proto = QueryList.prototype;\n        if (!proto[symbol])\n            proto[symbol] = symbolIterator;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * Returns a copy of the internal results list as an Array.\n     */\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    /**\n     * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n     * on change detection, it will not notify of changes to the queries, unless a new change\n     * occurs.\n     *\n     * @param resultsTree The query results to store\n     */\n    QueryList.prototype.reset = function (resultsTree) {\n        this._results = flatten(resultsTree);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    /**\n     * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n     */\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQuery_ = /** @class */ (function () {\n    function LQuery_(queryList) {\n        this.queryList = queryList;\n        this.matches = null;\n    }\n    LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n    LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n    return LQuery_;\n}());\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(queries) {\n        if (queries === void 0) { queries = []; }\n        this.queries = queries;\n    }\n    LQueries_.prototype.createEmbeddedView = function (tView) {\n        var tQueries = tView.queries;\n        if (tQueries !== null) {\n            var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n            var viewLQueries = new Array(noOfInheritedQueries);\n            // An embedded view has queries propagated from a declaration view at the beginning of the\n            // TQueries collection and up until a first content query declared in the embedded view. Only\n            // propagated LQueries are created at this point (LQuery corresponding to declared content\n            // queries will be instantiated from the content query instructions for each directive).\n            for (var i = 0; i < noOfInheritedQueries; i++) {\n                var tQuery = tQueries.getByIndex(i);\n                var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                viewLQueries[i] = parentLQuery.clone();\n            }\n            return new LQueries_(viewLQueries);\n        }\n        return null;\n    };\n    LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n    LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n    LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n        for (var i = 0; i < this.queries.length; i++) {\n            if (getTQuery(tView, i).matches !== null) {\n                this.queries[i].setDirty();\n            }\n        }\n    };\n    return LQueries_;\n}());\nvar TQueryMetadata_ = /** @class */ (function () {\n    function TQueryMetadata_(predicate, descendants, isStatic, read) {\n        if (read === void 0) { read = null; }\n        this.predicate = predicate;\n        this.descendants = descendants;\n        this.isStatic = isStatic;\n        this.read = read;\n    }\n    return TQueryMetadata_;\n}());\nvar TQueries_ = /** @class */ (function () {\n    function TQueries_(queries) {\n        if (queries === void 0) { queries = []; }\n        this.queries = queries;\n    }\n    TQueries_.prototype.elementStart = function (tView, tNode) {\n        var e_1, _a;\n        ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n        try {\n            for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var query = _c.value;\n                query.elementStart(tView, tNode);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    TQueries_.prototype.elementEnd = function (tNode) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var query = _c.value;\n                query.elementEnd(tNode);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    TQueries_.prototype.embeddedTView = function (tNode) {\n        var queriesForTemplateRef = null;\n        for (var i = 0; i < this.length; i++) {\n            var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n            var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n            if (tqueryClone) {\n                tqueryClone.indexInDeclarationView = i;\n                if (queriesForTemplateRef !== null) {\n                    queriesForTemplateRef.push(tqueryClone);\n                }\n                else {\n                    queriesForTemplateRef = [tqueryClone];\n                }\n            }\n        }\n        return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n    };\n    TQueries_.prototype.template = function (tView, tNode) {\n        var e_3, _a;\n        ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n        try {\n            for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var query = _c.value;\n                query.template(tView, tNode);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    TQueries_.prototype.getByIndex = function (index) {\n        ngDevMode && assertDataInRange(this.queries, index);\n        return this.queries[index];\n    };\n    Object.defineProperty(TQueries_.prototype, \"length\", {\n        get: function () { return this.queries.length; },\n        enumerable: true,\n        configurable: true\n    });\n    TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n    return TQueries_;\n}());\nvar TQuery_ = /** @class */ (function () {\n    function TQuery_(metadata, nodeIndex) {\n        if (nodeIndex === void 0) { nodeIndex = -1; }\n        this.metadata = metadata;\n        this.matches = null;\n        this.indexInDeclarationView = -1;\n        this.crossesNgTemplate = false;\n        /**\n         * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n         * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n         * elements in a template.\n         */\n        this._appliesToNextNode = true;\n        this._declarationNodeIndex = nodeIndex;\n    }\n    TQuery_.prototype.elementStart = function (tView, tNode) {\n        if (this.isApplyingToNode(tNode)) {\n            this.matchTNode(tView, tNode);\n        }\n    };\n    TQuery_.prototype.elementEnd = function (tNode) {\n        if (this._declarationNodeIndex === tNode.index) {\n            this._appliesToNextNode = false;\n        }\n    };\n    TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n    TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n        if (this.isApplyingToNode(tNode)) {\n            this.crossesNgTemplate = true;\n            // A marker indicating a `<ng-template>` element (a placeholder for query results from\n            // embedded views created based on this `<ng-template>`).\n            this.addMatch(-tNode.index, childQueryIndex);\n            return new TQuery_(this.metadata);\n        }\n        return null;\n    };\n    TQuery_.prototype.isApplyingToNode = function (tNode) {\n        if (this._appliesToNextNode && this.metadata.descendants === false) {\n            return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n        }\n        return this._appliesToNextNode;\n    };\n    TQuery_.prototype.matchTNode = function (tView, tNode) {\n        if (Array.isArray(this.metadata.predicate)) {\n            var localNames = this.metadata.predicate;\n            for (var i = 0; i < localNames.length; i++) {\n                this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n            }\n        }\n        else {\n            var typePredicate = this.metadata.predicate;\n            if (typePredicate === TemplateRef) {\n                if (tNode.type === 0 /* Container */) {\n                    this.matchTNodeWithReadOption(tView, tNode, -1);\n                }\n            }\n            else {\n                this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n            }\n        }\n    };\n    TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n        if (nodeMatchIdx !== null) {\n            var read = this.metadata.read;\n            if (read !== null) {\n                if (read === ElementRef || read === ViewContainerRef ||\n                    read === TemplateRef && tNode.type === 0 /* Container */) {\n                    this.addMatch(tNode.index, -2);\n                }\n                else {\n                    var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                    if (directiveOrProviderIdx !== null) {\n                        this.addMatch(tNode.index, directiveOrProviderIdx);\n                    }\n                }\n            }\n            else {\n                this.addMatch(tNode.index, nodeMatchIdx);\n            }\n        }\n    };\n    TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n        if (this.matches === null) {\n            this.matches = [tNodeIdx, matchIdx];\n        }\n        else {\n            this.matches.push(tNodeIdx, matchIdx);\n        }\n    };\n    return TQuery_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames !== null) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\nfunction createResultByTNodeType(tNode, currentView) {\n    if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n        return createElementRef(ElementRef, tNode, currentView);\n    }\n    else if (tNode.type === 0 /* Container */) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    return null;\n}\nfunction createResultForNode(lView, tNode, matchingIdx, read) {\n    if (matchingIdx === -1) {\n        // if read token and / or strategy is not specified, detect it using appropriate tNode type\n        return createResultByTNodeType(tNode, lView);\n    }\n    else if (matchingIdx === -2) {\n        // read a special token from a node injector\n        return createSpecialToken(lView, tNode, read);\n    }\n    else {\n        // read a token\n        return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n    }\n}\nfunction createSpecialToken(lView, tNode, read) {\n    if (read === ElementRef) {\n        return createElementRef(ElementRef, tNode, lView);\n    }\n    else if (read === TemplateRef) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n    }\n    else if (read === ViewContainerRef) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n    }\n    else {\n        ngDevMode &&\n            throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n    }\n}\n/**\n * A helper function that creates query results for a given view. This function is meant to do the\n * processing once and only once for a given view instance (a set of results for a given view\n * doesn't change).\n */\nfunction materializeViewResults(lView, tQuery, queryIndex) {\n    var lQuery = lView[QUERIES].queries[queryIndex];\n    if (lQuery.matches === null) {\n        var tViewData = lView[TVIEW].data;\n        var tQueryMatches = tQuery.matches;\n        var result = new Array(tQueryMatches.length / 2);\n        for (var i = 0; i < tQueryMatches.length; i += 2) {\n            var matchedNodeIdx = tQueryMatches[i];\n            if (matchedNodeIdx < 0) {\n                // we at the <ng-template> marker which might have results in views created based on this\n                // <ng-template> - those results will be in separate views though, so here we just leave\n                // null as a placeholder\n                result[i / 2] = null;\n            }\n            else {\n                ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                var tNode = tViewData[matchedNodeIdx];\n                result[i / 2] =\n                    createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read);\n            }\n        }\n        lQuery.matches = result;\n    }\n    return lQuery.matches;\n}\n/**\n * A helper function that collects (already materialized) query results from a tree of views,\n * starting with a provided LView.\n */\nfunction collectQueryResults(lView, queryIndex, result) {\n    var e_4, _a;\n    var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n    var tQueryMatches = tQuery.matches;\n    if (tQueryMatches !== null) {\n        var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n        for (var i = 0; i < tQueryMatches.length; i += 2) {\n            var tNodeIdx = tQueryMatches[i];\n            if (tNodeIdx > 0) {\n                var viewResult = lViewResults[i / 2];\n                ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                result.push(viewResult);\n            }\n            else {\n                var childQueryIndex = tQueryMatches[i + 1];\n                var declarationLContainer = lView[-tNodeIdx];\n                ngDevMode && assertLContainer(declarationLContainer);\n                // collect matches for views inserted in this container\n                for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                    var embeddedLView = declarationLContainer[i_1];\n                    if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                        collectQueryResults(embeddedLView, childQueryIndex, result);\n                    }\n                }\n                // collect matches for views created from this declaration container and inserted into\n                // different containers\n                if (declarationLContainer[MOVED_VIEWS] !== null) {\n                    try {\n                        for (var _b = (e_4 = void 0, __values(declarationLContainer[MOVED_VIEWS])), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            var embeddedLView = _c.value;\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n *\n * @returns `true` if a query got dirty during change detection or if this is a static query\n * resolving in creation mode, `false` otherwise.\n *\n * @codeGenApi\n */\nfunction ÉµÉµqueryRefresh(queryList) {\n    var lView = getLView();\n    var queryIndex = getCurrentQueryIndex();\n    setCurrentQueryIndex(queryIndex + 1);\n    var tQuery = getTQuery(lView[TVIEW], queryIndex);\n    if (queryList.dirty && (isCreationMode() === tQuery.metadata.isStatic)) {\n        if (tQuery.matches === null) {\n            queryList.reset([]);\n        }\n        else {\n            var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                materializeViewResults(lView, tQuery, queryIndex);\n            queryList.reset(result);\n            queryList.notifyOnChanges();\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Creates new QueryList for a static view query.\n *\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n *\n * @codeGenApi\n */\nfunction ÉµÉµstaticViewQuery(predicate, descend, read) {\n    viewQueryInternal(getLView(), predicate, descend, read, true);\n}\n/**\n * Creates new QueryList, stores the reference in LView and returns QueryList.\n *\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n *\n * @codeGenApi\n */\nfunction ÉµÉµviewQuery(predicate, descend, read) {\n    viewQueryInternal(getLView(), predicate, descend, read, false);\n}\nfunction viewQueryInternal(lView, predicate, descend, read, isStatic) {\n    var tView = lView[TVIEW];\n    if (tView.firstTemplatePass) {\n        createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n        if (isStatic) {\n            tView.staticViewQueries = true;\n        }\n    }\n    createLQuery(lView);\n}\n/**\n * Loads a QueryList corresponding to the current view query.\n *\n * @codeGenApi\n */\nfunction ÉµÉµloadViewQuery() {\n    return loadQueryInternal(getLView(), getCurrentQueryIndex());\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n *\n * @param directiveIndex Current directive index\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n *\n * @codeGenApi\n */\nfunction ÉµÉµcontentQuery(directiveIndex, predicate, descend, read) {\n    contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n}\n/**\n * Registers a QueryList, associated with a static content query, for later refresh\n * (part of a view refresh).\n *\n * @param directiveIndex Current directive index\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n *\n * @codeGenApi\n */\nfunction ÉµÉµstaticContentQuery(directiveIndex, predicate, descend, read) {\n    contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n}\nfunction contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n    var tView = lView[TVIEW];\n    if (tView.firstTemplatePass) {\n        createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n        saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n        if (isStatic) {\n            tView.staticContentQueries = true;\n        }\n    }\n    createLQuery(lView);\n}\n/**\n * Loads a QueryList corresponding to the current content query.\n *\n * @codeGenApi\n */\nfunction ÉµÉµloadContentQuery() {\n    return loadQueryInternal(getLView(), getCurrentQueryIndex());\n}\nfunction loadQueryInternal(lView, queryIndex) {\n    ngDevMode &&\n        assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n    ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n    return lView[QUERIES].queries[queryIndex].queryList;\n}\nfunction createLQuery(lView) {\n    var queryList = new QueryList();\n    storeCleanupWithContext(lView, queryList, queryList.destroy);\n    if (lView[QUERIES] === null)\n        lView[QUERIES] = new LQueries_();\n    lView[QUERIES].queries.push(new LQuery_(queryList));\n}\nfunction createTQuery(tView, metadata, nodeIndex) {\n    if (tView.queries === null)\n        tView.queries = new TQueries_();\n    tView.queries.track(new TQuery_(metadata, nodeIndex));\n}\nfunction saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n    var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n    var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n    if (directiveIndex !== lastSavedDirectiveIndex) {\n        tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n    }\n}\nfunction getTQuery(tView, index) {\n    ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n    return tView.queries.getByIndex(index);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n *\n * @codeGenApi\n */\nfunction ÉµÉµtemplateRefExtractor(tNode, currentView) {\n    return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n}\n/**\n * Returns the appropriate `ChangeDetectorRef` for a pipe.\n *\n * @codeGenApi\n */\nfunction ÉµÉµinjectPipeChangeDetectorRef(flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    var value = injectChangeDetectorRef(true);\n    if (value == null && !(flags & InjectFlags.Optional)) {\n        throw new Error(\"No provider for ChangeDetectorRef!\");\n    }\n    else {\n        return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$9 = function () { return ({\n    'ÉµÉµattribute': ÉµÉµattribute,\n    'ÉµÉµattributeInterpolate1': ÉµÉµattributeInterpolate1,\n    'ÉµÉµattributeInterpolate2': ÉµÉµattributeInterpolate2,\n    'ÉµÉµattributeInterpolate3': ÉµÉµattributeInterpolate3,\n    'ÉµÉµattributeInterpolate4': ÉµÉµattributeInterpolate4,\n    'ÉµÉµattributeInterpolate5': ÉµÉµattributeInterpolate5,\n    'ÉµÉµattributeInterpolate6': ÉµÉµattributeInterpolate6,\n    'ÉµÉµattributeInterpolate7': ÉµÉµattributeInterpolate7,\n    'ÉµÉµattributeInterpolate8': ÉµÉµattributeInterpolate8,\n    'ÉµÉµattributeInterpolateV': ÉµÉµattributeInterpolateV,\n    'ÉµÉµdefineBase': ÉµÉµdefineBase,\n    'ÉµÉµdefineComponent': ÉµÉµdefineComponent,\n    'ÉµÉµdefineDirective': ÉµÉµdefineDirective,\n    'ÉµÉµdefineInjectable': ÉµÉµdefineInjectable,\n    'ÉµÉµdefineInjector': ÉµÉµdefineInjector,\n    'ÉµÉµdefineNgModule': ÉµÉµdefineNgModule,\n    'ÉµÉµdefinePipe': ÉµÉµdefinePipe,\n    'ÉµÉµdirectiveInject': ÉµÉµdirectiveInject,\n    'ÉµÉµgetFactoryOf': ÉµÉµgetFactoryOf,\n    'ÉµÉµgetInheritedFactory': ÉµÉµgetInheritedFactory,\n    'ÉµÉµinject': ÉµÉµinject,\n    'ÉµÉµinjectAttribute': ÉµÉµinjectAttribute,\n    'ÉµÉµinjectPipeChangeDetectorRef': ÉµÉµinjectPipeChangeDetectorRef,\n    'ÉµÉµtemplateRefExtractor': ÉµÉµtemplateRefExtractor,\n    'ÉµÉµNgOnChangesFeature': ÉµÉµNgOnChangesFeature,\n    'ÉµÉµProvidersFeature': ÉµÉµProvidersFeature,\n    'ÉµÉµInheritDefinitionFeature': ÉµÉµInheritDefinitionFeature,\n    'ÉµÉµcontainer': ÉµÉµcontainer,\n    'ÉµÉµnextContext': ÉµÉµnextContext,\n    'ÉµÉµcontainerRefreshStart': ÉµÉµcontainerRefreshStart,\n    'ÉµÉµcontainerRefreshEnd': ÉµÉµcontainerRefreshEnd,\n    'ÉµÉµnamespaceHTML': ÉµÉµnamespaceHTML,\n    'ÉµÉµnamespaceMathML': ÉµÉµnamespaceMathML,\n    'ÉµÉµnamespaceSVG': ÉµÉµnamespaceSVG,\n    'ÉµÉµenableBindings': ÉµÉµenableBindings,\n    'ÉµÉµdisableBindings': ÉµÉµdisableBindings,\n    'ÉµÉµallocHostVars': ÉµÉµallocHostVars,\n    'ÉµÉµelementStart': ÉµÉµelementStart,\n    'ÉµÉµelementEnd': ÉµÉµelementEnd,\n    'ÉµÉµelement': ÉµÉµelement,\n    'ÉµÉµelementContainerStart': ÉµÉµelementContainerStart,\n    'ÉµÉµelementContainerEnd': ÉµÉµelementContainerEnd,\n    'ÉµÉµelementContainer': ÉµÉµelementContainer,\n    'ÉµÉµpureFunction0': ÉµÉµpureFunction0,\n    'ÉµÉµpureFunction1': ÉµÉµpureFunction1,\n    'ÉµÉµpureFunction2': ÉµÉµpureFunction2,\n    'ÉµÉµpureFunction3': ÉµÉµpureFunction3,\n    'ÉµÉµpureFunction4': ÉµÉµpureFunction4,\n    'ÉµÉµpureFunction5': ÉµÉµpureFunction5,\n    'ÉµÉµpureFunction6': ÉµÉµpureFunction6,\n    'ÉµÉµpureFunction7': ÉµÉµpureFunction7,\n    'ÉµÉµpureFunction8': ÉµÉµpureFunction8,\n    'ÉµÉµpureFunctionV': ÉµÉµpureFunctionV,\n    'ÉµÉµgetCurrentView': ÉµÉµgetCurrentView,\n    'ÉµÉµrestoreView': ÉµÉµrestoreView,\n    'ÉµÉµlistener': ÉµÉµlistener,\n    'ÉµÉµload': ÉµÉµload,\n    'ÉµÉµprojection': ÉµÉµprojection,\n    'ÉµÉµupdateSyntheticHostBinding': ÉµÉµupdateSyntheticHostBinding,\n    'ÉµÉµcomponentHostSyntheticListener': ÉµÉµcomponentHostSyntheticListener,\n    'ÉµÉµpipeBind1': ÉµÉµpipeBind1,\n    'ÉµÉµpipeBind2': ÉµÉµpipeBind2,\n    'ÉµÉµpipeBind3': ÉµÉµpipeBind3,\n    'ÉµÉµpipeBind4': ÉµÉµpipeBind4,\n    'ÉµÉµpipeBindV': ÉµÉµpipeBindV,\n    'ÉµÉµprojectionDef': ÉµÉµprojectionDef,\n    'ÉµÉµhostProperty': ÉµÉµhostProperty,\n    'ÉµÉµproperty': ÉµÉµproperty,\n    'ÉµÉµpropertyInterpolate': ÉµÉµpropertyInterpolate,\n    'ÉµÉµpropertyInterpolate1': ÉµÉµpropertyInterpolate1,\n    'ÉµÉµpropertyInterpolate2': ÉµÉµpropertyInterpolate2,\n    'ÉµÉµpropertyInterpolate3': ÉµÉµpropertyInterpolate3,\n    'ÉµÉµpropertyInterpolate4': ÉµÉµpropertyInterpolate4,\n    'ÉµÉµpropertyInterpolate5': ÉµÉµpropertyInterpolate5,\n    'ÉµÉµpropertyInterpolate6': ÉµÉµpropertyInterpolate6,\n    'ÉµÉµpropertyInterpolate7': ÉµÉµpropertyInterpolate7,\n    'ÉµÉµpropertyInterpolate8': ÉµÉµpropertyInterpolate8,\n    'ÉµÉµpropertyInterpolateV': ÉµÉµpropertyInterpolateV,\n    'ÉµÉµpipe': ÉµÉµpipe,\n    'ÉµÉµqueryRefresh': ÉµÉµqueryRefresh,\n    'ÉµÉµviewQuery': ÉµÉµviewQuery,\n    'ÉµÉµstaticViewQuery': ÉµÉµstaticViewQuery,\n    'ÉµÉµstaticContentQuery': ÉµÉµstaticContentQuery,\n    'ÉµÉµloadViewQuery': ÉµÉµloadViewQuery,\n    'ÉµÉµcontentQuery': ÉµÉµcontentQuery,\n    'ÉµÉµloadContentQuery': ÉµÉµloadContentQuery,\n    'ÉµÉµreference': ÉµÉµreference,\n    'ÉµÉµelementHostAttrs': ÉµÉµelementHostAttrs,\n    'ÉµÉµclassMap': ÉµÉµclassMap,\n    'ÉµÉµclassMapInterpolate1': ÉµÉµclassMapInterpolate1,\n    'ÉµÉµclassMapInterpolate2': ÉµÉµclassMapInterpolate2,\n    'ÉµÉµclassMapInterpolate3': ÉµÉµclassMapInterpolate3,\n    'ÉµÉµclassMapInterpolate4': ÉµÉµclassMapInterpolate4,\n    'ÉµÉµclassMapInterpolate5': ÉµÉµclassMapInterpolate5,\n    'ÉµÉµclassMapInterpolate6': ÉµÉµclassMapInterpolate6,\n    'ÉµÉµclassMapInterpolate7': ÉµÉµclassMapInterpolate7,\n    'ÉµÉµclassMapInterpolate8': ÉµÉµclassMapInterpolate8,\n    'ÉµÉµclassMapInterpolateV': ÉµÉµclassMapInterpolateV,\n    'ÉµÉµstyling': ÉµÉµstyling,\n    'ÉµÉµstyleMap': ÉµÉµstyleMap,\n    'ÉµÉµstyleProp': ÉµÉµstyleProp,\n    'ÉµÉµstylePropInterpolate1': ÉµÉµstylePropInterpolate1,\n    'ÉµÉµstylePropInterpolate2': ÉµÉµstylePropInterpolate2,\n    'ÉµÉµstylePropInterpolate3': ÉµÉµstylePropInterpolate3,\n    'ÉµÉµstylePropInterpolate4': ÉµÉµstylePropInterpolate4,\n    'ÉµÉµstylePropInterpolate5': ÉµÉµstylePropInterpolate5,\n    'ÉµÉµstylePropInterpolate6': ÉµÉµstylePropInterpolate6,\n    'ÉµÉµstylePropInterpolate7': ÉµÉµstylePropInterpolate7,\n    'ÉµÉµstylePropInterpolate8': ÉµÉµstylePropInterpolate8,\n    'ÉµÉµstylePropInterpolateV': ÉµÉµstylePropInterpolateV,\n    'ÉµÉµstyleSanitizer': ÉµÉµstyleSanitizer,\n    'ÉµÉµstylingApply': ÉµÉµstylingApply,\n    'ÉµÉµclassProp': ÉµÉµclassProp,\n    'ÉµÉµselect': ÉµÉµselect,\n    'ÉµÉµtemplate': ÉµÉµtemplate,\n    'ÉµÉµtext': ÉµÉµtext,\n    'ÉµÉµtextBinding': ÉµÉµtextBinding,\n    'ÉµÉµtextInterpolate': ÉµÉµtextInterpolate,\n    'ÉµÉµtextInterpolate1': ÉµÉµtextInterpolate1,\n    'ÉµÉµtextInterpolate2': ÉµÉµtextInterpolate2,\n    'ÉµÉµtextInterpolate3': ÉµÉµtextInterpolate3,\n    'ÉµÉµtextInterpolate4': ÉµÉµtextInterpolate4,\n    'ÉµÉµtextInterpolate5': ÉµÉµtextInterpolate5,\n    'ÉµÉµtextInterpolate6': ÉµÉµtextInterpolate6,\n    'ÉµÉµtextInterpolate7': ÉµÉµtextInterpolate7,\n    'ÉµÉµtextInterpolate8': ÉµÉµtextInterpolate8,\n    'ÉµÉµtextInterpolateV': ÉµÉµtextInterpolateV,\n    'ÉµÉµembeddedViewStart': ÉµÉµembeddedViewStart,\n    'ÉµÉµembeddedViewEnd': ÉµÉµembeddedViewEnd,\n    'ÉµÉµi18n': ÉµÉµi18n,\n    'ÉµÉµi18nAttributes': ÉµÉµi18nAttributes,\n    'ÉµÉµi18nExp': ÉµÉµi18nExp,\n    'ÉµÉµi18nStart': ÉµÉµi18nStart,\n    'ÉµÉµi18nEnd': ÉµÉµi18nEnd,\n    'ÉµÉµi18nApply': ÉµÉµi18nApply,\n    'ÉµÉµi18nPostprocess': ÉµÉµi18nPostprocess,\n    'ÉµÉµi18nLocalize': ÉµÉµi18nLocalize,\n    'ÉµÉµresolveWindow': ÉµÉµresolveWindow,\n    'ÉµÉµresolveDocument': ÉµÉµresolveDocument,\n    'ÉµÉµresolveBody': ÉµÉµresolveBody,\n    'ÉµÉµsetComponentScope': ÉµÉµsetComponentScope,\n    'ÉµÉµsetNgModuleScope': ÉµÉµsetNgModuleScope,\n    'ÉµÉµsanitizeHtml': ÉµÉµsanitizeHtml,\n    'ÉµÉµsanitizeStyle': ÉµÉµsanitizeStyle,\n    'ÉµÉµdefaultStyleSanitizer': ÉµÉµdefaultStyleSanitizer,\n    'ÉµÉµsanitizeResourceUrl': ÉµÉµsanitizeResourceUrl,\n    'ÉµÉµsanitizeScript': ÉµÉµsanitizeScript,\n    'ÉµÉµsanitizeUrl': ÉµÉµsanitizeUrl,\n    'ÉµÉµsanitizeUrlOrResourceUrl': ÉµÉµsanitizeUrlOrResourceUrl,\n}); };\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = (Éµ0$9)();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$4 = [];\nvar moduleQueue = [];\n/**\n * Enqueues moduleDef to be checked later to see if scope can be set on its\n * component declarations.\n */\nfunction enqueueModuleForDelayedScoping(moduleType, ngModule) {\n    moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n}\nvar flushingModuleQueue = false;\n/**\n * Loops over queued module definitions, if a given module definition has all of its\n * declarations resolved, it dequeues that module definition and sets the scope on\n * its declarations.\n */\nfunction flushModuleScopingQueueAsMuchAsPossible() {\n    if (!flushingModuleQueue) {\n        flushingModuleQueue = true;\n        try {\n            for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                    // dequeue\n                    moduleQueue.splice(i, 1);\n                    setScopeOnDeclaredComponents(moduleType, ngModule);\n                }\n            }\n        }\n        finally {\n            flushingModuleQueue = false;\n        }\n    }\n}\n/**\n * Returns truthy if a declaration has resolved. If the declaration happens to be\n * an array of declarations, it will recurse to check each declaration in that array\n * (which may also be arrays).\n */\nfunction isResolvedDeclaration(declaration) {\n    if (Array.isArray(declaration)) {\n        return declaration.every(isResolvedDeclaration);\n    }\n    return !!resolveForwardRef(declaration);\n}\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nfunction compileNgModule(moduleType, ngModule) {\n    if (ngModule === void 0) { ngModule = {}; }\n    compileNgModuleDefs(moduleType, ngModule);\n    // Because we don't know if all declarations have resolved yet at the moment the\n    // NgModule decorator is executing, we're enqueueing the setting of module scope\n    // on its declarations to be run at a later time when all declarations for the module,\n    // including forward refs, have resolved.\n    enqueueModuleForDelayedScoping(moduleType, ngModule);\n}\n/**\n * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n *\n * It's possible to compile a module via this API which will allow duplicate declarations in its\n * root.\n */\nfunction compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n    if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n    ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n    ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n    var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n    var ngModuleDef = null;\n    Object.defineProperty(moduleType, NG_MODULE_DEF, {\n        configurable: true,\n        get: function () {\n            if (ngModuleDef === null) {\n                if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                    // We need to assert this immediately, because allowing it to continue will cause it to\n                    // go into an infinite loop before we've reached the point where we throw all the errors.\n                    throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                }\n                ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                    type: moduleType,\n                    bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                    declarations: declarations.map(resolveForwardRef),\n                    imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                        .map(resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                        .map(resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    emitInline: true,\n                    schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                    id: ngModule.id || null,\n                });\n            }\n            return ngModuleDef;\n        }\n    });\n    var ngInjectorDef = null;\n    Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n        get: function () {\n            if (ngInjectorDef === null) {\n                ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                var meta = {\n                    name: moduleType.name,\n                    type: moduleType,\n                    deps: reflectDependencies(moduleType),\n                    providers: ngModule.providers || EMPTY_ARRAY$4,\n                    imports: [\n                        (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                    ],\n                };\n                ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n            }\n            return ngInjectorDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n    if (verifiedNgModule.get(moduleType))\n        return;\n    verifiedNgModule.set(moduleType, true);\n    moduleType = resolveForwardRef(moduleType);\n    var ngModuleDef;\n    if (importingModule) {\n        ngModuleDef = getNgModuleDef(moduleType);\n        if (!ngModuleDef) {\n            throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n        }\n    }\n    else {\n        ngModuleDef = getNgModuleDef(moduleType, true);\n    }\n    var errors = [];\n    var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n    var imports = maybeUnwrapFn(ngModuleDef.imports);\n    flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n        verifySemanticsOfNgModuleImport(mod, moduleType);\n        verifySemanticsOfNgModuleDef(mod, false, moduleType);\n    });\n    var exports = maybeUnwrapFn(ngModuleDef.exports);\n    declarations.forEach(verifyDeclarationsHaveDefinitions);\n    var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n    exports.forEach(verifyExportsAreDeclaredOrReExported);\n    declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n    declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n    var ngModule = getAnnotation(moduleType, 'NgModule');\n    if (ngModule) {\n        ngModule.imports &&\n            flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                verifySemanticsOfNgModuleImport(mod, moduleType);\n                verifySemanticsOfNgModuleDef(mod, false, moduleType);\n            });\n        ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n        ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n        ngModule.entryComponents &&\n            deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n    }\n    // Throw Error if any errors were detected.\n    if (errors.length) {\n        throw new Error(errors.join('\\n'));\n    }\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    function verifyDeclarationsHaveDefinitions(type) {\n        type = resolveForwardRef(type);\n        var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n        if (!def) {\n            errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n        }\n    }\n    function verifyExportsAreDeclaredOrReExported(type) {\n        type = resolveForwardRef(type);\n        var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n            getPipeDef(type) && 'pipe';\n        if (kind) {\n            // only checked if we are declared as Component, Directive, or Pipe\n            // Modules don't need to be declared or imported.\n            if (combinedDeclarations.lastIndexOf(type) === -1) {\n                // We are exporting something which we don't explicitly declare or import.\n                errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n            }\n        }\n    }\n    function verifyDeclarationIsUnique(type, suppressErrors) {\n        type = resolveForwardRef(type);\n        var existingModule = ownerNgModule.get(type);\n        if (existingModule && existingModule !== moduleType) {\n            if (!suppressErrors) {\n                var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n        }\n        else {\n            // Mark type as having owner.\n            ownerNgModule.set(type, moduleType);\n        }\n    }\n    function verifyComponentIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        var existingModule = ownerNgModule.get(type);\n        if (!existingModule) {\n            errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n    }\n    function verifyCorrectBootstrapType(type) {\n        type = resolveForwardRef(type);\n        if (!getComponentDef(type)) {\n            errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n        }\n    }\n    function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        if (getComponentDef(type)) {\n            // We know we are component\n            var component = getAnnotation(type, 'Component');\n            if (component && component.entryComponents) {\n                deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n            }\n        }\n    }\n    function verifySemanticsOfNgModuleImport(type, importingModule) {\n        type = resolveForwardRef(type);\n        if (getComponentDef(type) || getDirectiveDef(type)) {\n            throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n        }\n        if (getPipeDef(type)) {\n            throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n        }\n    }\n}\nfunction unwrapModuleWithProvidersImports(typeOrWithProviders) {\n    typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n    return typeOrWithProviders.ngModule || typeOrWithProviders;\n}\nfunction getAnnotation(type, name) {\n    var annotation = null;\n    collect(type.__annotations__);\n    collect(type.decorators);\n    return annotation;\n    function collect(annotations) {\n        if (annotations) {\n            annotations.forEach(readAnnotation);\n        }\n    }\n    function readAnnotation(decorator) {\n        if (!annotation) {\n            var proto = Object.getPrototypeOf(decorator);\n            if (proto.ngMetadataName == name) {\n                annotation = decorator;\n            }\n            else if (decorator.type) {\n                var proto_1 = Object.getPrototypeOf(decorator.type);\n                if (proto_1.ngMetadataName == name) {\n                    annotation = decorator.args[0];\n                }\n            }\n        }\n    }\n}\n/**\n * Keep track of compiled components. This is needed because in tests we often want to compile the\n * same component with more than one NgModule. This would cause an error unless we reset which\n * NgModule the component belongs to. We keep the list of compiled components here so that the\n * TestBed can reset it later.\n */\nvar ownerNgModule = new Map();\nvar verifiedNgModule = new Map();\nfunction resetCompiledComponents() {\n    ownerNgModule = new Map();\n    verifiedNgModule = new Map();\n    moduleQueue.length = 0;\n}\n/**\n * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n * traversing the exports of imported modules.\n * @param type\n */\nfunction computeCombinedExports(type) {\n    type = resolveForwardRef(type);\n    var ngModuleDef = getNgModuleDef(type, true);\n    return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n        var ngModuleDef = getNgModuleDef(type);\n        if (ngModuleDef) {\n            verifySemanticsOfNgModuleDef(type, false);\n            return computeCombinedExports(type);\n        }\n        else {\n            return type;\n        }\n    })));\n}\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType, ngModule) {\n    var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n    var transitiveScopes = transitiveScopesFor(moduleType);\n    declarations.forEach(function (declaration) {\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            // An `ngComponentDef` field exists - go ahead and patch the component directly.\n            var component = declaration;\n            var componentDef = getComponentDef(component);\n            patchComponentDefWithScope(componentDef, transitiveScopes);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = moduleType;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, transitiveScopes) {\n    componentDef.directiveDefs = function () {\n        return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n            getDirectiveDef(dir); })\n            .filter(function (def) { return !!def; });\n    };\n    componentDef.pipeDefs = function () {\n        return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n    };\n    componentDef.schemas = transitiveScopes.schemas;\n    // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n    // may face a problem where previously compiled defs available to a given Component/Directive\n    // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n    // order to avoid this problem, we force fresh TView to be created.\n    componentDef.tView = null;\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nfunction transitiveScopesFor(moduleType, processNgModuleFn) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    var def = getNgModuleDef(moduleType);\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    var scopes = {\n        schemas: def.schemas || null,\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    maybeUnwrapFn(def.declarations).forEach(function (declared) {\n        var declaredWithDefs = declared;\n        if (getPipeDef(declaredWithDefs)) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    maybeUnwrapFn(def.imports).forEach(function (imported) {\n        var importedType = imported;\n        if (!isNgModule(importedType)) {\n            throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n        }\n        if (processNgModuleFn) {\n            processNgModuleFn(importedType);\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    maybeUnwrapFn(def.exports).forEach(function (exported) {\n        var exportedType = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedType)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (getPipeDef(exportedType)) {\n            scopes.exported.pipes.add(exportedType);\n        }\n        else {\n            scopes.exported.directives.add(exportedType);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return !!getNgModuleDef(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nfunction compileComponent(type, metadata) {\n    var ngComponentDef = null;\n    // Metadata may have resources which need to be resolved.\n    maybeQueueResolutionOfComponentResources(type, metadata);\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            var compiler = getCompilerFacade();\n            if (ngComponentDef === null) {\n                if (componentNeedsResolution(metadata)) {\n                    var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                    if (metadata.templateUrl) {\n                        error.push(\" - templateUrl: \" + metadata.templateUrl);\n                    }\n                    if (metadata.styleUrls && metadata.styleUrls.length) {\n                        error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                    }\n                    error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                    throw new Error(error.join('\\n'));\n                }\n                var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                if (meta.usesInheritance) {\n                    addBaseDefToUndecoratedParents(type);\n                }\n                ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                // When NgModule decorator executed, we enqueued the module definition such that\n                // it would only dequeue and add itself as module scope to all of its declarations,\n                // but only if  if all of its declarations had resolved. This call runs the check\n                // to see if any modules that are in the queue can be dequeued and add scope to\n                // their declarations.\n                flushModuleScopingQueueAsMuchAsPossible();\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it\n                // finishes compiling.\n                if (hasSelectorScope(type)) {\n                    var scopes = transitiveScopesFor(type.ngSelectorScope);\n                    patchComponentDefWithScope(ngComponentDef, scopes);\n                }\n            }\n            return ngComponentDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n    // Add ngInjectableDef so components are reachable through the module injector by default\n    // This is mostly to support injecting components in tests. In real application code,\n    // components should be retrieved through the node injector, so this isn't a problem.\n    compileInjectable(type);\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var ngDirectiveDef = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (ngDirectiveDef === null) {\n                var name_1 = type && type.name;\n                var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                var compiler = getCompilerFacade();\n                var facade = directiveMetadata(type, directive);\n                facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                if (facade.usesInheritance) {\n                    addBaseDefToUndecoratedParents(type);\n                }\n                ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n            }\n            return ngDirectiveDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n    // Add ngInjectableDef so directives are reachable through the module injector by default\n    // This is mostly to support injecting directives in tests. In real application code,\n    // directives should be retrieved through the node injector, so this isn't a problem.\n    compileInjectable(type);\n}\nfunction extendsDirectlyFromObject(type) {\n    return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var propMetadata = getReflect().ownPropMetadata(type);\n    return {\n        name: type.name,\n        type: type,\n        typeArgumentCount: 0,\n        selector: metadata.selector,\n        deps: reflectDependencies(type),\n        host: metadata.host || EMPTY_OBJ,\n        propMetadata: propMetadata,\n        inputs: metadata.inputs || EMPTY_ARRAY,\n        outputs: metadata.outputs || EMPTY_ARRAY,\n        queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n        lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n        typeSourceSpan: null,\n        usesInheritance: !extendsDirectlyFromObject(type),\n        exportAs: extractExportAs(metadata.exportAs),\n        providers: metadata.providers || null,\n        viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n    };\n}\n/**\n * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n */\nfunction addBaseDefToUndecoratedParents(type) {\n    var objPrototype = Object.prototype;\n    var parent = Object.getPrototypeOf(type);\n    // Go up the prototype until we hit `Object`.\n    while (parent && parent !== objPrototype) {\n        // Since inheritance works if the class was annotated already, we only need to add\n        // the base def if there are no annotations and the base def hasn't been created already.\n        if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n            var facade = extractBaseDefMetadata(parent);\n            facade && compileBase(parent, facade);\n        }\n        parent = Object.getPrototypeOf(parent);\n    }\n}\n/** Compiles the base metadata into a base definition. */\nfunction compileBase(type, facade) {\n    var ngBaseDef = null;\n    Object.defineProperty(type, NG_BASE_DEF, {\n        get: function () {\n            if (ngBaseDef === null) {\n                var name_2 = type && type.name;\n                var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                var compiler = getCompilerFacade();\n                ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n            }\n            return ngBaseDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n/** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\nfunction extractBaseDefMetadata(type) {\n    var propMetadata = getReflect().ownPropMetadata(type);\n    var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n    var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n    var inputs;\n    var outputs;\n    // We only need to know whether there are any HostListener or HostBinding\n    // decorators present, the parsing logic is in the compiler already.\n    var hasHostDecorators = false;\n    var _loop_1 = function (field) {\n        propMetadata[field].forEach(function (ann) {\n            var metadataName = ann.ngMetadataName;\n            if (metadataName === 'Input') {\n                inputs = inputs || {};\n                inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n            }\n            else if (metadataName === 'Output') {\n                outputs = outputs || {};\n                outputs[field] = ann.bindingPropertyName || field;\n            }\n            else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                hasHostDecorators = true;\n            }\n        });\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    // Only generate the base def if there's any info inside it.\n    if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n        return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n    }\n    return null;\n}\nfunction convertToR3QueryPredicate(selector) {\n    return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n}\nfunction convertToR3QueryMetadata(propertyName, ann) {\n    return {\n        propertyName: propertyName,\n        predicate: convertToR3QueryPredicate(ann.selector),\n        descendants: ann.descendants,\n        first: ann.first,\n        read: ann.read ? ann.read : null,\n        static: !!ann.static\n    };\n}\nfunction extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n    var queriesMeta = [];\n    var _loop_2 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            var annotations_1 = propMetadata[field];\n            annotations_1.forEach(function (ann) {\n                if (isQueryAnn(ann)) {\n                    if (!ann.selector) {\n                        throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                            (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                    }\n                    if (annotations_1.some(isInputAnn)) {\n                        throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                    }\n                    queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                }\n            });\n        }\n    };\n    for (var field in propMetadata) {\n        _loop_2(field);\n    }\n    return queriesMeta;\n}\nfunction extractExportAs(exportAs) {\n    if (exportAs === undefined) {\n        return null;\n    }\n    return exportAs.split(',').map(function (part) { return part.trim(); });\n}\nfunction isContentQuery(value) {\n    var name = value.ngMetadataName;\n    return name === 'ContentChild' || name === 'ContentChildren';\n}\nfunction isViewQuery(value) {\n    var name = value.ngMetadataName;\n    return name === 'ViewChild' || name === 'ViewChildren';\n}\nfunction isInputAnn(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction splitByComma(value) {\n    return value.split(',').map(function (piece) { return piece.trim(); });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction compilePipe(type, meta) {\n    var ngPipeDef = null;\n    Object.defineProperty(type, NG_PIPE_DEF, {\n        get: function () {\n            if (ngPipeDef === null) {\n                var typeName = type.name;\n                ngPipeDef =\n                    getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                        type: type,\n                        typeArgumentCount: 0,\n                        name: typeName,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n            }\n            return ngPipeDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$a = function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, Éµ1$2 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nvar Directive = makeDecorator('Directive', Éµ0$a, undefined, undefined, Éµ1$2);\nvar Éµ2$1 = function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Éµ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Component = makeDecorator('Component', Éµ2$1, Directive, undefined, Éµ3$1);\nvar Éµ4 = function (p) { return (__assign({ pure: true }, p)); }, Éµ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n/**\n * @Annotation\n * @publicApi\n */\nvar Pipe = makeDecorator('Pipe', Éµ4, undefined, undefined, Éµ5);\nvar Éµ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n/**\n * @Annotation\n * @publicApi\n */\nvar Input = makePropDecorator('Input', Éµ6);\nvar Éµ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n/**\n * @Annotation\n * @publicApi\n */\nvar Output = makePropDecorator('Output', Éµ7);\nvar Éµ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n/**\n * @Annotation\n * @publicApi\n */\nvar HostBinding = makePropDecorator('HostBinding', Éµ8);\nvar Éµ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n/**\n * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n *\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```ts\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n * @publicApi\n */\nvar HostListener = makePropDecorator('HostListener', Éµ9);\nvar SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\nvar SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\nvar SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\nvar SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\nvar SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\nvar SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\nvar SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\nvar SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\nvar SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$b = function (ngModule) { return ngModule; }, Éµ1$3 = \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n *\n * * The `declarations` and `entryComponents` options configure the compiler\n * with information about what belongs to the NgModule.\n * * The `providers` options configures the NgModule's injector to provide\n * dependencies the NgModule members.\n * * The `imports` and `exports` options bring in members from other modules, and make\n * this module's members available to others.\n */\nfunction (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n/**\n * @Annotation\n * @publicApi\n */\nvar NgModule = makeDecorator('NgModule', Éµ0$b, undefined, undefined, Éµ1$3);\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = ÉµÉµdefineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\nvar SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\nvar SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\nvar SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n *\n * @publicApi\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @publicApi\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus = __decorate([\n        Injectable(),\n        __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [Array])\n    ], ApplicationInitStatus);\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @publicApi\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @publicApi\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @publicApi\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @publicApi\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @publicApi\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @publicApi\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console = __decorate([\n        Injectable()\n    ], Console);\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nvar LOCALE_ID$1 = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nvar TRANSLATIONS$1 = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nvar MissingTranslationStrategy;\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\nvar Compiler_compileModuleSync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n    return new NgModuleFactory$1(moduleType);\n};\nvar Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\nvar Compiler_compileModuleAsync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\nvar Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\nvar Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n    var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n    var moduleDef = getNgModuleDef(moduleType);\n    var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n        .reduce(function (factories, declaration) {\n        var componentDef = getComponentDef(declaration);\n        componentDef && factories.push(new ComponentFactory$1(componentDef));\n        return factories;\n    }, []);\n    return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n};\nvar Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\nvar Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\nvar Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        this.compileModuleSync = Compiler_compileModuleSync;\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        this.compileModuleAsync = Compiler_compileModuleAsync;\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n    }\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n    Compiler = __decorate([\n        Injectable()\n    ], Compiler);\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @publicApi\n * @deprecated the Web Tracing Framework is no longer supported in Angular\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @publicApi\n * @deprecated the Web Tracing Framework is no longer supported in Angular\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @publicApi\n * @deprecated the Web Tracing Framework is no longer supported in Angular\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @publicApi\n * @deprecated the Web Tracing Framework is no longer supported in Angular\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar promise = (function () { return Promise.resolve(0); })();\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop$1() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this.taskTrackingZone = null;\n        this._watchAngularEvents();\n        _ngZone.run(function () {\n            _this.taskTrackingZone =\n                typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n        });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        // Copy the tasks data so that we don't leak tasks.\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                data: t.data\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], Testability);\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], TestabilityRegistry);\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _platform;\nvar compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\nfunction compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n    var compilerFactory = injector.get(CompilerFactory);\n    var compiler = compilerFactory.createCompiler([options]);\n    return compiler.compileModuleAsync(moduleType);\n}\nfunction compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n    ngDevMode && assertNgModuleType(moduleType);\n    var moduleFactory = new NgModuleFactory$1(moduleType);\n    if (isComponentResourceResolutionQueueEmpty()) {\n        return Promise.resolve(moduleFactory);\n    }\n    var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n    var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n    // In case there are no compiler providers, we just return the module factory as\n    // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n    // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n    // unnecessarily require the JIT compiler.\n    if (compilerProviders.length === 0) {\n        return Promise.resolve(moduleFactory);\n    }\n    var compiler = getCompilerFacade();\n    var compilerInjector = Injector.create({ providers: compilerProviders });\n    var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n    // The resource loader can also return a string while the \"resolveComponentResources\"\n    // always expects a promise. Therefore we need to wrap the returned value in a promise.\n    return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n        .then(function () { return moduleFactory; });\n}\nvar isBoundToModule = isBoundToModule__PRE_R3__;\nfunction isBoundToModule__PRE_R3__(cf) {\n    return cf instanceof ComponentFactoryBoundToModule;\n}\nfunction isBoundToModule__POST_R3__(cf) {\n    return cf.isBoundToModule;\n}\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @publicApi\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @publicApi\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @publicApi\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @publicApi\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @publicApi\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n            var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n            setLocaleId(localeId);\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var options = optionsReducer({}, compilerOptions);\n        return compileNgModuleFactory(this.injector, options, moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], PlatformRef);\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * @usageNotes\n *\n * {@a is-stable-examples}\n * ### isStable examples and caveats\n *\n * Note two important points about `isStable`, demonstrated in the examples below:\n * - the application will never be stable if you start any kind\n * of recurrent asynchronous task when the application starts\n * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n * or using RxJS operators like `interval`);\n * - the `isStable` Observable runs outside of the Angular zone.\n *\n * Let's imagine that you start a recurrent task\n * (here incrementing a counter, using RxJS `interval`),\n * and at the same time subscribe to `isStable`.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *      filter(stable => stable)\n *   ).subscribe(() => console.log('App is stable now');\n *   interval(1000).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, `isStable` will never emit `true`,\n * and the trace \"App is stable now\" will never get logged.\n *\n * If you want to execute something when the app is stable,\n * you have to wait for the application to be stable\n * before starting your polling process.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     tap(stable => console.log('App is stable now')),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, the trace \"App is stable now\" will be logged\n * and then the counter starts incrementing every second.\n *\n * Note also that this Observable runs outside of the Angular zone,\n * which means that the code in the subscription\n * to this Observable will not trigger the change detection.\n *\n * Let's imagine that instead of logging the counter value,\n * you update a field of your component\n * and display it in its template.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => this.value = counter);\n * }\n * ```\n * As the `isStable` Observable runs outside the zone,\n * the `value` field will be updated properly,\n * but the template will not be refreshed!\n *\n * You'll have to manually trigger the change detection to update the template.\n *\n * ```\n * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => {\n *     this.value = counter;\n *     cd.detectChanges();\n *   });\n * }\n * ```\n *\n * Or make the subscription callback run inside the zone.\n *\n * ```\n * constructor(appRef: ApplicationRef, zone: NgZone) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => zone.run(() => this.value = counter));\n * }\n * ```\n *\n * @publicApi\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            merge$1(isCurrentlyStable, isStable.pipe(share()));\n    }\n    ApplicationRef_1 = ApplicationRef;\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var e_1, _a, e_2, _b;\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef_1._tickScope();\n        try {\n            this._runningTick = true;\n            try {\n                for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var view = _d.value;\n                    view.detectChanges();\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this._enforceNoNewChanges) {\n                try {\n                    for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var view = _f.value;\n                        view.checkNoChanges();\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    var ApplicationRef_1;\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef = ApplicationRef_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n            ErrorHandler,\n            ComponentFactoryResolver,\n            ApplicationInitStatus])\n    ], ApplicationRef);\n    return ApplicationRef;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\nfunction _mergeArrays(parts) {\n    var result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n * @publicApi\n * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n * part of its implementation. See `LoadChildren` for more details.\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nfunction getModuleFactory__PRE_R3__(id) {\n    var factory = getRegisteredNgModuleType(id);\n    if (!factory)\n        throw noModuleError(id);\n    return factory;\n}\nfunction getModuleFactory__POST_R3__(id) {\n    var type = getRegisteredNgModuleType(id);\n    if (!type)\n        throw noModuleError(id);\n    return new NgModuleFactory$1(type);\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @publicApi\n */\nvar getModuleFactory = getModuleFactory__PRE_R3__;\nfunction noModuleError(id) {\n    return new Error(\"No module with ID \" + id + \" loaded\");\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SWITCH_IVY_ENABLED__POST_R3__ = true;\nvar SWITCH_IVY_ENABLED__PRE_R3__ = false;\nvar ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @publicApi\n * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n * is part of its implementation. See `LoadChildren` for more details.\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @publicApi\n * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n * part of its implementation. See `LoadChildren` for more details.\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n        return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader = __decorate([\n        Injectable(),\n        __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n    ], SystemJsNgModuleLoader);\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * @usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @publicApi\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar DebugEventListener = /** @class */ (function () {\n    function DebugEventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return DebugEventListener;\n}());\nvar DebugNode__PRE_R3__ = /** @class */ (function () {\n    function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n        this.listeners = [];\n        this.parent = null;\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement__PRE_R3__) {\n            parent.addChild(this);\n        }\n    }\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__PRE_R3__;\n}());\nvar DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n    __extends(DebugElement__PRE_R3__, _super);\n    function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement__PRE_R3__.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _a;\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                child.parent = _this;\n            });\n        }\n    };\n    DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement__PRE_R3__.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n        get: function () {\n            return this\n                .childNodes //\n                .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement__PRE_R3__;\n}(DebugNode__PRE_R3__));\n/**\n * @publicApi\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement__PRE_R3__) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement__PRE_R3__) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__PRE_R3__) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\nvar DebugNode__POST_R3__ = /** @class */ (function () {\n    function DebugNode__POST_R3__(nativeNode) {\n        this.nativeNode = nativeNode;\n    }\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n        get: function () {\n            var parent = this.nativeNode.parentNode;\n            return parent ? new DebugElement__POST_R3__(parent) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n        get: function () { return getInjector(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n        get: function () {\n            var nativeElement = this.nativeNode;\n            return nativeElement &&\n                (getComponent(nativeElement) || getViewComponent(nativeElement));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n        get: function () {\n            return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n        get: function () {\n            return getListeners(this.nativeNode).filter(isBrowserEvents);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n        get: function () { return getLocalRefs(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n        get: function () { return getInjectionTokens(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__POST_R3__;\n}());\nvar DebugElement__POST_R3__ = /** @class */ (function (_super) {\n    __extends(DebugElement__POST_R3__, _super);\n    function DebugElement__POST_R3__(nativeNode) {\n        var _this = this;\n        ngDevMode && assertDomNode(nativeNode);\n        _this = _super.call(this, nativeNode) || this;\n        return _this;\n    }\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n        get: function () {\n            return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n        get: function () { return this.nativeElement.nodeName; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n        /**\n         *  Gets a map of property names to property values for an element.\n         *\n         *  This map includes:\n         *  - Regular property bindings (e.g. `[id]=\"id\"`)\n         *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n         *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n         *\n         *  It does not include:\n         *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n         *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n         */\n        get: function () {\n            var context = loadLContext(this.nativeNode);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            var properties = collectPropertyBindings(tNode, lView, tData);\n            var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n            var className = collectClassNames(this);\n            var output = __assign({}, properties, hostProperties);\n            if (className) {\n                output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n            }\n            return output;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n        get: function () {\n            var attributes = {};\n            var element = this.nativeElement;\n            if (!element) {\n                return attributes;\n            }\n            var context = loadLContext(element);\n            var lView = context.lView;\n            var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n            var lowercaseTNodeAttrs = [];\n            // For debug nodes we take the element's attribute directly from the DOM since it allows us\n            // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n            // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n            // however since we have the attributes already on the TNode, we can preserve the case by going\n            // through them once, adding them to the `attributes` map and putting their lower-cased name\n            // into an array. Afterwards when we're going through the native DOM attributes, we can check\n            // whether we haven't run into an attribute already through the TNode.\n            if (tNodeAttrs) {\n                var i = 0;\n                while (i < tNodeAttrs.length) {\n                    var attrName = tNodeAttrs[i];\n                    // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                    // else will be handled below when we read the final attributes off the DOM.\n                    if (typeof attrName !== 'string')\n                        break;\n                    var attrValue = tNodeAttrs[i + 1];\n                    attributes[attrName] = attrValue;\n                    lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                    i += 2;\n                }\n            }\n            var eAttrs = element.attributes;\n            for (var i = 0; i < eAttrs.length; i++) {\n                var attr = eAttrs[i];\n                // Make sure that we don't assign the same attribute both in its\n                // case-sensitive form and the lower-cased one from the browser.\n                if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                    attributes[attr.name] = attr.value;\n                }\n            }\n            return attributes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n        get: function () {\n            return _getStylingDebugInfo(this.nativeElement, false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n        get: function () {\n            return _getStylingDebugInfo(this.nativeElement, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n        get: function () {\n            var childNodes = this.nativeNode.childNodes;\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n        get: function () {\n            var nativeElement = this.nativeElement;\n            if (!nativeElement)\n                return [];\n            var childNodes = nativeElement.children;\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement__POST_R3__.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryAllR3(this, predicate, matches, true);\n        return matches;\n    };\n    DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryAllR3(this, predicate, matches, false);\n        return matches;\n    };\n    DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name === eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement__POST_R3__;\n}(DebugNode__POST_R3__));\nfunction _getStylingDebugInfo(element, isClassBased) {\n    if (element) {\n        var context = loadLContextFromNode(element);\n        var lView = context.lView;\n        var tData = lView[TVIEW].data;\n        var tNode = tData[context.nodeIndex];\n        if (isClassBased) {\n            return isStylingContext(tNode.classes) ?\n                new NodeStylingDebug(tNode.classes, lView, true).values :\n                stylingMapToStringMap(tNode.classes);\n        }\n        else {\n            return isStylingContext(tNode.styles) ?\n                new NodeStylingDebug(tNode.styles, lView, false).values :\n                stylingMapToStringMap(tNode.styles);\n        }\n    }\n    return {};\n}\nfunction _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n    var context = loadLContext(parentElement.nativeNode);\n    var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n    _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n}\n/**\n * Recursively match the current TNode against the predicate, and goes on with the next ones.\n *\n * @param tNode the current TNode\n * @param lView the LView of this TNode\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n    var e_1, _a;\n    var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n    // For each type of TNode, specific logic is executed.\n    if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n        // Case 1: the TNode is an element\n        // The native node has to be checked.\n        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n        if (isComponent(tNode)) {\n            // If the element is the host of a component, then all nodes in its view have to be processed.\n            // Note: the component's content (tNode.child) will be processed from the insertion points.\n            var componentView = getComponentViewByIndex(tNode.index, lView);\n            if (componentView && componentView[TVIEW].firstChild) {\n                _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else {\n            if (tNode.child) {\n                // Otherwise, its children have to be processed.\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // We also have to query the DOM directly in order to catch elements inserted through\n            // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n            // times. ViewEngine could do it more efficiently, because all the insertions go through\n            // Renderer2, however that's not the case in Ivy. This approach is being used because:\n            // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n            //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n            // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n            // 3. It allows us to capture nodes that were inserted directly via the DOM.\n            nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n        }\n        // In all cases, if a dynamic container exists for this node, each view inside it has to be\n        // processed.\n        var nodeOrContainer = lView[tNode.index];\n        if (isLContainer(nodeOrContainer)) {\n            _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    else if (tNode.type === 0 /* Container */) {\n        // Case 2: the TNode is a container\n        // The native node has to be checked.\n        var lContainer = lView[tNode.index];\n        _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n        // Each view inside the container has to be processed.\n        _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n    }\n    else if (tNode.type === 1 /* Projection */) {\n        // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n        // The nodes projected at this location all need to be processed.\n        var componentView = findComponentView(lView);\n        var componentHost = componentView[T_HOST];\n        var head = componentHost.projection[tNode.projection];\n        if (Array.isArray(head)) {\n            try {\n                for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                    var nativeNode_1 = head_1_1.value;\n                    _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        else if (head) {\n            var nextLView = componentView[PARENT];\n            var nextTNode = nextLView[TVIEW].data[head.index];\n            _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    else if (tNode.child) {\n        // Case 4: the TNode is a view.\n        _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n    }\n    // We don't want to go to the next sibling of the root node.\n    if (rootNativeNode !== nativeNode) {\n        // To determine the next node to be processed, we need to use the next or the projectionNext\n        // link, depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n}\n/**\n * Process all TNodes in a given container.\n *\n * @param lContainer the container to be processed\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n    for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n        var childView = lContainer[i];\n        _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n    }\n}\n/**\n * Match the current native node against the predicate.\n *\n * @param nativeNode the current native node\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n    if (rootNativeNode !== nativeNode) {\n        var debugNode = getDebugNode(nativeNode);\n        if (!debugNode) {\n            return;\n        }\n        // Type of the \"predicate and \"matches\" array are set based on the value of\n        // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n        // types with generics, so we manually cast the parameters accordingly.\n        if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n            matches.indexOf(debugNode) === -1) {\n            matches.push(debugNode);\n        }\n        else if (!elementsOnly && predicate(debugNode) &&\n            matches.indexOf(debugNode) === -1) {\n            matches.push(debugNode);\n        }\n    }\n}\n/**\n * Match all the descendants of a DOM node against a predicate.\n *\n * @param nativeNode the current native node\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n */\nfunction _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n    var nodes = parentNode.childNodes;\n    var length = nodes.length;\n    for (var i = 0; i < length; i++) {\n        var node = nodes[i];\n        var debugNode = getDebugNode(node);\n        if (debugNode) {\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n        }\n    }\n}\n/**\n * Iterates through the property bindings for a given node and generates\n * a map of property names to values. This map only contains property bindings\n * defined in templates, not in host bindings.\n */\nfunction collectPropertyBindings(tNode, lView, tData) {\n    var properties = {};\n    var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n    while (bindingIndex < tNode.propertyMetadataEndIndex) {\n        var value = void 0;\n        var propMetadata = tData[bindingIndex];\n        while (!isPropMetadataString(propMetadata)) {\n            // This is the first value for an interpolation. We need to build up\n            // the full interpolation by combining runtime values in LView with\n            // the static interstitial values stored in TData.\n            value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n            propMetadata = tData[++bindingIndex];\n        }\n        value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n        // Property metadata string has 3 parts: property name, prefix, and suffix\n        var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n        var propertyName = metadataParts[0];\n        // Attr bindings don't have property names and should be skipped\n        if (propertyName) {\n            // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n            // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n            properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                metadataParts[1] + value + metadataParts[2] :\n                value;\n        }\n        bindingIndex++;\n    }\n    return properties;\n}\n/**\n * Retrieves the first binding index that holds values for this property\n * binding.\n *\n * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n * there can be multiple binding values, so we might have to loop backwards\n * from the metadata index until we find the first one.\n *\n * @param metadataIndex The index of the first property metadata string for\n * this node.\n * @param tData The data array for the current TView\n * @returns The first binding index for this binding\n */\nfunction getFirstBindingIndex(metadataIndex, tData) {\n    var currentBindingIndex = metadataIndex - 1;\n    // If the slot before the metadata holds a string, we know that this\n    // metadata applies to an interpolation with at least 2 bindings, and\n    // we need to search further to access the first binding value.\n    var currentValue = tData[currentBindingIndex];\n    // We need to iterate until we hit either a:\n    // - TNode (it is an element slot marking the end of `consts` section), OR a\n    // - metadata string (slot is attribute metadata or a previous node's property metadata)\n    while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n        currentValue = tData[--currentBindingIndex];\n    }\n    return currentBindingIndex + 1;\n}\nfunction collectHostPropertyBindings(tNode, lView, tData) {\n    var properties = {};\n    // Host binding values for a node are stored after directives on that node\n    var hostPropIndex = tNode.directiveEnd;\n    var propMetadata = tData[hostPropIndex];\n    // When we reach a value in TView.data that is not a string, we know we've\n    // hit the next node's providers and directives and should stop copying data.\n    while (typeof propMetadata === 'string') {\n        var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n        properties[propertyName] = lView[hostPropIndex];\n        propMetadata = tData[++hostPropIndex];\n    }\n    return properties;\n}\nfunction collectClassNames(debugElement) {\n    var e_2, _a;\n    var classes = debugElement.classes;\n    var output = '';\n    try {\n        for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var className = _c.value;\n            if (classes[className]) {\n                output = output ? output + (\" \" + className) : className;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return output;\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\nfunction getDebugNode__PRE_R3__(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\nvar NG_DEBUG_PROPERTY = '__ng_debug__';\nfunction getDebugNode__POST_R3__(nativeNode) {\n    if (nativeNode instanceof Node) {\n        if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n            nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return nativeNode[NG_DEBUG_PROPERTY];\n    }\n    return null;\n}\n/**\n * @publicApi\n */\nvar getDebugNode = getDebugNode__PRE_R3__;\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * @publicApi\n */\nvar DebugNode = DebugNode__PRE_R3__;\n/**\n * @publicApi\n */\nvar DebugElement = DebugElement__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    if (locale) {\n        return locale;\n    }\n    // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n    // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n    // backwards compatibility, we use Angular default value over Closure Compiler's one.\n    if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n        return goog.LOCALE;\n    }\n    return 'en-US';\n}\n/**\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n */\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID$1,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * Schedule work at next available slot.\n *\n * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n *\n * @param ngZone NgZone to use for scheduling.\n */\nfunction zoneSchedulerFactory(ngZone) {\n    var queue = [];\n    ngZone.onStable.subscribe(function () {\n        while (queue.length) {\n            queue.pop()();\n        }\n    });\n    return function (fn) { queue.push(fn); };\n}\n/**\n * Configures the root injector for an app with\n * providers of `@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule = __decorate([\n        NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n        __metadata(\"design:paramtypes\", [ApplicationRef])\n    ], ApplicationModule);\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    var _a;\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n        var preserveContent = (!!elDef.componentRendererType &&\n            elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n        el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode, name);\n    }\n    else {\n        renderer.removeClass(renderNode, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery() {\n    return new QueryList();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode;\n    var renderer = view.renderer;\n    renderNode = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode);\n    }\n    return { renderText: renderNode };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef = overrideComponentView;\n    }\n    else {\n        viewDef = applyProviderOverridesToView(viewDef);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    var injectableDef;\n    if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n        typeof injectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef, elIndex) {\n        for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (getInjectableDef(token).providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            var _a;\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        /**\n         * Factory function used to create a `DebugContext` when a node is created.\n         *\n         * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n         *\n         * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n         * or a Render context.\n         */\n        this.debugContextFactory = getCurrentDebugContext;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        var debugNode = getDebugNode(node);\n        removeDebugNodeFromIndex(debugNode);\n        if (debugNode instanceof DebugNode__PRE_R3__) {\n            debugNode.listeners.length = 0;\n        }\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = this.createDebugContext(el);\n        if (debugCtx) {\n            var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = this.createDebugContext(comment);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = this.createDebugContext(text);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n        var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new DebugEventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nfunction cloneNgModuleDefinition(def) {\n    var providers = Array.from(def.providers);\n    var modules = Array.from(def.modules);\n    var providersByKey = {};\n    for (var key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n    };\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        // Clone the NgModuleDefinition so that any tree shakeable provider definition\n        // added to this instance of the NgModuleRef doesn't affect the cached copy.\n        // See https://github.com/angular/angular/issues/25018.\n        var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APPLICATION_MODULE_PROVIDERS as Éµangular_packages_core_core_q, _iterableDiffersFactory as Éµangular_packages_core_core_n, _keyValueDiffersFactory as Éµangular_packages_core_core_o, _localeFactory as Éµangular_packages_core_core_p, zoneSchedulerFactory as Éµangular_packages_core_core_r, _appIdRandomProviderFactory as Éµangular_packages_core_core_f, DefaultIterableDifferFactory as Éµangular_packages_core_core_l, DefaultKeyValueDifferFactory as Éµangular_packages_core_core_m, DebugElement__PRE_R3__ as Éµangular_packages_core_core_k, DebugNode__PRE_R3__ as Éµangular_packages_core_core_j, NullInjector as Éµangular_packages_core_core_b, injectInjectorOnly as Éµangular_packages_core_core_a, ReflectiveInjector_ as Éµangular_packages_core_core_c, ReflectiveDependency as Éµangular_packages_core_core_d, resolveReflectiveProviders as Éµangular_packages_core_core_e, getModuleFactory__PRE_R3__ as Éµangular_packages_core_core_i, wtfEnabled as Éµangular_packages_core_core_s, createScope as Éµangular_packages_core_core_u, detectWTF as Éµangular_packages_core_core_t, endTimeRange as Éµangular_packages_core_core_x, leave as Éµangular_packages_core_core_v, startTimeRange as Éµangular_packages_core_core_w, SCHEDULER as Éµangular_packages_core_core_ba, injectAttributeImpl as Éµangular_packages_core_core_bb, getLView as Éµangular_packages_core_core_bc, getPreviousOrParentTNode as Éµangular_packages_core_core_bd, nextContextImpl as Éµangular_packages_core_core_be, getRootContext as Éµangular_packages_core_core_bm, loadInternal as Éµangular_packages_core_core_bl, createElementRef as Éµangular_packages_core_core_g, createTemplateRef as Éµangular_packages_core_core_h, getUrlSanitizer as Éµangular_packages_core_core_bg, noSideEffects as Éµangular_packages_core_core_bk, makeParamDecorator as Éµangular_packages_core_core_bh, makePropDecorator as Éµangular_packages_core_core_bi, getClosureSafeProperty as Éµangular_packages_core_core_bn, _def as Éµangular_packages_core_core_y, DebugContext as Éµangular_packages_core_core_z, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, createPlatformFactory, NgProbeToken, enableProdMode, isDevMode, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugEventListener, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS$1 as TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID$1 as LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, Attribute, ANALYZE_FOR_ENTRY_COMPONENTS, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, ViewEncapsulation, Version, VERSION, InjectFlags, ÉµÉµdefineInjectable, defineInjectable, ÉµÉµdefineInjector, forwardRef, resolveForwardRef, Injectable, Injector, ÉµÉµinject, inject, INJECTOR, ReflectiveInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, Éµ0, Éµ1, NgZone, NoopNgZone as ÉµNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentFactory as ÉµComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef$1 as ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ÉµALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ÉµAPP_ID_RANDOM_PROVIDER, defaultIterableDiffers as ÉµdefaultIterableDiffers, defaultKeyValueDiffers as ÉµdefaultKeyValueDiffers, devModeEqual as ÉµdevModeEqual, isListLikeIterable as ÉµisListLikeIterable, ChangeDetectorStatus as ÉµChangeDetectorStatus, isDefaultChangeDetectionStrategy as ÉµisDefaultChangeDetectionStrategy, Console as ÉµConsole, setCurrentInjector as ÉµsetCurrentInjector, getInjectableDef as ÉµgetInjectableDef, APP_ROOT as ÉµAPP_ROOT, ivyEnabled as ÉµivyEnabled, CodegenComponentFactoryResolver as ÉµCodegenComponentFactoryResolver, clearResolutionOfComponentResourcesQueue as ÉµclearResolutionOfComponentResourcesQueue, resolveComponentResources as ÉµresolveComponentResources, ReflectionCapabilities as ÉµReflectionCapabilities, RenderDebugInfo as ÉµRenderDebugInfo, _sanitizeHtml as Éµ_sanitizeHtml, _sanitizeStyle as Éµ_sanitizeStyle, _sanitizeUrl as Éµ_sanitizeUrl, _global as Éµglobal, looseIdentical as ÉµlooseIdentical, stringify as Éµstringify, makeDecorator as ÉµmakeDecorator, isObservable as ÉµisObservable, isPromise as ÉµisPromise, clearOverrides as ÉµclearOverrides, initServicesIfNeeded as ÉµinitServicesIfNeeded, overrideComponentView as ÉµoverrideComponentView, overrideProvider as ÉµoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, getLocalePluralCase as ÉµgetLocalePluralCase, findLocaleData as ÉµfindLocaleData, LOCALE_DATA as ÉµLOCALE_DATA, LocaleDataIndex as ÉµLocaleDataIndex, ÉµÉµattribute, ÉµÉµattributeInterpolate1, ÉµÉµattributeInterpolate2, ÉµÉµattributeInterpolate3, ÉµÉµattributeInterpolate4, ÉµÉµattributeInterpolate5, ÉµÉµattributeInterpolate6, ÉµÉµattributeInterpolate7, ÉµÉµattributeInterpolate8, ÉµÉµattributeInterpolateV, ÉµÉµdefineBase, ÉµÉµdefineComponent, ÉµÉµdefineDirective, ÉµÉµdefinePipe, ÉµÉµdefineNgModule, detectChanges as ÉµdetectChanges, renderComponent as ÉµrenderComponent, ComponentFactory$1 as ÉµRender3ComponentFactory, ComponentRef$1 as ÉµRender3ComponentRef, ÉµÉµdirectiveInject, ÉµÉµinjectAttribute, ÉµÉµinjectPipeChangeDetectorRef, ÉµÉµgetFactoryOf, ÉµÉµgetInheritedFactory, ÉµÉµsetComponentScope, ÉµÉµsetNgModuleScope, ÉµÉµtemplateRefExtractor, ÉµÉµProvidersFeature, ÉµÉµInheritDefinitionFeature, ÉµÉµNgOnChangesFeature, LifecycleHooksFeature as ÉµLifecycleHooksFeature, NgModuleRef$1 as ÉµRender3NgModuleRef, markDirty as ÉµmarkDirty, NgModuleFactory$1 as ÉµNgModuleFactory, NO_CHANGE as ÉµNO_CHANGE, ÉµÉµcontainer, ÉµÉµnextContext, ÉµÉµelementStart, ÉµÉµnamespaceHTML, ÉµÉµnamespaceMathML, ÉµÉµnamespaceSVG, ÉµÉµelement, ÉµÉµlistener, ÉµÉµtext, ÉµÉµtextInterpolate, ÉµÉµtextInterpolate1, ÉµÉµtextInterpolate2, ÉµÉµtextInterpolate3, ÉµÉµtextInterpolate4, ÉµÉµtextInterpolate5, ÉµÉµtextInterpolate6, ÉµÉµtextInterpolate7, ÉµÉµtextInterpolate8, ÉµÉµtextInterpolateV, ÉµÉµembeddedViewStart, ÉµÉµprojection, ÉµÉµpipeBind1, ÉµÉµpipeBind2, ÉµÉµpipeBind3, ÉµÉµpipeBind4, ÉµÉµpipeBindV, ÉµÉµpureFunction0, ÉµÉµpureFunction1, ÉµÉµpureFunction2, ÉµÉµpureFunction3, ÉµÉµpureFunction4, ÉµÉµpureFunction5, ÉµÉµpureFunction6, ÉµÉµpureFunction7, ÉµÉµpureFunction8, ÉµÉµpureFunctionV, ÉµÉµgetCurrentView, getDirectives as ÉµgetDirectives, getHostElement as ÉµgetHostElement, ÉµÉµrestoreView, ÉµÉµcontainerRefreshStart, ÉµÉµcontainerRefreshEnd, ÉµÉµqueryRefresh, ÉµÉµviewQuery, ÉµÉµstaticViewQuery, ÉµÉµstaticContentQuery, ÉµÉµloadViewQuery, ÉµÉµcontentQuery, ÉµÉµloadContentQuery, ÉµÉµelementEnd, ÉµÉµhostProperty, ÉµÉµproperty, ÉµÉµpropertyInterpolate, ÉµÉµpropertyInterpolate1, ÉµÉµpropertyInterpolate2, ÉµÉµpropertyInterpolate3, ÉµÉµpropertyInterpolate4, ÉµÉµpropertyInterpolate5, ÉµÉµpropertyInterpolate6, ÉµÉµpropertyInterpolate7, ÉµÉµpropertyInterpolate8, ÉµÉµpropertyInterpolateV, ÉµÉµupdateSyntheticHostBinding, ÉµÉµcomponentHostSyntheticListener, ÉµÉµprojectionDef, ÉµÉµreference, ÉµÉµenableBindings, ÉµÉµdisableBindings, ÉµÉµallocHostVars, ÉµÉµelementContainerStart, ÉµÉµelementContainerEnd, ÉµÉµelementContainer, ÉµÉµstyling, ÉµÉµstyleMap, ÉµÉµstyleSanitizer, ÉµÉµclassMap, ÉµÉµclassMapInterpolate1, ÉµÉµclassMapInterpolate2, ÉµÉµclassMapInterpolate3, ÉµÉµclassMapInterpolate4, ÉµÉµclassMapInterpolate5, ÉµÉµclassMapInterpolate6, ÉµÉµclassMapInterpolate7, ÉµÉµclassMapInterpolate8, ÉµÉµclassMapInterpolateV, ÉµÉµstyleProp, ÉµÉµstylePropInterpolate1, ÉµÉµstylePropInterpolate2, ÉµÉµstylePropInterpolate3, ÉµÉµstylePropInterpolate4, ÉµÉµstylePropInterpolate5, ÉµÉµstylePropInterpolate6, ÉµÉµstylePropInterpolate7, ÉµÉµstylePropInterpolate8, ÉµÉµstylePropInterpolateV, ÉµÉµstylingApply, ÉµÉµclassProp, ÉµÉµelementHostAttrs, ÉµÉµselect, ÉµÉµtextBinding, ÉµÉµtemplate, ÉµÉµembeddedViewEnd, store as Éµstore, ÉµÉµload, ÉµÉµpipe, whenRendered as ÉµwhenRendered, ÉµÉµi18n, ÉµÉµi18nAttributes, ÉµÉµi18nExp, ÉµÉµi18nStart, ÉµÉµi18nEnd, ÉµÉµi18nApply, ÉµÉµi18nPostprocess, i18nConfigureLocalize as Éµi18nConfigureLocalize, ÉµÉµi18nLocalize, setLocaleId as ÉµsetLocaleId, DEFAULT_LOCALE_ID as ÉµDEFAULT_LOCALE_ID, setClassMetadata as ÉµsetClassMetadata, ÉµÉµresolveWindow, ÉµÉµresolveDocument, ÉµÉµresolveBody, compileComponent as ÉµcompileComponent, compileDirective as ÉµcompileDirective, compileNgModule as ÉµcompileNgModule, compileNgModuleDefs as ÉµcompileNgModuleDefs, patchComponentDefWithScope as ÉµpatchComponentDefWithScope, resetCompiledComponents as ÉµresetCompiledComponents, flushModuleScopingQueueAsMuchAsPossible as ÉµflushModuleScopingQueueAsMuchAsPossible, transitiveScopesFor as ÉµtransitiveScopesFor, compilePipe as ÉµcompilePipe, ÉµÉµsanitizeHtml, ÉµÉµsanitizeStyle, ÉµÉµdefaultStyleSanitizer, ÉµÉµsanitizeScript, ÉµÉµsanitizeUrl, ÉµÉµsanitizeResourceUrl, ÉµÉµsanitizeUrlOrResourceUrl, bypassSanitizationTrustHtml as ÉµbypassSanitizationTrustHtml, bypassSanitizationTrustStyle as ÉµbypassSanitizationTrustStyle, bypassSanitizationTrustScript as ÉµbypassSanitizationTrustScript, bypassSanitizationTrustUrl as ÉµbypassSanitizationTrustUrl, bypassSanitizationTrustResourceUrl as ÉµbypassSanitizationTrustResourceUrl, getLContext as ÉµgetLContext, NG_ELEMENT_ID as ÉµNG_ELEMENT_ID, NG_COMPONENT_DEF as ÉµNG_COMPONENT_DEF, NG_DIRECTIVE_DEF as ÉµNG_DIRECTIVE_DEF, NG_PIPE_DEF as ÉµNG_PIPE_DEF, NG_MODULE_DEF as ÉµNG_MODULE_DEF, NG_BASE_DEF as ÉµNG_BASE_DEF, NG_INJECTABLE_DEF as ÉµNG_INJECTABLE_DEF, NG_INJECTOR_DEF as ÉµNG_INJECTOR_DEF, compileNgModuleFactory__POST_R3__ as ÉµcompileNgModuleFactory__POST_R3__, isBoundToModule__POST_R3__ as ÉµisBoundToModule__POST_R3__, SWITCH_COMPILE_COMPONENT__POST_R3__ as ÉµSWITCH_COMPILE_COMPONENT__POST_R3__, SWITCH_COMPILE_DIRECTIVE__POST_R3__ as ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__, SWITCH_COMPILE_PIPE__POST_R3__ as ÉµSWITCH_COMPILE_PIPE__POST_R3__, SWITCH_COMPILE_NGMODULE__POST_R3__ as ÉµSWITCH_COMPILE_NGMODULE__POST_R3__, getDebugNode__POST_R3__ as ÉµgetDebugNode__POST_R3__, SWITCH_COMPILE_INJECTABLE__POST_R3__ as ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__, SWITCH_IVY_ENABLED__POST_R3__ as ÉµSWITCH_IVY_ENABLED__POST_R3__, SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ as ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, Compiler_compileModuleSync__POST_R3__ as ÉµCompiler_compileModuleSync__POST_R3__, Compiler_compileModuleAsync__POST_R3__ as ÉµCompiler_compileModuleAsync__POST_R3__, Compiler_compileModuleAndAllComponentsSync__POST_R3__ as ÉµCompiler_compileModuleAndAllComponentsSync__POST_R3__, Compiler_compileModuleAndAllComponentsAsync__POST_R3__ as ÉµCompiler_compileModuleAndAllComponentsAsync__POST_R3__, SWITCH_ELEMENT_REF_FACTORY__POST_R3__ as ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__, SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ as ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ as ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, SWITCH_RENDERER2_FACTORY__POST_R3__ as ÉµSWITCH_RENDERER2_FACTORY__POST_R3__, getModuleFactory__POST_R3__ as ÉµgetModuleFactory__POST_R3__, registerNgModuleType as ÉµregisterNgModuleType, publishGlobalUtil as ÉµpublishGlobalUtil, publishDefaultGlobalUtils as ÉµpublishDefaultGlobalUtils, createInjector as ÉµcreateInjector, INJECTOR_IMPL__POST_R3__ as ÉµINJECTOR_IMPL__POST_R3__, registerModuleFactory as ÉµregisterModuleFactory, EMPTY_ARRAY$3 as ÉµEMPTY_ARRAY, EMPTY_MAP as ÉµEMPTY_MAP, anchorDef as Éµand, createComponentFactory as Éµccf, createNgModuleFactory as Éµcmf, createRendererType2 as Éµcrt, directiveDef as Éµdid, elementDef as Éµeld, getComponentViewDefinitionFactory as ÉµgetComponentViewDefinitionFactory, inlineInterpolate as ÉµinlineInterpolate, interpolate as Éµinterpolate, moduleDef as Éµmod, moduleProvideDef as Éµmpd, ngContentDef as Éµncd, nodeValue as Éµnov, pipeDef as Éµpid, providerDef as Éµprd, pureArrayDef as Éµpad, pureObjectDef as Éµpod, purePipeDef as Éµppd, queryDef as Éµqud, textDef as Éµted, unwrapValue as Éµunv, viewDef as Éµvid };\n//# sourceMappingURL=core.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductAlertsComponent } from './product-alerts/product-alerts.component';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: ProductListComponent },\r\n      { path: 'products/:productId', component: ProductDetailsComponent },\r\n    ])\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    ProductListComponent,\r\n    ProductAlertsComponent,\r\n    ProductDetailsComponent\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.css' ]\r\n})\r\nexport class AppComponent  {}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","/**\n * @license Angular v8.2.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, Injectable, EventEmitter, Optional, Inject, ÉµfindLocaleData, ÉµLocaleDataIndex, ÉµgetLocalePluralCase, LOCALE_ID, ÉµLOCALE_DATA, ÉµisListLikeIterable, Éµstringify, IterableDiffers, KeyValueDiffers, ElementRef, Renderer2, ÉµÉµdefineDirective, Input, Directive, ÉµÉµallocHostVars, ÉµÉµstyling, ÉµÉµclassMap, ÉµÉµstylingApply, NgModuleRef, ComponentFactoryResolver, Type, Injector, NgModuleFactory, ViewContainerRef, isDevMode, TemplateRef, Host, Attribute, ÉµÉµstyleMap, Pipe, ÉµlooseIdentical, WrappedValue, ÉµisPromise, ÉµisObservable, ChangeDetectorRef, NgModule, Version, ÉµÉµdefineInjectable, ÉµÉµinject, ErrorHandler } from '@angular/core';\nimport { __decorate, __metadata, __extends, __param, __read, __values, __assign } from 'tslib';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n * @publicApi\n */\nvar PlatformLocation = /** @class */ (function () {\n    function PlatformLocation() {\n    }\n    return PlatformLocation;\n}());\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nvar LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the `Location` service to read route state from the browser's URL.\n * Angular provides two strategies:\n * `HashLocationStrategy` and `PathLocationStrategy`.\n *\n * Applications should use the `Router` or `Location` services to\n * interact with application route state.\n *\n * For instance, `HashLocationStrategy` produces URLs like\n * <code class=\"no-auto-link\">http://example.com#/foo</code>,\n * and `PathLocationStrategy` produces\n * <code class=\"no-auto-link\">http://example.com/foo</code> as an equivalent URL.\n *\n * See these two classes for more.\n *\n * @publicApi\n */\nvar LocationStrategy = /** @class */ (function () {\n    function LocationStrategy() {\n    }\n    return LocationStrategy;\n}());\n/**\n * A predefined [DI token](guide/glossary#di-token) for the base href\n * to be used with the `PathLocationStrategy`.\n * The base href is the URL prefix that should be preserved when generating\n * and recognizing URLs.\n *\n * @usageNotes\n *\n * The following example shows how to use this token to configure the root app injector\n * with a base href value, so that the DI framework can supply the dependency anywhere in the app.\n *\n * ```typescript\n * import {Component, NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @publicApi\n */\nvar APP_BASE_HREF = new InjectionToken('appBaseHref');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on the `LocationStrategy` used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * @usageNotes\n *\n * It's better to use the {@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * <code-example path='common/location/ts/path_location_component.ts'\n * region='LocationComponent'></code-example>\n *\n * @publicApi\n */\nvar Location = /** @class */ (function () {\n    function Location(platformStrategy, platformLocation) {\n        var _this = this;\n        /** @internal */\n        this._subject = new EventEmitter();\n        /** @internal */\n        this._urlChangeListeners = [];\n        this._platformStrategy = platformStrategy;\n        var browserBaseHref = this._platformStrategy.getBaseHref();\n        this._platformLocation = platformLocation;\n        this._baseHref = Location_1.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState(function (ev) {\n            _this._subject.emit({\n                'url': _this.path(true),\n                'pop': true,\n                'state': ev.state,\n                'type': ev.type,\n            });\n        });\n    }\n    Location_1 = Location;\n    /**\n     * Returns the normalized URL path.\n     *\n     * @param includeHash Whether path has an anchor fragment.\n     *\n     * @returns The normalized URL path.\n     */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    Location.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        return this.normalize(this._platformStrategy.path(includeHash));\n    };\n    /**\n     * Returns the current value of the history.state object.\n     */\n    Location.prototype.getState = function () { return this._platformLocation.getState(); };\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     *\n     * @param path The given URL path\n     * @param query Query parameters\n     *\n     * @returns `true` if the given URL path is equal to the current normalized path, `false`\n     * otherwise.\n     */\n    Location.prototype.isCurrentPathEqualTo = function (path, query) {\n        if (query === void 0) { query = ''; }\n        return this.path() == this.normalize(path + Location_1.normalizeQueryParams(query));\n    };\n    /**\n     * Given a string representing a URL, returns the URL path after stripping the\n     * trailing slashes.\n     *\n     * @param url String representing a URL.\n     *\n     * @returns Normalized URL string.\n     */\n    Location.prototype.normalize = function (url) {\n        return Location_1.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    };\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method also adds a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     *\n     *\n     * @param url String representing a URL.\n     *\n     * @returns  A normalized platform-specific URL.\n     */\n    Location.prototype.prepareExternalUrl = function (url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    };\n    // TODO: rename this method to pushState\n    /**\n     * Changes the browsers URL to a normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     *\n     * @param path  URL path to normalizze\n     * @param query Query parameters\n     * @param state Location history state\n     *\n     */\n    Location.prototype.go = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.pushState(state, '', path, query);\n        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + Location_1.normalizeQueryParams(query)), state);\n    };\n    /**\n     * Changes the browser's URL to a normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     *\n     * @param path  URL path to normalizze\n     * @param query Query parameters\n     * @param state Location history state\n     */\n    Location.prototype.replaceState = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.replaceState(state, '', path, query);\n        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + Location_1.normalizeQueryParams(query)), state);\n    };\n    /**\n     * Navigates forward in the platform's history.\n     */\n    Location.prototype.forward = function () { this._platformStrategy.forward(); };\n    /**\n     * Navigates back in the platform's history.\n     */\n    Location.prototype.back = function () { this._platformStrategy.back(); };\n    /**\n     * Register URL change listeners. This API can be used to catch updates performed by the Angular\n     * framework. These are not detectible through \"popstate\" or \"hashchange\" events.\n     */\n    Location.prototype.onUrlChange = function (fn) {\n        var _this = this;\n        this._urlChangeListeners.push(fn);\n        this.subscribe(function (v) { _this._notifyUrlChangeListeners(v.url, v.state); });\n    };\n    /** @internal */\n    Location.prototype._notifyUrlChangeListeners = function (url, state) {\n        if (url === void 0) { url = ''; }\n        this._urlChangeListeners.forEach(function (fn) { return fn(url, state); });\n    };\n    /**\n     * Subscribe to the platform's `popState` events.\n     *\n     * @param value Event that is triggered when the state history changes.\n     * @param exception The exception to throw.\n     *\n     * @returns Subscribed events.\n     */\n    Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    };\n    /**\n     * Given a string of url parameters, prepend with `?` if needed, otherwise return the\n     * parameters as is.\n     *\n     *  @param  params String of URL parameters\n     *\n     *  @returns URL parameters prepended with `?` or the parameters as is.\n     */\n    Location.normalizeQueryParams = function (params) {\n        return params && params[0] !== '?' ? '?' + params : params;\n    };\n    /**\n     * Given 2 parts of a URL, join them with a slash if needed.\n     *\n     * @param start  URL string\n     * @param end    URL string\n     *\n     *\n     * @returns Given URL strings joined with a slash, if needed.\n     */\n    Location.joinWithSlash = function (start, end) {\n        if (start.length == 0) {\n            return end;\n        }\n        if (end.length == 0) {\n            return start;\n        }\n        var slashes = 0;\n        if (start.endsWith('/')) {\n            slashes++;\n        }\n        if (end.startsWith('/')) {\n            slashes++;\n        }\n        if (slashes == 2) {\n            return start + end.substring(1);\n        }\n        if (slashes == 1) {\n            return start + end;\n        }\n        return start + '/' + end;\n    };\n    /**\n     * If URL has a trailing slash, remove it, otherwise return the URL as is. The\n     * method looks for the first occurrence of either `#`, `?`, or the end of the\n     * line as `/` characters and removes the trailing slash if one exists.\n     *\n     * @param url URL string\n     *\n     * @returns Returns a URL string after removing the trailing slash if one exists, otherwise\n     * returns the string as is.\n     */\n    Location.stripTrailingSlash = function (url) {\n        var match = url.match(/#|\\?|$/);\n        var pathEndIdx = match && match.index || url.length;\n        var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n        return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n    };\n    var Location_1;\n    Location = Location_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [LocationStrategy, PlatformLocation])\n    ], Location);\n    return Location;\n}());\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar HashLocationStrategy = /** @class */ (function (_super) {\n    __extends(HashLocationStrategy, _super);\n    function HashLocationStrategy(_platformLocation, _baseHref) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        _this._baseHref = '';\n        if (_baseHref != null) {\n            _this._baseHref = _baseHref;\n        }\n        return _this;\n    }\n    HashLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    HashLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        // the hash value is always prefixed with a `#`\n        // and if it is empty then it will stay empty\n        var path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    };\n    HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        var url = Location.joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    };\n    HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    };\n    HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    };\n    HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    HashLocationStrategy = __decorate([\n        Injectable(),\n        __param(1, Optional()), __param(1, Inject(APP_BASE_HREF)),\n        __metadata(\"design:paramtypes\", [PlatformLocation, String])\n    ], HashLocationStrategy);\n    return HashLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar PathLocationStrategy = /** @class */ (function (_super) {\n    __extends(PathLocationStrategy, _super);\n    function PathLocationStrategy(_platformLocation, href) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = _this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n        }\n        _this._baseHref = href;\n        return _this;\n    }\n    PathLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        return Location.joinWithSlash(this._baseHref, internal);\n    };\n    PathLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        var pathname = this._platformLocation.pathname +\n            Location.normalizeQueryParams(this._platformLocation.search);\n        var hash = this._platformLocation.hash;\n        return hash && includeHash ? \"\" + pathname + hash : pathname;\n    };\n    PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    PathLocationStrategy = __decorate([\n        Injectable(),\n        __param(1, Optional()), __param(1, Inject(APP_BASE_HREF)),\n        __metadata(\"design:paramtypes\", [PlatformLocation, String])\n    ], PathLocationStrategy);\n    return PathLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @internal */\nvar CURRENCIES_EN = {\n    'ADP': [undefined, undefined, 0],\n    'AFN': [undefined, undefined, 0],\n    'ALL': [undefined, undefined, 0],\n    'AMD': [undefined, undefined, 0],\n    'AOA': [undefined, 'Kz'],\n    'ARS': [undefined, '$'],\n    'AUD': ['A$', '$'],\n    'BAM': [undefined, 'KM'],\n    'BBD': [undefined, '$'],\n    'BDT': [undefined, 'à§³'],\n    'BHD': [undefined, undefined, 3],\n    'BIF': [undefined, undefined, 0],\n    'BMD': [undefined, '$'],\n    'BND': [undefined, '$'],\n    'BOB': [undefined, 'Bs'],\n    'BRL': ['R$'],\n    'BSD': [undefined, '$'],\n    'BWP': [undefined, 'P'],\n    'BYN': [undefined, 'Ñ.', 2],\n    'BYR': [undefined, undefined, 0],\n    'BZD': [undefined, '$'],\n    'CAD': ['CA$', '$', 2],\n    'CHF': [undefined, undefined, 2],\n    'CLF': [undefined, undefined, 4],\n    'CLP': [undefined, '$', 0],\n    'CNY': ['CNÂ¥', 'Â¥'],\n    'COP': [undefined, '$', 0],\n    'CRC': [undefined, 'â¡', 2],\n    'CUC': [undefined, '$'],\n    'CUP': [undefined, '$'],\n    'CZK': [undefined, 'KÄ', 2],\n    'DJF': [undefined, undefined, 0],\n    'DKK': [undefined, 'kr', 2],\n    'DOP': [undefined, '$'],\n    'EGP': [undefined, 'EÂ£'],\n    'ESP': [undefined, 'â§', 0],\n    'EUR': ['â¬'],\n    'FJD': [undefined, '$'],\n    'FKP': [undefined, 'Â£'],\n    'GBP': ['Â£'],\n    'GEL': [undefined, 'â¾'],\n    'GIP': [undefined, 'Â£'],\n    'GNF': [undefined, 'FG', 0],\n    'GTQ': [undefined, 'Q'],\n    'GYD': [undefined, '$', 0],\n    'HKD': ['HK$', '$'],\n    'HNL': [undefined, 'L'],\n    'HRK': [undefined, 'kn'],\n    'HUF': [undefined, 'Ft', 2],\n    'IDR': [undefined, 'Rp', 0],\n    'ILS': ['âª'],\n    'INR': ['â¹'],\n    'IQD': [undefined, undefined, 0],\n    'IRR': [undefined, undefined, 0],\n    'ISK': [undefined, 'kr', 0],\n    'ITL': [undefined, undefined, 0],\n    'JMD': [undefined, '$'],\n    'JOD': [undefined, undefined, 3],\n    'JPY': ['Â¥', undefined, 0],\n    'KHR': [undefined, 'á'],\n    'KMF': [undefined, 'CF', 0],\n    'KPW': [undefined, 'â©', 0],\n    'KRW': ['â©', undefined, 0],\n    'KWD': [undefined, undefined, 3],\n    'KYD': [undefined, '$'],\n    'KZT': [undefined, 'â¸'],\n    'LAK': [undefined, 'â­', 0],\n    'LBP': [undefined, 'LÂ£', 0],\n    'LKR': [undefined, 'Rs'],\n    'LRD': [undefined, '$'],\n    'LTL': [undefined, 'Lt'],\n    'LUF': [undefined, undefined, 0],\n    'LVL': [undefined, 'Ls'],\n    'LYD': [undefined, undefined, 3],\n    'MGA': [undefined, 'Ar', 0],\n    'MGF': [undefined, undefined, 0],\n    'MMK': [undefined, 'K', 0],\n    'MNT': [undefined, 'â®', 0],\n    'MRO': [undefined, undefined, 0],\n    'MUR': [undefined, 'Rs', 0],\n    'MXN': ['MX$', '$'],\n    'MYR': [undefined, 'RM'],\n    'NAD': [undefined, '$'],\n    'NGN': [undefined, 'â¦'],\n    'NIO': [undefined, 'C$'],\n    'NOK': [undefined, 'kr', 2],\n    'NPR': [undefined, 'Rs'],\n    'NZD': ['NZ$', '$'],\n    'OMR': [undefined, undefined, 3],\n    'PHP': [undefined, 'â±'],\n    'PKR': [undefined, 'Rs', 0],\n    'PLN': [undefined, 'zÅ'],\n    'PYG': [undefined, 'â²', 0],\n    'RON': [undefined, 'lei'],\n    'RSD': [undefined, undefined, 0],\n    'RUB': [undefined, 'â½'],\n    'RUR': [undefined, 'Ñ.'],\n    'RWF': [undefined, 'RF', 0],\n    'SBD': [undefined, '$'],\n    'SEK': [undefined, 'kr', 2],\n    'SGD': [undefined, '$'],\n    'SHP': [undefined, 'Â£'],\n    'SLL': [undefined, undefined, 0],\n    'SOS': [undefined, undefined, 0],\n    'SRD': [undefined, '$'],\n    'SSP': [undefined, 'Â£'],\n    'STD': [undefined, undefined, 0],\n    'STN': [undefined, 'Db'],\n    'SYP': [undefined, 'Â£', 0],\n    'THB': [undefined, 'à¸¿'],\n    'TMM': [undefined, undefined, 0],\n    'TND': [undefined, undefined, 3],\n    'TOP': [undefined, 'T$'],\n    'TRL': [undefined, undefined, 0],\n    'TRY': [undefined, 'âº'],\n    'TTD': [undefined, '$'],\n    'TWD': ['NT$', '$', 2],\n    'TZS': [undefined, undefined, 0],\n    'UAH': [undefined, 'â´'],\n    'UGX': [undefined, undefined, 0],\n    'USD': ['$'],\n    'UYI': [undefined, undefined, 0],\n    'UYU': [undefined, '$'],\n    'UZS': [undefined, undefined, 0],\n    'VEF': [undefined, 'Bs'],\n    'VND': ['â«', undefined, 0],\n    'VUV': [undefined, undefined, 0],\n    'XAF': ['FCFA', undefined, 0],\n    'XCD': ['EC$', '$'],\n    'XOF': ['CFA', undefined, 0],\n    'XPF': ['CFPF', undefined, 0],\n    'YER': [undefined, undefined, 0],\n    'ZAR': [undefined, 'R'],\n    'ZMK': [undefined, undefined, 0],\n    'ZMW': [undefined, 'ZK'],\n    'ZWD': [undefined, undefined, 0]\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Format styles that can be used to represent numbers.\n * @see `getLocaleNumberFormat()`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar NumberFormatStyle;\n(function (NumberFormatStyle) {\n    NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\n})(NumberFormatStyle || (NumberFormatStyle = {}));\n/**\n * Plurality cases used for translating plurals to different languages.\n *\n * @see `NgPlural`\n * @see `NgPluralCase`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar Plural;\n(function (Plural) {\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n    Plural[Plural[\"One\"] = 1] = \"One\";\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(Plural || (Plural = {}));\n/**\n * Context-dependant translation forms for strings.\n * Typically the standalone version is for the nominative form of the word,\n * and the format version is used for the genitive case.\n * @see [CLDR website](http://cldr.unicode.org/translation/date-time#TOC-Stand-Alone-vs.-Format-Styles)\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar FormStyle;\n(function (FormStyle) {\n    FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\n    FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\n})(FormStyle || (FormStyle = {}));\n/**\n * String widths available for translations.\n * The specific character widths are locale-specific.\n * Examples are given for the word \"Sunday\" in English.\n *\n * @publicApi\n */\nvar TranslationWidth;\n(function (TranslationWidth) {\n    /** 1 character for `en-US`. For example: 'S' */\n    TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\n    /** 3 characters for `en-US`. For example: 'Sun' */\n    TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\n    /** Full length for `en-US`. For example: \"Sunday\" */\n    TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\n    /** 2 characters for `en-US`, For example: \"Su\" */\n    TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\n})(TranslationWidth || (TranslationWidth = {}));\n/**\n * String widths available for date-time formats.\n * The specific character widths are locale-specific.\n * Examples are given for `en-US`.\n *\n * @see `getLocaleDateFormat()`\n * @see `getLocaleTimeFormat()``\n * @see `getLocaleDateTimeFormat()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n * @publicApi\n */\nvar FormatWidth;\n(function (FormatWidth) {\n    /**\n     * For `en-US`, 'M/d/yy, h:mm a'`\n     * (Example: `6/15/15, 9:03 AM`)\n     */\n    FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\n    /**\n     * For `en-US`, `'MMM d, y, h:mm:ss a'`\n     * (Example: `Jun 15, 2015, 9:03:01 AM`)\n     */\n    FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\n    /**\n     * For `en-US`, `'MMMM d, y, h:mm:ss a z'`\n     * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)\n     */\n    FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\n    /**\n     * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`\n     * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)\n     */\n    FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\n})(FormatWidth || (FormatWidth = {}));\n/**\n * Symbols that can be used to replace placeholders in number patterns.\n * Examples are based on `en-US` values.\n *\n * @see `getLocaleNumberSymbol()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar NumberSymbol;\n(function (NumberSymbol) {\n    /**\n     * Decimal separator.\n     * For `en-US`, the dot character.\n     * Example : 2,345`.`67\n     */\n    NumberSymbol[NumberSymbol[\"Decimal\"] = 0] = \"Decimal\";\n    /**\n     * Grouping separator, typically for thousands.\n     * For `en-US`, the comma character.\n     * Example: 2`,`345.67\n     */\n    NumberSymbol[NumberSymbol[\"Group\"] = 1] = \"Group\";\n    /**\n     * List-item separator.\n     * Example: \"one, two, and three\"\n     */\n    NumberSymbol[NumberSymbol[\"List\"] = 2] = \"List\";\n    /**\n     * Sign for percentage (out of 100).\n     * Example: 23.4%\n     */\n    NumberSymbol[NumberSymbol[\"PercentSign\"] = 3] = \"PercentSign\";\n    /**\n     * Sign for positive numbers.\n     * Example: +23\n     */\n    NumberSymbol[NumberSymbol[\"PlusSign\"] = 4] = \"PlusSign\";\n    /**\n     * Sign for negative numbers.\n     * Example: -23\n     */\n    NumberSymbol[NumberSymbol[\"MinusSign\"] = 5] = \"MinusSign\";\n    /**\n     * Computer notation for exponential value (n times a power of 10).\n     * Example: 1.2E3\n     */\n    NumberSymbol[NumberSymbol[\"Exponential\"] = 6] = \"Exponential\";\n    /**\n     * Human-readable format of exponential.\n     * Example: 1.2x103\n     */\n    NumberSymbol[NumberSymbol[\"SuperscriptingExponent\"] = 7] = \"SuperscriptingExponent\";\n    /**\n     * Sign for permille (out of 1000).\n     * Example: 23.4â°\n     */\n    NumberSymbol[NumberSymbol[\"PerMille\"] = 8] = \"PerMille\";\n    /**\n     * Infinity, can be used with plus and minus.\n     * Example: â, +â, -â\n     */\n    NumberSymbol[NumberSymbol[\"Infinity\"] = 9] = \"Infinity\";\n    /**\n     * Not a number.\n     * Example: NaN\n     */\n    NumberSymbol[NumberSymbol[\"NaN\"] = 10] = \"NaN\";\n    /**\n     * Symbol used between time units.\n     * Example: 10:52\n     */\n    NumberSymbol[NumberSymbol[\"TimeSeparator\"] = 11] = \"TimeSeparator\";\n    /**\n     * Decimal separator for currency values (fallback to `Decimal`).\n     * Example: $2,345.67\n     */\n    NumberSymbol[NumberSymbol[\"CurrencyDecimal\"] = 12] = \"CurrencyDecimal\";\n    /**\n     * Group separator for currency values (fallback to `Group`).\n     * Example: $2,345.67\n     */\n    NumberSymbol[NumberSymbol[\"CurrencyGroup\"] = 13] = \"CurrencyGroup\";\n})(NumberSymbol || (NumberSymbol = {}));\n/**\n * The value for each day of the week, based on the `en-US` locale\n *\n * @publicApi\n */\nvar WeekDay;\n(function (WeekDay) {\n    WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\n    WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\n    WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\n    WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\n    WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\n    WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\n    WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\n})(WeekDay || (WeekDay = {}));\n/**\n * Retrieves the locale ID from the currently loaded locale.\n * The loaded locale could be, for example, a global one rather than a regional one.\n * @param locale A locale code, such as `fr-FR`.\n * @returns The locale code. For example, `fr`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleId(locale) {\n    return ÉµfindLocaleData(locale)[ÉµLocaleDataIndex.LocaleId];\n}\n/**\n * Retrieves day period strings for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n    var data = ÉµfindLocaleData(locale);\n    var amPmData = [data[ÉµLocaleDataIndex.DayPeriodsFormat], data[ÉµLocaleDataIndex.DayPeriodsStandalone]];\n    var amPm = getLastDefinedValue(amPmData, formStyle);\n    return getLastDefinedValue(amPm, width);\n}\n/**\n * Retrieves days of the week for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n    var data = ÉµfindLocaleData(locale);\n    var daysData = [data[ÉµLocaleDataIndex.DaysFormat], data[ÉµLocaleDataIndex.DaysStandalone]];\n    var days = getLastDefinedValue(daysData, formStyle);\n    return getLastDefinedValue(days, width);\n}\n/**\n * Retrieves months of the year for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,  `[January, February, ...]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n    var data = ÉµfindLocaleData(locale);\n    var monthsData = [data[ÉµLocaleDataIndex.MonthsFormat], data[ÉµLocaleDataIndex.MonthsStandalone]];\n    var months = getLastDefinedValue(monthsData, formStyle);\n    return getLastDefinedValue(months, width);\n}\n/**\n * Retrieves Gregorian-calendar eras for the given locale.\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n\n * @returns An array of localized era strings.\n * For example, `[AD, BC]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleEraNames(locale, width) {\n    var data = ÉµfindLocaleData(locale);\n    var erasData = data[ÉµLocaleDataIndex.Eras];\n    return getLastDefinedValue(erasData, width);\n}\n/**\n * Retrieves the first day of the week for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns A day index number, using the 0-based week-day index for `en-US`\n * (Sunday = 0, Monday = 1, ...).\n * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n    var data = ÉµfindLocaleData(locale);\n    return data[ÉµLocaleDataIndex.FirstDayOfWeek];\n}\n/**\n * Range of week days that are considered the week-end for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The range of day values, `[startDay, endDay]`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleWeekEndRange(locale) {\n    var data = ÉµfindLocaleData(locale);\n    return data[ÉµLocaleDataIndex.WeekendRange];\n}\n/**\n * Retrieves a localized date-value formating string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formating string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDateFormat(locale, width) {\n    var data = ÉµfindLocaleData(locale);\n    return getLastDefinedValue(data[ÉµLocaleDataIndex.DateFormat], width);\n}\n/**\n * Retrieves a localized time-value formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n\n * @publicApi\n */\nfunction getLocaleTimeFormat(locale, width) {\n    var data = ÉµfindLocaleData(locale);\n    return getLastDefinedValue(data[ÉµLocaleDataIndex.TimeFormat], width);\n}\n/**\n * Retrieves a localized date-time formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n    var data = ÉµfindLocaleData(locale);\n    var dateTimeFormatData = data[ÉµLocaleDataIndex.DateTimeFormat];\n    return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Retrieves a localized number symbol that can be used to replace placeholders in number formats.\n * @param locale The locale code.\n * @param symbol The symbol to localize.\n * @returns The character for the localized symbol.\n * @see `NumberSymbol`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n    var data = ÉµfindLocaleData(locale);\n    var res = data[ÉµLocaleDataIndex.NumberSymbols][symbol];\n    if (typeof res === 'undefined') {\n        if (symbol === NumberSymbol.CurrencyDecimal) {\n            return data[ÉµLocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n        }\n        else if (symbol === NumberSymbol.CurrencyGroup) {\n            return data[ÉµLocaleDataIndex.NumberSymbols][NumberSymbol.Group];\n        }\n    }\n    return res;\n}\n/**\n * Retrieves a number format for a given locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,678\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders\n * that stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders. For example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the appropriate `NumberSymbol` for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | Â¤ | Replaced by a currency symbol, such as $ or USD. |\n * | % | Marks a percent format. The % symbol may change position, but must be retained. |\n * | E | Marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * @param locale A locale code for the locale format rules to use.\n * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)\n * @returns The localized format string.\n * @see `NumberFormatStyle`\n * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleNumberFormat(locale, type) {\n    var data = ÉµfindLocaleData(locale);\n    return data[ÉµLocaleDataIndex.NumberFormats][type];\n}\n/**\n * Retrieves the symbol used to represent the currency for the main country\n * corresponding to a given locale. For example, '$' for `en-US`.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The localized symbol character,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleCurrencySymbol(locale) {\n    var data = ÉµfindLocaleData(locale);\n    return data[ÉµLocaleDataIndex.CurrencySymbol] || null;\n}\n/**\n * Retrieves the name of the currency for the main country corresponding\n * to a given locale. For example, 'US Dollar' for `en-US`.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency name,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleCurrencyName(locale) {\n    var data = ÉµfindLocaleData(locale);\n    return data[ÉµLocaleDataIndex.CurrencyName] || null;\n}\n/**\n * Retrieves the currency values for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency values.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction getLocaleCurrencies(locale) {\n    var data = ÉµfindLocaleData(locale);\n    return data[ÉµLocaleDataIndex.Currencies];\n}\n/**\n * @alias core/ÉµgetLocalePluralCase\n * @publicApi\n */\nvar getLocalePluralCase = ÉµgetLocalePluralCase;\nfunction checkFullData(data) {\n    if (!data[ÉµLocaleDataIndex.ExtraData]) {\n        throw new Error(\"Missing extra locale data for the locale \\\"\" + data[ÉµLocaleDataIndex.LocaleId] + \"\\\". Use \\\"registerLocaleData\\\" to load new data. See the \\\"I18n guide\\\" on angular.io to know more.\");\n    }\n}\n/**\n * Retrieves locale-specific rules used to determine which day period to use\n * when more than one period is defined for a locale.\n *\n * There is a rule for each defined day period. The\n * first rule is applied to the first day period and so on.\n * Fall back to AM/PM when no rules are available.\n *\n * A rule can specify a period as time range, or as a single time value.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The rules for the locale, a single time value or array of *from-time, to-time*,\n * or null if no periods are available.\n *\n * @see `getLocaleExtraDayPeriods()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n    var data = ÉµfindLocaleData(locale);\n    checkFullData(data);\n    var rules = data[ÉµLocaleDataIndex.ExtraData][2 /* ExtraDayPeriodsRules */] || [];\n    return rules.map(function (rule) {\n        if (typeof rule === 'string') {\n            return extractTime(rule);\n        }\n        return [extractTime(rule[0]), extractTime(rule[1])];\n    });\n}\n/**\n * Retrieves locale-specific day periods, which indicate roughly how a day is broken up\n * in different languages.\n * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns The translated day-period strings.\n * @see `getLocaleExtraDayPeriodRules()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n    var data = ÉµfindLocaleData(locale);\n    checkFullData(data);\n    var dayPeriodsData = [\n        data[ÉµLocaleDataIndex.ExtraData][0 /* ExtraDayPeriodFormats */],\n        data[ÉµLocaleDataIndex.ExtraData][1 /* ExtraDayPeriodStandalone */]\n    ];\n    var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n    return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Retrieves the first value that is defined in an array, going backwards from an index position.\n *\n * To avoid repeating the same data (as when the \"format\" and \"standalone\" forms are the same)\n * add the first value to the locale data arrays, and add other values only if they are different.\n *\n * @param data The data array to retrieve from.\n * @param index A 0-based index into the array to start from.\n * @returns The value immediately before the given index position.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLastDefinedValue(data, index) {\n    for (var i = index; i > -1; i--) {\n        if (typeof data[i] !== 'undefined') {\n            return data[i];\n        }\n    }\n    throw new Error('Locale data API: locale data undefined');\n}\n/**\n * Extracts the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time) {\n    var _a = __read(time.split(':'), 2), h = _a[0], m = _a[1];\n    return { hours: +h, minutes: +m };\n}\n/**\n * Retrieves the currency symbol for a given currency code.\n *\n * For example, for the default `en-US` locale, the code `USD` can\n * be represented by the narrow symbol `$` or the wide symbol `US$`.\n *\n * @param code The currency code.\n * @param format The format, `wide` or `narrow`.\n * @param locale A locale code for the locale format rules to use.\n *\n * @returns The symbol, or the currency code if no symbol is available.0\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getCurrencySymbol(code, format, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n    var symbolNarrow = currency[1 /* SymbolNarrow */];\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\n        return symbolNarrow;\n    }\n    return currency[0 /* Symbol */] || code;\n}\n// Most currencies have cents, that's why the default is 2\nvar DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Reports the number of decimal digits for a given currency.\n * The value depends upon the presence of cents in that particular currency.\n *\n * @param code The currency code.\n * @returns The number of decimal digits, typically 0 or 2.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getNumberOfCurrencyDigits(code) {\n    var digits;\n    var currency = CURRENCIES_EN[code];\n    if (currency) {\n        digits = currency[2 /* NbOfDigits */];\n    }\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nvar NAMED_FORMATS = {};\nvar DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\nvar ZoneWidth;\n(function (ZoneWidth) {\n    ZoneWidth[ZoneWidth[\"Short\"] = 0] = \"Short\";\n    ZoneWidth[ZoneWidth[\"ShortGMT\"] = 1] = \"ShortGMT\";\n    ZoneWidth[ZoneWidth[\"Long\"] = 2] = \"Long\";\n    ZoneWidth[ZoneWidth[\"Extended\"] = 3] = \"Extended\";\n})(ZoneWidth || (ZoneWidth = {}));\nvar DateType;\n(function (DateType) {\n    DateType[DateType[\"FullYear\"] = 0] = \"FullYear\";\n    DateType[DateType[\"Month\"] = 1] = \"Month\";\n    DateType[DateType[\"Date\"] = 2] = \"Date\";\n    DateType[DateType[\"Hours\"] = 3] = \"Hours\";\n    DateType[DateType[\"Minutes\"] = 4] = \"Minutes\";\n    DateType[DateType[\"Seconds\"] = 5] = \"Seconds\";\n    DateType[DateType[\"FractionalSeconds\"] = 6] = \"FractionalSeconds\";\n    DateType[DateType[\"Day\"] = 7] = \"Day\";\n})(DateType || (DateType = {}));\nvar TranslationType;\n(function (TranslationType) {\n    TranslationType[TranslationType[\"DayPeriods\"] = 0] = \"DayPeriods\";\n    TranslationType[TranslationType[\"Days\"] = 1] = \"Days\";\n    TranslationType[TranslationType[\"Months\"] = 2] = \"Months\";\n    TranslationType[TranslationType[\"Eras\"] = 3] = \"Eras\";\n})(TranslationType || (TranslationType = {}));\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)\n * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).\n * @param format The date-time components to include. See `DatePipe` for details.\n * @param locale A locale code for the locale format rules to use.\n * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`),\n * or a standard UTC/GMT or continental US time zone abbreviation.\n * If not specified, uses host system settings.\n *\n * @returns The formatted date string.\n *\n * @see `DatePipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatDate(value, format, locale, timezone) {\n    var date = toDate(value);\n    var namedFormat = getNamedFormat(locale, format);\n    format = namedFormat || format;\n    var parts = [];\n    var match;\n    while (format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n            parts = parts.concat(match.slice(1));\n            var part = parts.pop();\n            if (!part) {\n                break;\n            }\n            format = part;\n        }\n        else {\n            parts.push(format);\n            break;\n        }\n    }\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n        date = convertTimezoneToLocal(date, timezone, true);\n    }\n    var text = '';\n    parts.forEach(function (value) {\n        var dateFormatter = getDateFormatter(value);\n        text += dateFormatter ?\n            dateFormatter(date, locale, dateTimezoneOffset) :\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n    return text;\n}\nfunction getNamedFormat(locale, format) {\n    var localeId = getLocaleId(locale);\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n    if (NAMED_FORMATS[localeId][format]) {\n        return NAMED_FORMATS[localeId][format];\n    }\n    var formatValue = '';\n    switch (format) {\n        case 'shortDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n            break;\n        case 'shortTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n            break;\n        case 'short':\n            var shortTime = getNamedFormat(locale, 'shortTime');\n            var shortDate = getNamedFormat(locale, 'shortDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n            break;\n        case 'medium':\n            var mediumTime = getNamedFormat(locale, 'mediumTime');\n            var mediumDate = getNamedFormat(locale, 'mediumDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n            break;\n        case 'long':\n            var longTime = getNamedFormat(locale, 'longTime');\n            var longDate = getNamedFormat(locale, 'longDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n            break;\n        case 'full':\n            var fullTime = getNamedFormat(locale, 'fullTime');\n            var fullDate = getNamedFormat(locale, 'fullDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n            break;\n    }\n    if (formatValue) {\n        NAMED_FORMATS[localeId][format] = formatValue;\n    }\n    return formatValue;\n}\nfunction formatDateTime(str, opt_values) {\n    if (opt_values) {\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n        });\n    }\n    return str;\n}\nfunction padNumber(num, digits, minusSign, trim, negWrap) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var neg = '';\n    if (num < 0 || (negWrap && num <= 0)) {\n        if (negWrap) {\n            num = -num + 1;\n        }\n        else {\n            num = -num;\n            neg = minusSign;\n        }\n    }\n    var strNum = String(num);\n    while (strNum.length < digits) {\n        strNum = '0' + strNum;\n    }\n    if (trim) {\n        strNum = strNum.substr(strNum.length - digits);\n    }\n    return neg + strNum;\n}\nfunction formatFractionalSeconds(milliseconds, digits) {\n    var strMs = padNumber(milliseconds, 3);\n    return strMs.substr(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(name, size, offset, trim, negWrap) {\n    if (offset === void 0) { offset = 0; }\n    if (trim === void 0) { trim = false; }\n    if (negWrap === void 0) { negWrap = false; }\n    return function (date, locale) {\n        var part = getDatePart(name, date);\n        if (offset > 0 || part > -offset) {\n            part += offset;\n        }\n        if (name === DateType.Hours) {\n            if (part === 0 && offset === -12) {\n                part = 12;\n            }\n        }\n        else if (name === DateType.FractionalSeconds) {\n            return formatFractionalSeconds(part, size);\n        }\n        var localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        return padNumber(part, size, localeMinus, trim, negWrap);\n    };\n}\nfunction getDatePart(part, date) {\n    switch (part) {\n        case DateType.FullYear:\n            return date.getFullYear();\n        case DateType.Month:\n            return date.getMonth();\n        case DateType.Date:\n            return date.getDate();\n        case DateType.Hours:\n            return date.getHours();\n        case DateType.Minutes:\n            return date.getMinutes();\n        case DateType.Seconds:\n            return date.getSeconds();\n        case DateType.FractionalSeconds:\n            return date.getMilliseconds();\n        case DateType.Day:\n            return date.getDay();\n        default:\n            throw new Error(\"Unknown DateType value \\\"\" + part + \"\\\".\");\n    }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(name, width, form, extended) {\n    if (form === void 0) { form = FormStyle.Format; }\n    if (extended === void 0) { extended = false; }\n    return function (date, locale) {\n        return getDateTranslation(date, locale, name, width, form, extended);\n    };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n    switch (name) {\n        case TranslationType.Months:\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n        case TranslationType.Days:\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\n        case TranslationType.DayPeriods:\n            var currentHours_1 = date.getHours();\n            var currentMinutes_1 = date.getMinutes();\n            if (extended) {\n                var rules = getLocaleExtraDayPeriodRules(locale);\n                var dayPeriods_1 = getLocaleExtraDayPeriods(locale, form, width);\n                var result_1;\n                rules.forEach(function (rule, index) {\n                    if (Array.isArray(rule)) {\n                        // morning, afternoon, evening, night\n                        var _a = rule[0], hoursFrom = _a.hours, minutesFrom = _a.minutes;\n                        var _b = rule[1], hoursTo = _b.hours, minutesTo = _b.minutes;\n                        if (currentHours_1 >= hoursFrom && currentMinutes_1 >= minutesFrom &&\n                            (currentHours_1 < hoursTo ||\n                                (currentHours_1 === hoursTo && currentMinutes_1 < minutesTo))) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                    else { // noon or midnight\n                        var hours = rule.hours, minutes = rule.minutes;\n                        if (hours === currentHours_1 && minutes === currentMinutes_1) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                });\n                if (result_1) {\n                    return result_1;\n                }\n            }\n            // if no rules for the day periods, we use am/pm by default\n            return getLocaleDayPeriods(locale, form, width)[currentHours_1 < 12 ? 0 : 1];\n        case TranslationType.Eras:\n            return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = name;\n            throw new Error(\"unexpected translation type \" + unexpected);\n    }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width) {\n    return function (date, locale, offset) {\n        var zone = -1 * offset;\n        var minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n        switch (width) {\n            case ZoneWidth.Short:\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.ShortGMT:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n            case ZoneWidth.Long:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.Extended:\n                if (offset === 0) {\n                    return 'Z';\n                }\n                else {\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\n                }\n            default:\n                throw new Error(\"Unknown zone width \\\"\" + width + \"\\\"\");\n        }\n    };\n}\nvar JANUARY = 0;\nvar THURSDAY = 4;\nfunction getFirstThursdayOfYear(year) {\n    var firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n    return new Date(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\nfunction weekGetter(size, monthBased) {\n    if (monthBased === void 0) { monthBased = false; }\n    return function (date, locale) {\n        var result;\n        if (monthBased) {\n            var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n            var today = date.getDate();\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n        }\n        else {\n            var firstThurs = getFirstThursdayOfYear(date.getFullYear());\n            var thisThurs = getThursdayThisWeek(date);\n            var diff = thisThurs.getTime() - firstThurs.getTime();\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n        }\n        return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    };\n}\nvar DATE_FORMATS = {};\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format) {\n    if (DATE_FORMATS[format]) {\n        return DATE_FORMATS[format];\n    }\n    var formatter;\n    switch (format) {\n        // Era name (AD/BC)\n        case 'G':\n        case 'GG':\n        case 'GGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n            break;\n        case 'GGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n            break;\n        case 'GGGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n            break;\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n        case 'y':\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n            break;\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yy':\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n            break;\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yyy':\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n            break;\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n        case 'yyyy':\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n            break;\n        // Month of the year (1-12), numeric\n        case 'M':\n        case 'L':\n            formatter = dateGetter(DateType.Month, 1, 1);\n            break;\n        case 'MM':\n        case 'LL':\n            formatter = dateGetter(DateType.Month, 2, 1);\n            break;\n        // Month of the year (January, ...), string, format\n        case 'MMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n            break;\n        case 'MMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n            break;\n        case 'MMMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n            break;\n        // Month of the year (January, ...), string, standalone\n        case 'LLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n            break;\n        case 'LLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n            break;\n        case 'LLLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n            break;\n        // Week of the year (1, ... 52)\n        case 'w':\n            formatter = weekGetter(1);\n            break;\n        case 'ww':\n            formatter = weekGetter(2);\n            break;\n        // Week of the month (1, ...)\n        case 'W':\n            formatter = weekGetter(1, true);\n            break;\n        // Day of the month (1-31)\n        case 'd':\n            formatter = dateGetter(DateType.Date, 1);\n            break;\n        case 'dd':\n            formatter = dateGetter(DateType.Date, 2);\n            break;\n        // Day of the Week\n        case 'E':\n        case 'EE':\n        case 'EEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n            break;\n        case 'EEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n            break;\n        case 'EEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n            break;\n        case 'EEEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n            break;\n        // Generic period of the day (am-pm)\n        case 'a':\n        case 'aa':\n        case 'aaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n            break;\n        case 'aaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n            break;\n        case 'aaaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n            break;\n        // Extended period of the day (midnight, at night, ...), standalone\n        case 'b':\n        case 'bb':\n        case 'bbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n            break;\n        case 'bbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n            break;\n        case 'bbbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n            break;\n        // Extended period of the day (midnight, night, ...), standalone\n        case 'B':\n        case 'BB':\n        case 'BBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n            break;\n        case 'BBBB':\n            formatter =\n                dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n            break;\n        case 'BBBBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n            break;\n        // Hour in AM/PM, (1-12)\n        case 'h':\n            formatter = dateGetter(DateType.Hours, 1, -12);\n            break;\n        case 'hh':\n            formatter = dateGetter(DateType.Hours, 2, -12);\n            break;\n        // Hour of the day (0-23)\n        case 'H':\n            formatter = dateGetter(DateType.Hours, 1);\n            break;\n        // Hour in day, padded (00-23)\n        case 'HH':\n            formatter = dateGetter(DateType.Hours, 2);\n            break;\n        // Minute of the hour (0-59)\n        case 'm':\n            formatter = dateGetter(DateType.Minutes, 1);\n            break;\n        case 'mm':\n            formatter = dateGetter(DateType.Minutes, 2);\n            break;\n        // Second of the minute (0-59)\n        case 's':\n            formatter = dateGetter(DateType.Seconds, 1);\n            break;\n        case 'ss':\n            formatter = dateGetter(DateType.Seconds, 2);\n            break;\n        // Fractional second\n        case 'S':\n            formatter = dateGetter(DateType.FractionalSeconds, 1);\n            break;\n        case 'SS':\n            formatter = dateGetter(DateType.FractionalSeconds, 2);\n            break;\n        case 'SSS':\n            formatter = dateGetter(DateType.FractionalSeconds, 3);\n            break;\n        // Timezone ISO8601 short format (-0430)\n        case 'Z':\n        case 'ZZ':\n        case 'ZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Short);\n            break;\n        // Timezone ISO8601 extended format (-04:30)\n        case 'ZZZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Extended);\n            break;\n        // Timezone GMT short format (GMT+4)\n        case 'O':\n        case 'OO':\n        case 'OOO':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'z':\n        case 'zz':\n        case 'zzz':\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n            break;\n        // Timezone GMT long format (GMT+0430)\n        case 'OOOO':\n        case 'ZZZZ':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'zzzz':\n            formatter = timeZoneGetter(ZoneWidth.Long);\n            break;\n        default:\n            return null;\n    }\n    DATE_FORMATS[format] = formatter;\n    return formatter;\n}\nfunction timezoneToOffset(timezone, fallback) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace(/:/g, '');\n    var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\nfunction addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n}\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n    var reverseValue = reverse ? -1 : 1;\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nfunction toDate(value) {\n    if (isDate(value)) {\n        return value;\n    }\n    if (typeof value === 'number' && !isNaN(value)) {\n        return new Date(value);\n    }\n    if (typeof value === 'string') {\n        value = value.trim();\n        var parsedNb = parseFloat(value);\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n        if (!isNaN(value - parsedNb)) {\n            return new Date(parsedNb);\n        }\n        if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n            before Date creation to avoid time offset and errors in the new Date.\n            If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n            date, some browsers (e.g. IE 9) will throw an invalid Date error.\n            If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n            is applied.\n            Note: ISO months are 0 for January, 1 for February, ... */\n            var _a = __read(value.split('-').map(function (val) { return +val; }), 3), y = _a[0], m = _a[1], d = _a[2];\n            return new Date(y, m - 1, d);\n        }\n        var match = void 0;\n        if (match = value.match(ISO8601_DATE_REGEX)) {\n            return isoStringToDate(match);\n        }\n    }\n    var date = new Date(value);\n    if (!isDate(date)) {\n        throw new Error(\"Unable to convert \\\"\" + value + \"\\\" into a date\");\n    }\n    return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nfunction isoStringToDate(match) {\n    var date = new Date(0);\n    var tzHour = 0;\n    var tzMin = 0;\n    // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n    var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    var timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\n    if (match[9]) {\n        tzHour = Number(match[9] + match[10]);\n        tzMin = Number(match[9] + match[11]);\n    }\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n    var h = Number(match[4] || 0) - tzHour;\n    var m = Number(match[5] || 0) - tzMin;\n    var s = Number(match[6] || 0);\n    var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nvar MAX_DIGITS = 22;\nvar DECIMAL_SEP = '.';\nvar ZERO_CHAR = '0';\nvar PATTERN_SEP = ';';\nvar GROUP_SEP = ',';\nvar DIGIT_CHAR = '#';\nvar CURRENCY_CHAR = 'Â¤';\nvar PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format.\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent) {\n    if (isPercent === void 0) { isPercent = false; }\n    var formattedText = '';\n    var isZero = false;\n    if (!isFinite(value)) {\n        formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n    }\n    else {\n        var parsedNumber = parseNumber(value);\n        if (isPercent) {\n            parsedNumber = toPercent(parsedNumber);\n        }\n        var minInt = pattern.minInt;\n        var minFraction = pattern.minFrac;\n        var maxFraction = pattern.maxFrac;\n        if (digitsInfo) {\n            var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digitsInfo + \" is not a valid digit info\");\n            }\n            var minIntPart = parts[1];\n            var minFractionPart = parts[3];\n            var maxFractionPart = parts[5];\n            if (minIntPart != null) {\n                minInt = parseIntAutoRadix(minIntPart);\n            }\n            if (minFractionPart != null) {\n                minFraction = parseIntAutoRadix(minFractionPart);\n            }\n            if (maxFractionPart != null) {\n                maxFraction = parseIntAutoRadix(maxFractionPart);\n            }\n            else if (minFractionPart != null && minFraction > maxFraction) {\n                maxFraction = minFraction;\n            }\n        }\n        roundNumber(parsedNumber, minFraction, maxFraction);\n        var digits = parsedNumber.digits;\n        var integerLen = parsedNumber.integerLen;\n        var exponent = parsedNumber.exponent;\n        var decimals = [];\n        isZero = digits.every(function (d) { return !d; });\n        // pad zeros for small numbers\n        for (; integerLen < minInt; integerLen++) {\n            digits.unshift(0);\n        }\n        // pad zeros for small numbers\n        for (; integerLen < 0; integerLen++) {\n            digits.unshift(0);\n        }\n        // extract decimals digits\n        if (integerLen > 0) {\n            decimals = digits.splice(integerLen, digits.length);\n        }\n        else {\n            decimals = digits;\n            digits = [0];\n        }\n        // format the integer digits with grouping separators\n        var groups = [];\n        if (digits.length >= pattern.lgSize) {\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n        }\n        while (digits.length > pattern.gSize) {\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n        }\n        if (digits.length) {\n            groups.unshift(digits.join(''));\n        }\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n        // append the decimal digits\n        if (decimals.length) {\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n        }\n        if (exponent) {\n            formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n        }\n    }\n    if (value < 0 && !isZero) {\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\n    }\n    else {\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\n    }\n    return formattedText;\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param currency A string containing the currency symbol or its name,\n * such as \"$\" or \"Canadian Dollar\". Used in output string, but does not affect the operation\n * of the function.\n * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n * currency code to use in the result string, such as `USD` for the US dollar and `EUR` for the euro.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted currency value.\n *\n * @see `formatNumber()`\n * @see `DecimalPipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);\n    pattern.maxFrac = pattern.minFrac;\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n    return res\n        .replace(CURRENCY_CHAR, currency)\n        // if we have 2 time the currency character, the second one is ignored\n        .replace(CURRENCY_CHAR, '');\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted percentage value.\n *\n * @see `formatNumber()`\n * @see `DecimalPipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n * @publicApi\n *\n */\nfunction formatPercent(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text, with group sizing, separator, and other\n * parameters based on the locale.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted text string.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatNumber(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\nfunction parseNumberFormat(format, minusSign) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var p = {\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 0,\n        posPre: '',\n        posSuf: '',\n        negPre: '',\n        negSuf: '',\n        gSize: 0,\n        lgSize: 0\n    };\n    var patternParts = format.split(PATTERN_SEP);\n    var positive = patternParts[0];\n    var negative = patternParts[1];\n    var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n        positive.split(DECIMAL_SEP) :\n        [\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n        ], integer = positiveParts[0], fraction = positiveParts[1] || '';\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n    for (var i = 0; i < fraction.length; i++) {\n        var ch = fraction.charAt(i);\n        if (ch === ZERO_CHAR) {\n            p.minFrac = p.maxFrac = i + 1;\n        }\n        else if (ch === DIGIT_CHAR) {\n            p.maxFrac = i + 1;\n        }\n        else {\n            p.posSuf += ch;\n        }\n    }\n    var groups = integer.split(GROUP_SEP);\n    p.gSize = groups[1] ? groups[1].length : 0;\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n    if (negative) {\n        var trunkLen = positive.length - p.posPre.length - p.posSuf.length, pos = negative.indexOf(DIGIT_CHAR);\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n    }\n    else {\n        p.negPre = minusSign + p.posPre;\n        p.negSuf = p.posSuf;\n    }\n    return p;\n}\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber) {\n    // if the number is 0, don't do anything\n    if (parsedNumber.digits[0] === 0) {\n        return parsedNumber;\n    }\n    // Getting the current number of decimals\n    var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n    if (parsedNumber.exponent) {\n        parsedNumber.exponent += 2;\n    }\n    else {\n        if (fractionLen === 0) {\n            parsedNumber.digits.push(0, 0);\n        }\n        else if (fractionLen === 1) {\n            parsedNumber.digits.push(0);\n        }\n        parsedNumber.integerLen += 2;\n    }\n    return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num) {\n    var numStr = Math.abs(num) + '';\n    var exponent = 0, digits, integerLen;\n    var i, j, zeros;\n    // Decimal point?\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n        numStr = numStr.replace(DECIMAL_SEP, '');\n    }\n    // Exponential form?\n    if ((i = numStr.search(/e/i)) > 0) {\n        // Work out the exponent.\n        if (integerLen < 0)\n            integerLen = i;\n        integerLen += +numStr.slice(i + 1);\n        numStr = numStr.substring(0, i);\n    }\n    else if (integerLen < 0) {\n        // There was no decimal point or exponent so it is an integer.\n        integerLen = numStr.length;\n    }\n    // Count the number of leading zeros.\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n    }\n    if (i === (zeros = numStr.length)) {\n        // The digits are all zero.\n        digits = [0];\n        integerLen = 1;\n    }\n    else {\n        // Count the number of trailing zeros\n        zeros--;\n        while (numStr.charAt(zeros) === ZERO_CHAR)\n            zeros--;\n        // Trailing zeros are insignificant so ignore them\n        integerLen -= i;\n        digits = [];\n        // Convert string to array of digits without leading/trailing zeros.\n        for (j = 0; i <= zeros; i++, j++) {\n            digits[j] = Number(numStr.charAt(i));\n        }\n    }\n    // If the number overflows the maximum allowed digits then use an exponent.\n    if (integerLen > MAX_DIGITS) {\n        digits = digits.splice(0, MAX_DIGITS - 1);\n        exponent = integerLen - 1;\n        integerLen = 1;\n    }\n    return { digits: digits, exponent: exponent, integerLen: integerLen };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n    if (minFrac > maxFrac) {\n        throw new Error(\"The minimum number of digits after fraction (\" + minFrac + \") is higher than the maximum (\" + maxFrac + \").\");\n    }\n    var digits = parsedNumber.digits;\n    var fractionLen = digits.length - parsedNumber.integerLen;\n    var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n    // The index of the digit to where rounding is to occur\n    var roundAt = fractionSize + parsedNumber.integerLen;\n    var digit = digits[roundAt];\n    if (roundAt > 0) {\n        // Drop fractional digits beyond `roundAt`\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n        // Set non-fractional digits beyond `roundAt` to 0\n        for (var j = roundAt; j < digits.length; j++) {\n            digits[j] = 0;\n        }\n    }\n    else {\n        // We rounded to zero so reset the parsedNumber\n        fractionLen = Math.max(0, fractionLen);\n        parsedNumber.integerLen = 1;\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\n        digits[0] = 0;\n        for (var i = 1; i < roundAt; i++)\n            digits[i] = 0;\n    }\n    if (digit >= 5) {\n        if (roundAt - 1 < 0) {\n            for (var k = 0; k > roundAt; k--) {\n                digits.unshift(0);\n                parsedNumber.integerLen++;\n            }\n            digits.unshift(1);\n            parsedNumber.integerLen++;\n        }\n        else {\n            digits[roundAt - 1]++;\n        }\n    }\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\n        digits.push(0);\n    var dropTrailingZeros = fractionSize !== 0;\n    // Minimal length = nb of decimals required + current nb of integers\n    // Any number besides that is optional and can be removed if it's a trailing 0\n    var minLen = minFrac + parsedNumber.integerLen;\n    // Do any carrying, e.g. a digit was rounded up to 10\n    var carry = digits.reduceRight(function (carry, d, i, digits) {\n        d = d + carry;\n        digits[i] = d < 10 ? d : d - 10; // d % 10\n        if (dropTrailingZeros) {\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n            if (digits[i] === 0 && i >= minLen) {\n                digits.pop();\n            }\n            else {\n                dropTrailingZeros = false;\n            }\n        }\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n        digits.unshift(carry);\n        parsedNumber.integerLen++;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated from v5\n */\nvar DEPRECATED_PLURAL_FN = new InjectionToken('UseV4Plurals');\n/**\n * @publicApi\n */\nvar NgLocalization = /** @class */ (function () {\n    function NgLocalization() {\n    }\n    return NgLocalization;\n}());\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n    var key = \"=\" + value;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value, locale);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n}\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\nvar NgLocaleLocalization = /** @class */ (function (_super) {\n    __extends(NgLocaleLocalization, _super);\n    function NgLocaleLocalization(locale, \n    /** @deprecated from v5 */\n    deprecatedPluralFn) {\n        var _this = _super.call(this) || this;\n        _this.locale = locale;\n        _this.deprecatedPluralFn = deprecatedPluralFn;\n        return _this;\n    }\n    NgLocaleLocalization.prototype.getPluralCategory = function (value, locale) {\n        var plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n            getLocalePluralCase(locale || this.locale)(value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    };\n    NgLocaleLocalization = __decorate([\n        Injectable(),\n        __param(0, Inject(LOCALE_ID)),\n        __param(1, Optional()), __param(1, Inject(DEPRECATED_PLURAL_FN)),\n        __metadata(\"design:paramtypes\", [String, Object])\n    ], NgLocaleLocalization);\n    return NgLocaleLocalization;\n}(NgLocalization));\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @publicApi\n */\nfunction getPluralCase(locale, nLike) {\n    // TODO(vicb): lazy compute\n    if (typeof nLike === 'string') {\n        nLike = parseInt(nLike, 10);\n    }\n    var n = nLike;\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    var i = Math.floor(Math.abs(n));\n    var v = nDecimal.length;\n    var f = parseInt(nDecimal, 10);\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (requiredâgeneral plural form â also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * @publicApi\n */\n// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\nfunction registerLocaleData(data, localeId, extraData) {\n    if (typeof localeId !== 'string') {\n        extraData = localeId;\n        localeId = data[ÉµLocaleDataIndex.LocaleId];\n    }\n    localeId = localeId.toLowerCase().replace(/_/g, '-');\n    ÉµLOCALE_DATA[localeId] = data;\n    if (extraData) {\n        ÉµLOCALE_DATA[localeId][ÉµLocaleDataIndex.ExtraData] = extraData;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction parseCookieValue(cookieStr, name) {\n    var e_1, _a;\n    name = encodeURIComponent(name);\n    try {\n        for (var _b = __values(cookieStr.split(';')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var cookie = _c.value;\n            var eqIndex = cookie.indexOf('=');\n            var _d = __read(eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], 2), cookieName = _d[0], cookieValue = _d[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to diff and convert ngStyle/ngClass instructions into [style] and [class] bindings.\n *\n * ngStyle and ngClass both accept various forms of input and behave differently than that\n * of how [style] and [class] behave in Angular.\n *\n * The differences are:\n *  - ngStyle and ngClass both **watch** their binding values for changes each time CD runs\n *    while [style] and [class] bindings do not (they check for identity changes)\n *  - ngStyle allows for unit-based keys (e.g. `{'max-width.px':value}`) and [style] does not\n *  - ngClass supports arrays of class values and [class] only accepts map and string values\n *  - ngClass allows for multiple className keys (space-separated) within an array or map\n *     (as the * key) while [class] only accepts a simple key/value map object\n *\n * Having Angular understand and adapt to all the different forms of behavior is complicated\n * and unnecessary. Instead, ngClass and ngStyle should have their input values be converted\n * into something that the core-level [style] and [class] bindings understand.\n *\n * This [StylingDiffer] class handles this conversion by creating a new input value each time\n * the inner representation of the binding value have changed.\n *\n * ## Why do we care about ngStyle/ngClass?\n * The styling algorithm code (documented inside of `render3/interfaces/styling.ts`) needs to\n * respect and understand the styling values emitted through ngStyle and ngClass (when they\n * are present and used in a template).\n *\n * Instead of having these directives manage styling on their own, they should be included\n * into the Angular styling algorithm that exists for [style] and [class] bindings.\n *\n * Here's why:\n *\n * - If ngStyle/ngClass is used in combination with [style]/[class] bindings then the\n *   styles and classes would fall out of sync and be applied and updated at\n *   inconsistent times\n * - Both ngClass/ngStyle do not respect [class.name] and [style.prop] bindings\n *   (they will write over them given the right combination of events)\n *\n *   ```\n *   <!-- if `w1` is updated then it will always override `w2`\n *        if `w2` is updated then it will always override `w1`\n *        if both are updated at the same time then `w1` wins -->\n *   <div [ngStyle]=\"{width:w1}\" [style.width]=\"w2\">...</div>\n *\n *   <!-- if `w1` is updated then it will always lose to `w2`\n *        if `w2` is updated then it will always override `w1`\n *        if both are updated at the same time then `w2` wins -->\n *   <div [style]=\"{width:w1}\" [style.width]=\"w2\">...</div>\n *   ```\n * - ngClass/ngStyle were written as a directives and made use of maps, closures and other\n *   expensive data structures which were evaluated each time CD runs\n */\nvar StylingDiffer = /** @class */ (function () {\n    function StylingDiffer(_name, _options) {\n        this._name = _name;\n        this._options = _options;\n        this.value = null;\n        this._lastSetValue = null;\n        this._lastSetValueType = 0 /* Null */;\n        this._lastSetValueIdentityChange = false;\n    }\n    /**\n     * Sets (updates) the styling value within the differ.\n     *\n     * Only when `hasValueChanged` is called then this new value will be evaluted\n     * and checked against the previous value.\n     *\n     * @param value the new styling value provided from the ngClass/ngStyle binding\n     */\n    StylingDiffer.prototype.setValue = function (value) {\n        if (Array.isArray(value)) {\n            this._lastSetValueType = 4 /* Array */;\n        }\n        else if (value instanceof Set) {\n            this._lastSetValueType = 8 /* Set */;\n        }\n        else if (value && typeof value === 'string') {\n            if (!(this._options & 4 /* AllowStringValue */)) {\n                throw new Error(this._name + ' string values are not allowed');\n            }\n            this._lastSetValueType = 1 /* String */;\n        }\n        else {\n            this._lastSetValueType = value ? 2 /* Map */ : 0 /* Null */;\n        }\n        this._lastSetValueIdentityChange = true;\n        this._lastSetValue = value || null;\n    };\n    /**\n     * Determines whether or not the value has changed.\n     *\n     * This function can be called right after `setValue()` is called, but it can also be\n     * called incase the existing value (if it's a collection) changes internally. If the\n     * value is indeed a collection it will do the necessary diffing work and produce a\n     * new object value as assign that to `value`.\n     *\n     * @returns whether or not the value has changed in some way.\n     */\n    StylingDiffer.prototype.hasValueChanged = function () {\n        var valueHasChanged = this._lastSetValueIdentityChange;\n        if (!valueHasChanged && !(this._lastSetValueType & 14 /* Collection */))\n            return false;\n        var finalValue = null;\n        var trimValues = (this._options & 1 /* TrimProperties */) ? true : false;\n        var parseOutUnits = (this._options & 8 /* AllowUnits */) ? true : false;\n        var allowSubKeys = (this._options & 2 /* AllowSubKeys */) ? true : false;\n        switch (this._lastSetValueType) {\n            // case 1: [input]=\"string\"\n            case 1 /* String */:\n                var tokens = this._lastSetValue.split(/\\s+/g);\n                if (this._options & 16 /* ForceAsMap */) {\n                    finalValue = {};\n                    tokens.forEach(function (token, i) { return finalValue[token] = true; });\n                }\n                else {\n                    finalValue = tokens.reduce(function (str, token, i) { return str + (i ? ' ' : '') + token; });\n                }\n                break;\n            // case 2: [input]=\"{key:value}\"\n            case 2 /* Map */:\n                var map = this._lastSetValue;\n                var keys = Object.keys(map);\n                if (!valueHasChanged) {\n                    if (this.value) {\n                        // we know that the classExp value exists and that it is\n                        // a map (otherwise an identity change would have occurred)\n                        valueHasChanged = mapHasChanged(keys, this.value, map);\n                    }\n                    else {\n                        valueHasChanged = true;\n                    }\n                }\n                if (valueHasChanged) {\n                    finalValue =\n                        bulidMapFromValues(this._name, trimValues, parseOutUnits, allowSubKeys, map, keys);\n                }\n                break;\n            // case 3a: [input]=\"[str1, str2, ...]\"\n            // case 3b: [input]=\"Set\"\n            case 4 /* Array */:\n            case 8 /* Set */:\n                var values = Array.from(this._lastSetValue);\n                if (!valueHasChanged) {\n                    var keys_1 = Object.keys(this.value);\n                    valueHasChanged = !arrayEqualsArray(keys_1, values);\n                }\n                if (valueHasChanged) {\n                    finalValue =\n                        bulidMapFromValues(this._name, trimValues, parseOutUnits, allowSubKeys, values);\n                }\n                break;\n            // case 4: [input]=\"null|undefined\"\n            default:\n                finalValue = null;\n                break;\n        }\n        if (valueHasChanged) {\n            this.value = finalValue;\n        }\n        return valueHasChanged;\n    };\n    return StylingDiffer;\n}());\n/**\n * builds and returns a map based on the values input value\n *\n * If the `keys` param is provided then the `values` param is treated as a\n * string map. Otherwise `values` is treated as a string array.\n */\nfunction bulidMapFromValues(errorPrefix, trim, parseOutUnits, allowSubKeys, values, keys) {\n    var map = {};\n    if (keys) {\n        // case 1: map\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            key = trim ? key.trim() : key;\n            var value = values[key];\n            setMapValues(map, key, value, parseOutUnits, allowSubKeys);\n        }\n    }\n    else {\n        // case 2: array\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            assertValidValue(errorPrefix, value);\n            value = trim ? value.trim() : value;\n            setMapValues(map, value, true, false, allowSubKeys);\n        }\n    }\n    return map;\n}\nfunction assertValidValue(errorPrefix, value) {\n    if (typeof value !== 'string') {\n        throw new Error(errorPrefix + \" can only toggle CSS classes expressed as strings, got \" + value);\n    }\n}\nfunction setMapValues(map, key, value, parseOutUnits, allowSubKeys) {\n    if (allowSubKeys && key.indexOf(' ') > 0) {\n        var innerKeys = key.split(/\\s+/g);\n        for (var j = 0; j < innerKeys.length; j++) {\n            setIndividualMapValue(map, innerKeys[j], value, parseOutUnits);\n        }\n    }\n    else {\n        setIndividualMapValue(map, key, value, parseOutUnits);\n    }\n}\nfunction setIndividualMapValue(map, key, value, parseOutUnits) {\n    if (parseOutUnits) {\n        var values = normalizeStyleKeyAndValue(key, value);\n        value = values.value;\n        key = values.key;\n    }\n    map[key] = value;\n}\nfunction normalizeStyleKeyAndValue(key, value) {\n    var index = key.indexOf('.');\n    if (index > 0) {\n        var unit = key.substr(index + 1); // ignore the . ([width.px]=\"'40'\" => \"40px\")\n        key = key.substring(0, index);\n        if (value != null) { // we should not convert null values to string\n            value += unit;\n        }\n    }\n    return { key: key, value: value };\n}\nfunction mapHasChanged(keys, a, b) {\n    var oldKeys = Object.keys(a);\n    var newKeys = keys;\n    // the keys are different which means the map changed\n    if (!arrayEqualsArray(oldKeys, newKeys)) {\n        return true;\n    }\n    for (var i = 0; i < newKeys.length; i++) {\n        var key = newKeys[i];\n        if (a[key] !== b[key]) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction arrayEqualsArray(a, b) {\n    if (a && b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; i++) {\n            if (b.indexOf(a[i]) === -1)\n                return false;\n        }\n        return true;\n    }\n    return false;\n}\n\n/**\n * Used as a token for an injected service within the NgClass directive.\n *\n * NgClass behaves differenly whether or not VE is being used or not. If\n * present then the legacy ngClass diffing algorithm will be used as an\n * injected service. Otherwise the new diffing algorithm (which delegates\n * to the `[class]` binding) will be used. This toggle behavior is done so\n * via the ivy_switch mechanism.\n */\nvar NgClassImpl = /** @class */ (function () {\n    function NgClassImpl() {\n    }\n    return NgClassImpl;\n}());\nvar NgClassR2Impl = /** @class */ (function () {\n    function NgClassR2Impl(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._initialClasses = [];\n    }\n    NgClassR2Impl.prototype.getValue = function () { return null; };\n    NgClassR2Impl.prototype.setClass = function (value) {\n        this._removeClasses(this._initialClasses);\n        this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\n        this._applyClasses(this._initialClasses);\n        this._applyClasses(this._rawClass);\n    };\n    NgClassR2Impl.prototype.setNgClass = function (value) {\n        this._removeClasses(this._rawClass);\n        this._applyClasses(this._initialClasses);\n        this._iterableDiffer = null;\n        this._keyValueDiffer = null;\n        this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\n        if (this._rawClass) {\n            if (ÉµisListLikeIterable(this._rawClass)) {\n                this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n            }\n            else {\n                this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n            }\n        }\n    };\n    NgClassR2Impl.prototype.applyChanges = function () {\n        if (this._iterableDiffer) {\n            var iterableChanges = this._iterableDiffer.diff(this._rawClass);\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            var keyValueChanges = this._keyValueDiffer.diff(this._rawClass);\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    };\n    NgClassR2Impl.prototype._applyKeyValueChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachRemovedItem(function (record) {\n            if (record.previousValue) {\n                _this._toggleClass(record.key, false);\n            }\n        });\n    };\n    NgClassR2Impl.prototype._applyIterableChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) {\n            if (typeof record.item === 'string') {\n                _this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + Éµstringify(record.item));\n            }\n        });\n        changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n    };\n    /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     */\n    NgClassR2Impl.prototype._applyClasses = function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, true); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, !!rawClassVal[klass]); });\n            }\n        }\n    };\n    /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     */\n    NgClassR2Impl.prototype._removeClasses = function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n        }\n    };\n    NgClassR2Impl.prototype._toggleClass = function (klass, enabled) {\n        var _this = this;\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(function (klass) {\n                if (enabled) {\n                    _this._renderer.addClass(_this._ngEl.nativeElement, klass);\n                }\n                else {\n                    _this._renderer.removeClass(_this._ngEl.nativeElement, klass);\n                }\n            });\n        }\n    };\n    NgClassR2Impl = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [IterableDiffers, KeyValueDiffers,\n            ElementRef, Renderer2])\n    ], NgClassR2Impl);\n    return NgClassR2Impl;\n}());\nvar NgClassR3Impl = /** @class */ (function () {\n    function NgClassR3Impl() {\n        this._value = null;\n        this._ngClassDiffer = new StylingDiffer('NgClass', 1 /* TrimProperties */ |\n            2 /* AllowSubKeys */ |\n            4 /* AllowStringValue */ | 16 /* ForceAsMap */);\n        this._classStringDiffer = null;\n    }\n    NgClassR3Impl.prototype.getValue = function () { return this._value; };\n    NgClassR3Impl.prototype.setClass = function (value) {\n        // early exit incase the binding gets emitted as an empty value which\n        // means there is no reason to instantiate and diff the values...\n        if (!value && !this._classStringDiffer)\n            return;\n        this._classStringDiffer = this._classStringDiffer ||\n            new StylingDiffer('class', 4 /* AllowStringValue */ | 16 /* ForceAsMap */);\n        this._classStringDiffer.setValue(value);\n    };\n    NgClassR3Impl.prototype.setNgClass = function (value) {\n        this._ngClassDiffer.setValue(value);\n    };\n    NgClassR3Impl.prototype.applyChanges = function () {\n        var classChanged = this._classStringDiffer ? this._classStringDiffer.hasValueChanged() : false;\n        var ngClassChanged = this._ngClassDiffer.hasValueChanged();\n        if (classChanged || ngClassChanged) {\n            var value = this._ngClassDiffer.value;\n            if (this._classStringDiffer) {\n                var classValue = this._classStringDiffer.value;\n                if (classValue) {\n                    value = value ? __assign({}, classValue, value) : classValue;\n                }\n            }\n            this._value = value;\n        }\n    };\n    NgClassR3Impl = __decorate([\n        Injectable()\n    ], NgClassR3Impl);\n    return NgClassR3Impl;\n}());\n// the implementation for both NgStyleR2Impl and NgStyleR3Impl are\n// not ivy_switch'd away, instead they are only hooked up into the\n// DI via NgStyle's directive's provider property.\nvar NgClassImplProvider__PRE_R3__ = {\n    provide: NgClassImpl,\n    useClass: NgClassR2Impl\n};\nvar NgClassImplProvider__POST_R3__ = {\n    provide: NgClassImpl,\n    useClass: NgClassR3Impl\n};\nvar NgClassImplProvider = NgClassImplProvider__PRE_R3__;\n\n/*\n * NgClass (as well as NgStyle) behaves differently when loaded in the VE and when not.\n *\n * If the VE is present (which is for older versions of Angular) then NgClass will inject\n * the legacy diffing algorithm as a service and delegate all styling changes to that.\n *\n * If the VE is not present then NgStyle will normalize (through the injected service) and\n * then write all styling changes to the `[style]` binding directly (through a host binding).\n * Then Angular will notice the host binding change and treat the changes as styling\n * changes and apply them via the core styling instructions that exist within Angular.\n */\n// used when the VE is present\nvar ngClassDirectiveDef__PRE_R3__ = undefined;\nvar Éµ0 = function () { }, Éµ1 = function () { }, Éµ2 = function (rf, ctx, elIndex) {\n    if (rf & 1 /* Create */) {\n        ÉµÉµallocHostVars(1);\n        ÉµÉµstyling();\n    }\n    if (rf & 2 /* Update */) {\n        ÉµÉµclassMap(ctx.getValue());\n        ÉµÉµstylingApply();\n    }\n};\n// used when the VE is not present (note the directive will\n// never be instantiated normally because it is apart of a\n// base class)\nvar ngClassDirectiveDef__POST_R3__ = ÉµÉµdefineDirective({\n    type: Éµ0,\n    selectors: null,\n    factory: Éµ1,\n    hostBindings: Éµ2\n});\nvar ngClassDirectiveDef = ngClassDirectiveDef__PRE_R3__;\n/**\n * Serves as the base non-VE container for NgClass.\n *\n * While this is a base class that NgClass extends from, the\n * class itself acts as a container for non-VE code to setup\n * a link to the `[class]` host binding (via the static\n * `ngDirectiveDef` property on the class).\n *\n * Note that the `ngDirectiveDef` property's code is switched\n * depending if VE is present or not (this allows for the\n * binding code to be set only for newer versions of Angular).\n *\n * @publicApi\n */\nvar NgClassBase = /** @class */ (function () {\n    function NgClassBase(_delegate) {\n        this._delegate = _delegate;\n    }\n    NgClassBase.prototype.getValue = function () { return this._delegate.getValue(); };\n    NgClassBase.ngDirectiveDef = ngClassDirectiveDef;\n    return NgClassBase;\n}());\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n * @publicApi\n */\nvar NgClass = /** @class */ (function (_super) {\n    __extends(NgClass, _super);\n    function NgClass(delegate) {\n        return _super.call(this, delegate) || this;\n    }\n    Object.defineProperty(NgClass.prototype, \"klass\", {\n        set: function (value) { this._delegate.setClass(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgClass.prototype, \"ngClass\", {\n        set: function (value) {\n            this._delegate.setNgClass(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgClass.prototype.ngDoCheck = function () { this._delegate.applyChanges(); };\n    __decorate([\n        Input('class'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], NgClass.prototype, \"klass\", null);\n    __decorate([\n        Input('ngClass'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgClass.prototype, \"ngClass\", null);\n    NgClass = __decorate([\n        Directive({ selector: '[ngClass]', providers: [NgClassImplProvider] }),\n        __metadata(\"design:paramtypes\", [NgClassImpl])\n    ], NgClass);\n    return NgClass;\n}(NgClassBase));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Instantiates a single {@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * @usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n *\n * @publicApi\n * @ngModule CommonModule\n */\nvar NgComponentOutlet = /** @class */ (function () {\n    function NgComponentOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    NgComponentOutlet.prototype.ngOnChanges = function (changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    var parentModule = elInjector.get(NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    };\n    NgComponentOutlet.prototype.ngOnDestroy = function () {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Type)\n    ], NgComponentOutlet.prototype, \"ngComponentOutlet\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Injector)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletInjector\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletContent\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", NgModuleFactory)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletNgModuleFactory\", void 0);\n    NgComponentOutlet = __decorate([\n        Directive({ selector: '[ngComponentOutlet]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef])\n    ], NgComponentOutlet);\n    return NgComponentOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar NgForOfContext = /** @class */ (function () {\n    function NgForOfContext($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    Object.defineProperty(NgForOfContext.prototype, \"first\", {\n        get: function () { return this.index === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"last\", {\n        get: function () { return this.index === this.count - 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"even\", {\n        get: function () { return this.index % 2 === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"odd\", {\n        get: function () { return !this.even; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgForOfContext;\n}());\n/**\n * A [structural directive](guide/structural-directives) that renders\n * a template for each item in a collection.\n * The directive is placed on an element, which becomes the parent\n * of the cloned templates.\n *\n * The `ngForOf` directive is generally used in the\n * [shorthand form](guide/structural-directives#the-asterisk--prefix) `*ngFor`.\n * In this form, the template to be rendered for each iteration is the content\n * of an anchor element containing the directive.\n *\n * The following example shows the shorthand syntax with some options,\n * contained in an `<li>` element.\n *\n * ```\n * <li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>\n * ```\n *\n * The shorthand form expands into a long form that uses the `ngForOf` selector\n * on an `<ng-template>` element.\n * The content of the `<ng-template>` element is the `<li>` element that held the\n * short-form directive.\n *\n * Here is the expanded version of the short-form example.\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * Angular automatically expands the shorthand syntax as it compiles the template.\n * The context for each embedded view is logically merged to the current component\n * context according to its lexical position.\n *\n * When using the shorthand syntax, Angular allows only [one structural directive\n * on an element](guide/structural-directives#one-structural-directive-per-host-element).\n * If you want to iterate conditionally, for example,\n * put the `*ngIf` on a container element that wraps the `*ngFor` element.\n * For futher discussion, see\n * [Structural Directives](guide/structural-directives#one-per-element).\n *\n * @usageNotes\n *\n * ### Local variables\n *\n * `NgForOf` provides exported values that can be aliased to local variables.\n * For example:\n *\n *  ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * The following exported values can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ### Change propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls that are present, such as `<input>` elements that accept user input. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * For more on animations, see [Transitions and Triggers](guide/transition-and-triggers).\n *\n * The identities of elements in the iterator can change while the data does not.\n * This can happen, for example, if the iterator is produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response produces objects with\n * different identities, and Angular must tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted).\n *\n * To avoid this expensive operation, you can customize the default tracking algorithm.\n * by supplying the `trackBy` option to `NgForOf`.\n * `trackBy` takes a function that has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * @see [Structural Directives](guide/structural-directives)\n * @ngModule CommonModule\n * @publicApi\n */\nvar NgForOf = /** @class */ (function () {\n    function NgForOf(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._ngForOfDirty = true;\n        this._differ = null;\n    }\n    Object.defineProperty(NgForOf.prototype, \"ngForOf\", {\n        /**\n         * The value of the iterable expression, which can be used as a\n         * [template input variable](guide/structural-directives#template-input-variable).\n         */\n        set: function (ngForOf) {\n            this._ngForOf = ngForOf;\n            this._ngForOfDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTrackBy\", {\n        get: function () { return this._trackByFn; },\n        /**\n         * A function that defines how to track changes for items in the iterable.\n         *\n         * When items are added, moved, or removed in the iterable,\n         * the directive must re-render the appropriate DOM nodes.\n         * To minimize churn in the DOM, only nodes that have changed\n         * are re-rendered.\n         *\n         * By default, the change detector assumes that\n         * the object instance identifies the node in the iterable.\n         * When this function is supplied, the directive uses\n         * the result of calling this function to identify the item node,\n         * rather than the identity of the object itself.\n         *\n         * The function receives two inputs,\n         * the iteration index and the node object ID.\n         */\n        set: function (fn) {\n            if (isDevMode() && fn != null && typeof fn !== 'function') {\n                // TODO(vicb): use a log service once there is a public one available\n                if (console && console.warn) {\n                    console.warn(\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \" +\n                        \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                }\n            }\n            this._trackByFn = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTemplate\", {\n        /**\n         * A reference to the template that is stamped out for each item in the iterable.\n         * @see [template reference variable](guide/template-syntax#template-reference-variables--var-)\n         */\n        set: function (value) {\n            // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n            // The current type is too restrictive; a template that just uses index, for example,\n            // should be acceptable.\n            if (value) {\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Applies the changes when needed.\n     */\n    NgForOf.prototype.ngDoCheck = function () {\n        if (this._ngForOfDirty) {\n            this._ngForOfDirty = false;\n            // React on ngForOf changes only once all inputs have been initialized\n            var value = this._ngForOf;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (_a) {\n                    throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeName(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                }\n            }\n        }\n        if (this._differ) {\n            var changes = this._differ.diff(this._ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    };\n    NgForOf.prototype._applyChanges = function (changes) {\n        var _this = this;\n        var insertTuples = [];\n        changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n            if (item.previousIndex == null) {\n                var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext(null, _this._ngForOf, -1, -1), currentIndex === null ? undefined : currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                _this._viewContainer.remove(adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex);\n            }\n            else if (adjustedPreviousIndex !== null) {\n                var view = _this._viewContainer.get(adjustedPreviousIndex);\n                _this._viewContainer.move(view, currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n        });\n        for (var i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n            var viewRef = this._viewContainer.get(i);\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n            viewRef.context.ngForOf = this._ngForOf;\n        }\n        changes.forEachIdentityChange(function (record) {\n            var viewRef = _this._viewContainer.get(record.currentIndex);\n            viewRef.context.$implicit = record.item;\n        });\n    };\n    NgForOf.prototype._perViewChange = function (view, record) {\n        view.context.$implicit = record.item;\n    };\n    /**\n     * Asserts the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     */\n    NgForOf.ngTemplateContextGuard = function (dir, ctx) {\n        return true;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgForOf.prototype, \"ngForOf\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], NgForOf.prototype, \"ngForTrackBy\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", TemplateRef),\n        __metadata(\"design:paramtypes\", [TemplateRef])\n    ], NgForOf.prototype, \"ngForTemplate\", null);\n    NgForOf = __decorate([\n        Directive({ selector: '[ngFor][ngForOf]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            IterableDiffers])\n    ], NgForOf);\n    return NgForOf;\n}());\nvar RecordViewTuple = /** @class */ (function () {\n    function RecordViewTuple(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n    return RecordViewTuple;\n}());\nfunction getTypeName(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A structural directive that conditionally includes a template based on the value of\n * an expression coerced to Boolean.\n * When the expression evaluates to true, Angular renders the template\n * provided in a `then` clause, and when  false or null,\n * Angular renders the template provided in an optional `else` clause. The default\n * template for the `else` clause is blank.\n *\n * A [shorthand form](guide/structural-directives#the-asterisk--prefix) of the directive,\n * `*ngIf=\"condition\"`, is generally used, provided\n * as an attribute of the anchor element for the inserted template.\n * Angular expands this into a more explicit version, in which the anchor element\n * is contained in an `<ng-template>` element.\n *\n * Simple form with shorthand syntax:\n *\n * ```\n * <div *ngIf=\"condition\">Content to render when condition is true.</div>\n * ```\n *\n * Simple form with expanded syntax:\n *\n * ```\n * <ng-template [ngIf]=\"condition\"><div>Content to render when condition is\n * true.</div></ng-template>\n * ```\n *\n * Form with an \"else\" block:\n *\n * ```\n * <div *ngIf=\"condition; else elseBlock\">Content to render when condition is true.</div>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Shorthand form with \"then\" and \"else\" blocks:\n *\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>Content to render when condition is true.</ng-template>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Form with storing the value locally:\n *\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>Content to render when value is null.</ng-template>\n * ```\n *\n * @usageNotes\n *\n * The `*ngIf` directive is most commonly used to conditionally show an inline template,\n * as seen in the following  example.\n * The default `else` template is blank.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * To display a template when `expression` evaluates to false, use an `else` template\n * binding as shown in the following example.\n * The `else` binding points to an `<ng-template>`  element labeled `#elseBlock`.\n * The template can be defined anywhere in the component view, but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using an external `then` template\n *\n * In the previous example, the then-clause template is specified inline, as the content of the\n * tag that contains the `ngIf` directive. You can also specify a template that is defined\n * externally, by referencing a labeled `<ng-template>` element. When you do this, you can\n * change which template to use at runtime, as shown in the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing a conditional result in a variable\n *\n * You might want to show a set of properties from the same object. If you are waiting\n * for asynchronous data, the object can be undefined.\n * In this case, you can use `ngIf` and store the result of the condition in a local\n * variable as shown in the the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * This code uses only one `AsyncPipe`, so only one subscription is created.\n * The conditional statement stores the result of `userStream|async` in the local variable `user`.\n * You can then bind the local `user` repeatedly.\n *\n * The conditional displays the data only if `userStream` returns a value,\n * so you don't need to use the\n * [safe-navigation-operator](guide/template-syntax#safe-navigation-operator) (`?.`)\n * to guard against null values when accessing properties.\n * You can display an alternative template while waiting for the data.\n *\n * ### Shorthand syntax\n *\n * The shorthand syntax `*ngIf` expands into two separate template specifications\n * for the \"then\" and \"else\" clauses. For example, consider the following shorthand statement,\n * that is meant to show a loading page while waiting for data to be loaded.\n *\n * ```\n * <div class=\"hero-list\" *ngIf=\"heroes else loading\">\n *  ...\n * </div>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * You can see that the \"else\" clause references the `<ng-template>`\n * with the `#loading` label, and the template for the \"then\" clause\n * is provided as the content of the anchor element.\n *\n * However, when Angular expands the shorthand syntax, it creates\n * another `<ng-template>` tag, with `ngIf` and `ngIfElse` directives.\n * The anchor element containing the template for the \"then\" clause becomes\n * the content of this unlabeled `<ng-template>` tag.\n *\n * ```\n * <ng-template [ngIf]=\"hero-list\" [ngIfElse]=\"loading\">\n *  <div class=\"hero-list\">\n *   ...\n *  </div>\n * </ng-template>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * The presence of the implicit template object has implications for the nesting of\n * structural directives. For more on this subject, see\n * [Structural Directives](https://angular.io/guide/structural-directives#one-per-element).\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar NgIf = /** @class */ (function () {\n    function NgIf(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    Object.defineProperty(NgIf.prototype, \"ngIf\", {\n        /**\n         * The Boolean expression to evaluate as the condition for showing a template.\n         */\n        set: function (condition) {\n            this._context.$implicit = this._context.ngIf = condition;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfThen\", {\n        /**\n         * A template to show if the condition expression evaluates to true.\n         */\n        set: function (templateRef) {\n            assertTemplate('ngIfThen', templateRef);\n            this._thenTemplateRef = templateRef;\n            this._thenViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfElse\", {\n        /**\n         * A template to show if the condition expression evaluates to false.\n         */\n        set: function (templateRef) {\n            assertTemplate('ngIfElse', templateRef);\n            this._elseTemplateRef = templateRef;\n            this._elseViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgIf.prototype._updateView = function () {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIf\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIfThen\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIfElse\", null);\n    NgIf = __decorate([\n        Directive({ selector: '[ngIf]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef])\n    ], NgIf);\n    return NgIf;\n}());\n/**\n * @publicApi\n */\nvar NgIfContext = /** @class */ (function () {\n    function NgIfContext() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n    return NgIfContext;\n}());\nfunction assertTemplate(property, templateRef) {\n    var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n    if (!isTemplateRefOrNull) {\n        throw new Error(property + \" must be a TemplateRef, but received '\" + Éµstringify(templateRef) + \"'.\");\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SwitchView = /** @class */ (function () {\n    function SwitchView(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    SwitchView.prototype.create = function () {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    };\n    SwitchView.prototype.destroy = function () {\n        this._created = false;\n        this._viewContainerRef.clear();\n    };\n    SwitchView.prototype.enforceState = function (created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    };\n    return SwitchView;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description A structural directive that adds or removes templates (displaying or hiding views)\n * when the next match expression matches the switch expression.\n *\n * The `[ngSwitch]` directive on a container specifies an expression to match against.\n * The expressions to match are provided by `ngSwitchCase` directives on views within the container.\n * - Every view that matches is rendered.\n * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.\n * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`\n * or `ngSwitchDefault` directive are preserved at the location.\n *\n * @usageNotes\n * Define a container element for the directive, and specify the switch expression\n * to match against as an attribute:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n * ```\n *\n * Within the container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *    <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * ...\n *    <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * ### Usage Examples\n *\n * The following example shows how to use more than one case to display the same view:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <!-- the same view can be shown in more than one case -->\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *   <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *   <!--default case when there are no matches -->\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * The following example shows how cases can be nested:\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n *\n * @publicApi\n * @see `NgSwitchCase`\n * @see `NgSwitchDefault`\n * @see [Structural Directives](guide/structural-directives)\n *\n */\nvar NgSwitch = /** @class */ (function () {\n    function NgSwitch() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n        set: function (newValue) {\n            this._ngSwitch = newValue;\n            if (this._caseCount === 0) {\n                this._updateDefaultCases(true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n    /** @internal */\n    NgSwitch.prototype._addDefault = function (view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    };\n    /** @internal */\n    NgSwitch.prototype._matchCase = function (value) {\n        var matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    };\n    NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (var i = 0; i < this._defaultViews.length; i++) {\n                var defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgSwitch.prototype, \"ngSwitch\", null);\n    NgSwitch = __decorate([\n        Directive({ selector: '[ngSwitch]' })\n    ], NgSwitch);\n    return NgSwitch;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n * Provides a switch case expression to match against an enclosing `ngSwitch` expression.\n * When the expressions match, the given `NgSwitchCase` template is rendered.\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * @usageNotes\n *\n * Within a switch container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   ...\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * Each switch-case statement contains an in-line HTML template or template reference\n * that defines the subtree to be selected if the value of the match expression\n * matches the value of the switch expression.\n *\n * Unlike JavaScript, which uses strict equality, Angular uses loose equality.\n * This means that the empty string, `\"\"` matches 0.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchDefault`\n *\n */\nvar NgSwitchCase = /** @class */ (function () {\n    function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    /**\n     * Performs case matching. For internal use only.\n     */\n    NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgSwitchCase.prototype, \"ngSwitchCase\", void 0);\n    NgSwitchCase = __decorate([\n        Directive({ selector: '[ngSwitchCase]' }),\n        __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            NgSwitch])\n    ], NgSwitchCase);\n    return NgSwitchCase;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that is rendered when no `NgSwitchCase` expressions\n * match the `NgSwitch` expression.\n * This statement should be the final case in an `NgSwitch`.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchCase`\n *\n */\nvar NgSwitchDefault = /** @class */ (function () {\n    function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n    NgSwitchDefault = __decorate([\n        Directive({ selector: '[ngSwitchDefault]' }),\n        __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            NgSwitch])\n    ], NgSwitchDefault);\n    return NgSwitchDefault;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @publicApi\n */\nvar NgPlural = /** @class */ (function () {\n    function NgPlural(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n        set: function (value) {\n            this._switchValue = value;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n    NgPlural.prototype._updateView = function () {\n        this._clearViews();\n        var cases = Object.keys(this._caseViews);\n        var key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    };\n    NgPlural.prototype._clearViews = function () {\n        if (this._activeView)\n            this._activeView.destroy();\n    };\n    NgPlural.prototype._activateView = function (view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], NgPlural.prototype, \"ngPlural\", null);\n    NgPlural = __decorate([\n        Directive({ selector: '[ngPlural]' }),\n        __metadata(\"design:paramtypes\", [NgLocalization])\n    ], NgPlural);\n    return NgPlural;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @publicApi\n */\nvar NgPluralCase = /** @class */ (function () {\n    function NgPluralCase(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        var isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n    }\n    NgPluralCase = __decorate([\n        Directive({ selector: '[ngPluralCase]' }),\n        __param(0, Attribute('ngPluralCase')),\n        __param(3, Host()),\n        __metadata(\"design:paramtypes\", [String, TemplateRef,\n            ViewContainerRef, NgPlural])\n    ], NgPluralCase);\n    return NgPluralCase;\n}());\n\n/**\n * Used as a token for an injected service within the NgStyle directive.\n *\n * NgStyle behaves differenly whether or not VE is being used or not. If\n * present then the legacy ngClass diffing algorithm will be used as an\n * injected service. Otherwise the new diffing algorithm (which delegates\n * to the `[style]` binding) will be used. This toggle behavior is done so\n * via the ivy_switch mechanism.\n */\nvar NgStyleImpl = /** @class */ (function () {\n    function NgStyleImpl() {\n    }\n    return NgStyleImpl;\n}());\nvar NgStyleR2Impl = /** @class */ (function () {\n    function NgStyleR2Impl(_ngEl, _differs, _renderer) {\n        this._ngEl = _ngEl;\n        this._differs = _differs;\n        this._renderer = _renderer;\n    }\n    NgStyleR2Impl.prototype.getValue = function () { return null; };\n    /**\n     * A map of style properties, specified as colon-separated\n     * key-value pairs.\n     * * The key is a style name, with an optional `.<unit>` suffix\n     *    (such as 'top.px', 'font-style.em').\n     * * The value is an expression to be evaluated.\n     */\n    NgStyleR2Impl.prototype.setNgStyle = function (values) {\n        this._ngStyle = values;\n        if (!this._differ && values) {\n            this._differ = this._differs.find(values).create();\n        }\n    };\n    /**\n     * Applies the new styles if needed.\n     */\n    NgStyleR2Impl.prototype.applyChanges = function () {\n        if (this._differ) {\n            var changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    };\n    NgStyleR2Impl.prototype._applyChanges = function (changes) {\n        var _this = this;\n        changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n        changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n    };\n    NgStyleR2Impl.prototype._setStyle = function (nameAndUnit, value) {\n        var _a = __read(nameAndUnit.split('.'), 2), name = _a[0], unit = _a[1];\n        value = value != null && unit ? \"\" + value + unit : value;\n        if (value != null) {\n            this._renderer.setStyle(this._ngEl.nativeElement, name, value);\n        }\n        else {\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\n        }\n    };\n    NgStyleR2Impl = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ElementRef, KeyValueDiffers, Renderer2])\n    ], NgStyleR2Impl);\n    return NgStyleR2Impl;\n}());\nvar NgStyleR3Impl = /** @class */ (function () {\n    function NgStyleR3Impl() {\n        this._differ = new StylingDiffer('NgStyle', 8 /* AllowUnits */);\n        this._value = null;\n    }\n    NgStyleR3Impl.prototype.getValue = function () { return this._value; };\n    NgStyleR3Impl.prototype.setNgStyle = function (value) { this._differ.setValue(value); };\n    NgStyleR3Impl.prototype.applyChanges = function () {\n        if (this._differ.hasValueChanged()) {\n            this._value = this._differ.value;\n        }\n    };\n    NgStyleR3Impl = __decorate([\n        Injectable()\n    ], NgStyleR3Impl);\n    return NgStyleR3Impl;\n}());\n// the implementation for both NgClassR2Impl and NgClassR3Impl are\n// not ivy_switch'd away, instead they are only hooked up into the\n// DI via NgStyle's directive's provider property.\nvar NgStyleImplProvider__PRE_R3__ = {\n    provide: NgStyleImpl,\n    useClass: NgStyleR2Impl\n};\nvar NgStyleImplProvider__POST_R3__ = {\n    provide: NgStyleImpl,\n    useClass: NgStyleR3Impl\n};\nvar NgStyleImplProvider = NgStyleImplProvider__PRE_R3__;\n\n/*\n * NgStyle (as well as NgClass) behaves differently when loaded in the VE and when not.\n *\n * If the VE is present (which is for older versions of Angular) then NgStyle will inject\n * the legacy diffing algorithm as a service and delegate all styling changes to that.\n *\n * If the VE is not present then NgStyle will normalize (through the injected service) and\n * then write all styling changes to the `[style]` binding directly (through a host binding).\n * Then Angular will notice the host binding change and treat the changes as styling\n * changes and apply them via the core styling instructions that exist within Angular.\n */\n// used when the VE is present\nvar ngStyleDirectiveDef__PRE_R3__ = undefined;\nvar Éµ0$1 = function () { }, Éµ1$1 = function () { }, Éµ2$1 = function (rf, ctx, elIndex) {\n    if (rf & 1 /* Create */) {\n        ÉµÉµstyling();\n    }\n    if (rf & 2 /* Update */) {\n        ÉµÉµstyleMap(ctx.getValue());\n        ÉµÉµstylingApply();\n    }\n};\n// used when the VE is not present (note the directive will\n// never be instantiated normally because it is apart of a\n// base class)\nvar ngStyleDirectiveDef__POST_R3__ = ÉµÉµdefineDirective({\n    type: Éµ0$1,\n    selectors: null,\n    factory: Éµ1$1,\n    hostBindings: Éµ2$1\n});\nvar ngStyleDirectiveDef = ngStyleDirectiveDef__PRE_R3__;\n/**\n * Serves as the base non-VE container for NgStyle.\n *\n * While this is a base class that NgStyle extends from, the\n * class itself acts as a container for non-VE code to setup\n * a link to the `[style]` host binding (via the static\n * `ngDirectiveDef` property on the class).\n *\n * Note that the `ngDirectiveDef` property's code is switched\n * depending if VE is present or not (this allows for the\n * binding code to be set only for newer versions of Angular).\n *\n * @publicApi\n */\nvar NgStyleBase = /** @class */ (function () {\n    function NgStyleBase(_delegate) {\n        this._delegate = _delegate;\n    }\n    NgStyleBase.prototype.getValue = function () { return this._delegate.getValue(); };\n    NgStyleBase.ngDirectiveDef = ngStyleDirectiveDef;\n    return NgStyleBase;\n}());\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n *\n * Set the font of the containing element to the result of an expression.\n *\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * ```\n *\n * Set the width of the containing element to a pixel value returned by an expression.\n *\n * ```\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * ```\n *\n * Set a collection of style values using an expression that returns key-value pairs.\n *\n * ```\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * @description\n *\n * An attribute directive that updates styles for the containing HTML element.\n * Sets one or more style properties, specified as colon-separated key-value pairs.\n * The key is a style name, with an optional `.<unit>` suffix\n * (such as 'top.px', 'font-style.em').\n * The value is an expression to be evaluated.\n * The resulting non-null value, expressed in the given unit,\n * is assigned to the given style property.\n * If the result of evaluation is null, the corresponding style is removed.\n *\n * @publicApi\n */\nvar NgStyle = /** @class */ (function (_super) {\n    __extends(NgStyle, _super);\n    function NgStyle(delegate) {\n        return _super.call(this, delegate) || this;\n    }\n    Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n        set: function (value) { this._delegate.setNgStyle(value); },\n        enumerable: true,\n        configurable: true\n    });\n    NgStyle.prototype.ngDoCheck = function () { this._delegate.applyChanges(); };\n    __decorate([\n        Input('ngStyle'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgStyle.prototype, \"ngStyle\", null);\n    NgStyle = __decorate([\n        Directive({ selector: '[ngStyle]', providers: [NgStyleImplProvider] }),\n        __metadata(\"design:paramtypes\", [NgStyleImpl])\n    ], NgStyle);\n    return NgStyle;\n}(NgStyleBase));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * @usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * @publicApi\n */\nvar NgTemplateOutlet = /** @class */ (function () {\n    function NgTemplateOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._viewRef = null;\n        /**\n         * A context object to attach to the {@link EmbeddedViewRef}. This should be an\n         * object, the object's keys will be available for binding by the local template `let`\n         * declarations.\n         * Using the key `$implicit` in the context object will set its value as default.\n         */\n        this.ngTemplateOutletContext = null;\n        /**\n         * A string defining the template reference and optionally the context object for the template.\n         */\n        this.ngTemplateOutlet = null;\n    }\n    NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n        var recreateView = this._shouldRecreateView(changes);\n        if (recreateView) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this.ngTemplateOutlet) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);\n            }\n        }\n        else {\n            if (this._viewRef && this.ngTemplateOutletContext) {\n                this._updateExistingContext(this.ngTemplateOutletContext);\n            }\n        }\n    };\n    /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     */\n    NgTemplateOutlet.prototype._shouldRecreateView = function (changes) {\n        var ctxChange = changes['ngTemplateOutletContext'];\n        return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    };\n    NgTemplateOutlet.prototype._hasContextShapeChanged = function (ctxChange) {\n        var e_1, _a;\n        var prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        var currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            try {\n                for (var currCtxKeys_1 = __values(currCtxKeys), currCtxKeys_1_1 = currCtxKeys_1.next(); !currCtxKeys_1_1.done; currCtxKeys_1_1 = currCtxKeys_1.next()) {\n                    var propName = currCtxKeys_1_1.value;\n                    if (prevCtxKeys.indexOf(propName) === -1) {\n                        return true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (currCtxKeys_1_1 && !currCtxKeys_1_1.done && (_a = currCtxKeys_1.return)) _a.call(currCtxKeys_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    NgTemplateOutlet.prototype._updateExistingContext = function (ctx) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(Object.keys(ctx)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propName = _c.value;\n                this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgTemplateOutlet.prototype, \"ngTemplateOutletContext\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgTemplateOutlet.prototype, \"ngTemplateOutlet\", void 0);\n    NgTemplateOutlet = __decorate([\n        Directive({ selector: '[ngTemplateOutlet]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef])\n    ], NgTemplateOutlet);\n    return NgTemplateOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nvar COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction invalidPipeArgumentError(type, value) {\n    return Error(\"InvalidPipeArgument: '\" + value + \"' for pipe '\" + Éµstringify(type) + \"'\");\n}\n\nvar NumberFormatter = /** @class */ (function () {\n    function NumberFormatter() {\n    }\n    NumberFormatter.format = function (num, locale, style, opts) {\n        if (opts === void 0) { opts = {}; }\n        var minimumIntegerDigits = opts.minimumIntegerDigits, minimumFractionDigits = opts.minimumFractionDigits, maximumFractionDigits = opts.maximumFractionDigits, currency = opts.currency, _a = opts.currencyAsSymbol, currencyAsSymbol = _a === void 0 ? false : _a;\n        var options = {\n            minimumIntegerDigits: minimumIntegerDigits,\n            minimumFractionDigits: minimumFractionDigits,\n            maximumFractionDigits: maximumFractionDigits,\n            style: NumberFormatStyle[style].toLowerCase()\n        };\n        if (style == NumberFormatStyle.Currency) {\n            options.currency = typeof currency == 'string' ? currency : undefined;\n            options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n        }\n        return new Intl.NumberFormat(locale, options).format(num);\n    };\n    return NumberFormatter;\n}());\nvar DATE_FORMATS_SPLIT$1 = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\nvar PATTERN_ALIASES = {\n    // Keys are quoted so they do not get renamed during closure compilation.\n    'yMMMdjms': datePartGetterFactory(combine([\n        digitCondition('year', 1),\n        nameCondition('month', 3),\n        digitCondition('day', 1),\n        digitCondition('hour', 1),\n        digitCondition('minute', 1),\n        digitCondition('second', 1),\n    ])),\n    'yMdjm': datePartGetterFactory(combine([\n        digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n        digitCondition('hour', 1), digitCondition('minute', 1)\n    ])),\n    'yMMMMEEEEd': datePartGetterFactory(combine([\n        digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n        digitCondition('day', 1)\n    ])),\n    'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n    'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n    'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n    'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n    'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\nvar DATE_FORMATS$1 = {\n    // Keys are quoted so they do not get renamed.\n    'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n    'yy': datePartGetterFactory(digitCondition('year', 2)),\n    'y': datePartGetterFactory(digitCondition('year', 1)),\n    'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n    'MMM': datePartGetterFactory(nameCondition('month', 3)),\n    'MM': datePartGetterFactory(digitCondition('month', 2)),\n    'M': datePartGetterFactory(digitCondition('month', 1)),\n    'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n    'L': datePartGetterFactory(nameCondition('month', 1)),\n    'dd': datePartGetterFactory(digitCondition('day', 2)),\n    'd': datePartGetterFactory(digitCondition('day', 1)),\n    'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n    'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n    'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n    'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'jj': datePartGetterFactory(digitCondition('hour', 2)),\n    'j': datePartGetterFactory(digitCondition('hour', 1)),\n    'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n    'm': datePartGetterFactory(digitCondition('minute', 1)),\n    'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n    's': datePartGetterFactory(digitCondition('second', 1)),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit\n    // fractions\n    'sss': datePartGetterFactory(digitCondition('second', 3)),\n    'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n    'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n    'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n    'E': datePartGetterFactory(nameCondition('weekday', 1)),\n    'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'Z': timeZoneGetter$1('short'),\n    'z': timeZoneGetter$1('long'),\n    'ww': datePartGetterFactory({}),\n    // first Thursday of the year. not support ?\n    'w': datePartGetterFactory({}),\n    // of the year not support ?\n    'G': datePartGetterFactory(nameCondition('era', 1)),\n    'GG': datePartGetterFactory(nameCondition('era', 2)),\n    'GGG': datePartGetterFactory(nameCondition('era', 3)),\n    'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\nfunction digitModifier(inner) {\n    return function (date, locale) {\n        var result = inner(date, locale);\n        return result.length == 1 ? '0' + result : result;\n    };\n}\nfunction hourClockExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n}\nfunction hourExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n}\nfunction intlDateFormat(date, locale, options) {\n    return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\nfunction timeZoneGetter$1(timezone) {\n    // To workaround `Intl` API restriction for single timezone let format with 24 hours\n    var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n    return function (date, locale) {\n        var result = intlDateFormat(date, locale, options);\n        // Then extract first 3 letters that related to hours\n        return result ? result.substring(3) : '';\n    };\n}\nfunction hour12Modify(options, value) {\n    options.hour12 = value;\n    return options;\n}\nfunction digitCondition(prop, len) {\n    var result = {};\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\n    return result;\n}\nfunction nameCondition(prop, len) {\n    var result = {};\n    if (len < 4) {\n        result[prop] = len > 1 ? 'short' : 'narrow';\n    }\n    else {\n        result[prop] = 'long';\n    }\n    return result;\n}\nfunction combine(options) {\n    return options.reduce(function (merged, opt) { return (__assign({}, merged, opt)); }, {});\n}\nfunction datePartGetterFactory(ret) {\n    return function (date, locale) { return intlDateFormat(date, locale, ret); };\n}\nvar DATE_FORMATTER_CACHE = new Map();\nfunction dateFormatter(format, date, locale) {\n    var fn = PATTERN_ALIASES[format];\n    if (fn)\n        return fn(date, locale);\n    var cacheKey = format;\n    var parts = DATE_FORMATTER_CACHE.get(cacheKey);\n    if (!parts) {\n        parts = [];\n        var match = void 0;\n        DATE_FORMATS_SPLIT$1.exec(format);\n        var _format = format;\n        while (_format) {\n            match = DATE_FORMATS_SPLIT$1.exec(_format);\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                _format = parts.pop();\n            }\n            else {\n                parts.push(_format);\n                _format = null;\n            }\n        }\n        DATE_FORMATTER_CACHE.set(cacheKey, parts);\n    }\n    return parts.reduce(function (text, part) {\n        var fn = DATE_FORMATS$1[part];\n        return text + (fn ? fn(date, locale) : partToTime(part));\n    }, '');\n}\nfunction partToTime(part) {\n    return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nvar DateFormatter = /** @class */ (function () {\n    function DateFormatter() {\n    }\n    DateFormatter.format = function (date, locale, pattern) {\n        return dateFormatter(pattern, date, locale);\n    };\n    return DateFormatter;\n}());\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n  */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)\n * in the _local_ time and locale is 'en-US':\n *\n * {@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}\n *\n * @publicApi\n */\nvar DeprecatedDatePipe = /** @class */ (function () {\n    function DeprecatedDatePipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDatePipe_1 = DeprecatedDatePipe;\n    DeprecatedDatePipe.prototype.transform = function (value, pattern) {\n        if (pattern === void 0) { pattern = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        var date;\n        if (typeof value === 'string') {\n            value = value.trim();\n        }\n        if (isDate$1(value)) {\n            date = value;\n        }\n        else if (!isNaN(value - parseFloat(value))) {\n            date = new Date(parseFloat(value));\n        }\n        else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /**\n             * For ISO Strings without time the day, month and year must be extracted from the ISO String\n             * before Date creation to avoid time offset and errors in the new Date.\n             * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n             * date, some browsers (e.g. IE 9) will throw an invalid Date error\n             * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the\n             * timeoffset\n             * is applied\n             * Note: ISO months are 0 for January, 1 for February, ...\n             */\n            var _a = __read(value.split('-').map(function (val) { return parseInt(val, 10); }), 3), y = _a[0], m = _a[1], d = _a[2];\n            date = new Date(y, m - 1, d);\n        }\n        else {\n            date = new Date(value);\n        }\n        if (!isDate$1(date)) {\n            var match = void 0;\n            if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                date = isoStringToDate(match);\n            }\n            else {\n                throw invalidPipeArgumentError(DeprecatedDatePipe_1, value);\n            }\n        }\n        return DateFormatter.format(date, this._locale, DeprecatedDatePipe_1._ALIASES[pattern] || pattern);\n    };\n    var DeprecatedDatePipe_1;\n    /** @internal */\n    DeprecatedDatePipe._ALIASES = {\n        'medium': 'yMMMdjms',\n        'short': 'yMdjm',\n        'fullDate': 'yMMMMEEEEd',\n        'longDate': 'yMMMMd',\n        'mediumDate': 'yMMMd',\n        'shortDate': 'yMd',\n        'mediumTime': 'jms',\n        'shortTime': 'jm'\n    };\n    DeprecatedDatePipe = DeprecatedDatePipe_1 = __decorate([\n        Pipe({ name: 'date', pure: true }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedDatePipe);\n    return DeprecatedDatePipe;\n}());\nfunction isDate$1(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction formatNumber$1(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n    if (currency === void 0) { currency = null; }\n    if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n    if (value == null)\n        return null;\n    // Convert strings to numbers\n    value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n    if (typeof value !== 'number') {\n        throw invalidPipeArgumentError(pipe, value);\n    }\n    var minInt;\n    var minFraction;\n    var maxFraction;\n    if (style !== NumberFormatStyle.Currency) {\n        // rely on Intl default for currency\n        minInt = 1;\n        minFraction = 0;\n        maxFraction = 3;\n    }\n    if (digits) {\n        var parts = digits.match(NUMBER_FORMAT_REGEXP);\n        if (parts === null) {\n            throw new Error(digits + \" is not a valid digit info for number pipes\");\n        }\n        if (parts[1] != null) { // min integer digits\n            minInt = parseIntAutoRadix(parts[1]);\n        }\n        if (parts[3] != null) { // min fraction digits\n            minFraction = parseIntAutoRadix(parts[3]);\n        }\n        if (parts[5] != null) { // max fraction digits\n            maxFraction = parseIntAutoRadix(parts[5]);\n        }\n    }\n    return NumberFormatter.format(value, locale, style, {\n        minimumIntegerDigits: minInt,\n        minimumFractionDigits: minFraction,\n        maximumFractionDigits: maxFraction,\n        currency: currency,\n        currencyAsSymbol: currencyAsSymbol,\n    });\n}\n/**\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar DeprecatedDecimalPipe = /** @class */ (function () {\n    function DeprecatedDecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDecimalPipe_1 = DeprecatedDecimalPipe;\n    DeprecatedDecimalPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedDecimalPipe_1, this._locale, value, NumberFormatStyle.Decimal, digits);\n    };\n    var DeprecatedDecimalPipe_1;\n    DeprecatedDecimalPipe = DeprecatedDecimalPipe_1 = __decorate([\n        Pipe({ name: 'number' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedDecimalPipe);\n    return DeprecatedDecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Formats a number as percentage according to locale rules.\n *\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}\n *\n * @publicApi\n */\nvar DeprecatedPercentPipe = /** @class */ (function () {\n    function DeprecatedPercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedPercentPipe_1 = DeprecatedPercentPipe;\n    DeprecatedPercentPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedPercentPipe_1, this._locale, value, NumberFormatStyle.Percent, digits);\n    };\n    var DeprecatedPercentPipe_1;\n    DeprecatedPercentPipe = DeprecatedPercentPipe_1 = __decorate([\n        Pipe({ name: 'percent' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedPercentPipe);\n    return DeprecatedPercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}\n *\n * @publicApi\n */\nvar DeprecatedCurrencyPipe = /** @class */ (function () {\n    function DeprecatedCurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedCurrencyPipe_1 = DeprecatedCurrencyPipe;\n    DeprecatedCurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n        if (currencyCode === void 0) { currencyCode = 'USD'; }\n        if (symbolDisplay === void 0) { symbolDisplay = false; }\n        return formatNumber$1(DeprecatedCurrencyPipe_1, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n    };\n    var DeprecatedCurrencyPipe_1;\n    DeprecatedCurrencyPipe = DeprecatedCurrencyPipe_1 = __decorate([\n        Pipe({ name: 'currency' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedCurrencyPipe);\n    return DeprecatedCurrencyPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of deprecated i18n pipes that require intl api\n *\n * @deprecated from v5\n */\nvar COMMON_DEPRECATED_I18N_PIPES = [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ObservableStrategy = /** @class */ (function () {\n    function ObservableStrategy() {\n    }\n    ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n    };\n    ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n    ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n    return ObservableStrategy;\n}());\nvar PromiseStrategy = /** @class */ (function () {\n    function PromiseStrategy() {\n    }\n    PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.then(updateLatestValue, function (e) { throw e; });\n    };\n    PromiseStrategy.prototype.dispose = function (subscription) { };\n    PromiseStrategy.prototype.onDestroy = function (subscription) { };\n    return PromiseStrategy;\n}());\nvar _promiseStrategy = new PromiseStrategy();\nvar _observableStrategy = new ObservableStrategy();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * @publicApi\n */\nvar AsyncPipe = /** @class */ (function () {\n    function AsyncPipe(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = null;\n    }\n    AsyncPipe_1 = AsyncPipe;\n    AsyncPipe.prototype.ngOnDestroy = function () {\n        if (this._subscription) {\n            this._dispose();\n        }\n    };\n    AsyncPipe.prototype.transform = function (obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(obj);\n        }\n        if (ÉµlooseIdentical(this._latestValue, this._latestReturnedValue)) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    };\n    AsyncPipe.prototype._subscribe = function (obj) {\n        var _this = this;\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n    };\n    AsyncPipe.prototype._selectStrategy = function (obj) {\n        if (ÉµisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (ÉµisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe_1, obj);\n    };\n    AsyncPipe.prototype._dispose = function () {\n        this._strategy.dispose(this._subscription);\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    };\n    AsyncPipe.prototype._updateLatestValue = function (async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    };\n    var AsyncPipe_1;\n    AsyncPipe = AsyncPipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'async', pure: false }),\n        __metadata(\"design:paramtypes\", [ChangeDetectorRef])\n    ], AsyncPipe);\n    return AsyncPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms text to all lower case.\n *\n * @see `UpperCasePipe`\n * @see `TitleCasePipe`\n * @usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar LowerCasePipe = /** @class */ (function () {\n    function LowerCasePipe() {\n    }\n    LowerCasePipe_1 = LowerCasePipe;\n    /**\n     * @param value The string to transform to lower case.\n     */\n    LowerCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe_1, value);\n        }\n        return value.toLowerCase();\n    };\n    var LowerCasePipe_1;\n    LowerCasePipe = LowerCasePipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'lowercase' })\n    ], LowerCasePipe);\n    return LowerCasePipe;\n}());\n//\n// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result\n// can be achieved by using /\\p{L}\\S*/gu and also known as Unicode Property Escapes\n// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\n//\nvar unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word, and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see `LowerCasePipe`\n * @see `UpperCasePipe`\n *\n * @usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar TitleCasePipe = /** @class */ (function () {\n    function TitleCasePipe() {\n    }\n    TitleCasePipe_1 = TitleCasePipe;\n    /**\n     * @param value The string to transform to title case.\n     */\n    TitleCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe_1, value);\n        }\n        return value.replace(unicodeWordMatch, (function (txt) { return txt[0].toUpperCase() + txt.substr(1).toLowerCase(); }));\n    };\n    var TitleCasePipe_1;\n    TitleCasePipe = TitleCasePipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'titlecase' })\n    ], TitleCasePipe);\n    return TitleCasePipe;\n}());\n/**\n * Transforms text to all upper case.\n * @see `LowerCasePipe`\n * @see `TitleCasePipe`\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar UpperCasePipe = /** @class */ (function () {\n    function UpperCasePipe() {\n    }\n    UpperCasePipe_1 = UpperCasePipe;\n    /**\n     * @param value The string to transform to upper case.\n     */\n    UpperCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe_1, value);\n        }\n        return value.toUpperCase();\n    };\n    var UpperCasePipe_1;\n    UpperCasePipe = UpperCasePipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'uppercase' })\n    ], UpperCasePipe);\n    return UpperCasePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date value according to locale rules.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\n *\n * @see `formatDate()`\n *\n *\n * @usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * Examples are given in `en-US` locale.\n *\n * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).\n * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).\n * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM\n * GMT+1`).\n * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`).\n * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).\n * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).\n * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).\n * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).\n * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).\n * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).\n * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).\n * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n * Note that timezone correction is not applied to an ISO string that has no time component, such as \"2016-09-19\"\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mm:ss' }}       // output is '43:11'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```\n * @Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * @publicApi\n */\n// clang-format on\nvar DatePipe = /** @class */ (function () {\n    function DatePipe(locale) {\n        this.locale = locale;\n    }\n    DatePipe_1 = DatePipe;\n    /**\n     * @param value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation. Default is\n     * the local system timezone of the end-user's machine.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @returns A date string in the desired format.\n     */\n    DatePipe.prototype.transform = function (value, format, timezone, locale) {\n        if (format === void 0) { format = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DatePipe_1, error.message);\n        }\n    };\n    var DatePipe_1;\n    DatePipe = DatePipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'date', pure: true }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DatePipe);\n    return DatePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _INTERPOLATION_REGEXP = /#/g;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @publicApi\n */\nvar I18nPluralPipe = /** @class */ (function () {\n    function I18nPluralPipe(_localization) {\n        this._localization = _localization;\n    }\n    I18nPluralPipe_1 = I18nPluralPipe;\n    /**\n     * @param value the number to be formatted\n     * @param pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    I18nPluralPipe.prototype.transform = function (value, pluralMap, locale) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe_1, pluralMap);\n        }\n        var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    };\n    var I18nPluralPipe_1;\n    I18nPluralPipe = I18nPluralPipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'i18nPlural', pure: true }),\n        __metadata(\"design:paramtypes\", [NgLocalization])\n    ], I18nPluralPipe);\n    return I18nPluralPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @publicApi\n */\nvar I18nSelectPipe = /** @class */ (function () {\n    function I18nSelectPipe() {\n    }\n    I18nSelectPipe_1 = I18nSelectPipe;\n    /**\n     * @param value a string to be internationalized.\n     * @param mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     */\n    I18nSelectPipe.prototype.transform = function (value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe_1, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    };\n    var I18nSelectPipe_1;\n    I18nSelectPipe = I18nSelectPipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'i18nSelect', pure: true })\n    ], I18nSelectPipe);\n    return I18nSelectPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\nvar JsonPipe = /** @class */ (function () {\n    function JsonPipe() {\n    }\n    /**\n     * @param value A value of any type to convert into a JSON-format string.\n     */\n    JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n    JsonPipe = __decorate([\n        Injectable(),\n        Pipe({ name: 'json', pure: false })\n    ], JsonPipe);\n    return JsonPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction makeKeyValuePair(key, value) {\n    return { key: key, value: value };\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this keyvalue\n * pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\nvar KeyValuePipe = /** @class */ (function () {\n    function KeyValuePipe(differs) {\n        this.differs = differs;\n        this.keyValues = [];\n    }\n    KeyValuePipe.prototype.transform = function (input, compareFn) {\n        var _this = this;\n        if (compareFn === void 0) { compareFn = defaultComparator; }\n        if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n            return null;\n        }\n        if (!this.differ) {\n            // make a differ for whatever type we've been passed in\n            this.differ = this.differs.find(input).create();\n        }\n        var differChanges = this.differ.diff(input);\n        if (differChanges) {\n            this.keyValues = [];\n            differChanges.forEachItem(function (r) {\n                _this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));\n            });\n            this.keyValues.sort(compareFn);\n        }\n        return this.keyValues;\n    };\n    KeyValuePipe = __decorate([\n        Injectable(),\n        Pipe({ name: 'keyvalue', pure: false }),\n        __metadata(\"design:paramtypes\", [KeyValueDiffers])\n    ], KeyValuePipe);\n    return KeyValuePipe;\n}());\nfunction defaultComparator(keyValueA, keyValueB) {\n    var a = keyValueA.key;\n    var b = keyValueB.key;\n    // if same exit with 0;\n    if (a === b)\n        return 0;\n    // make sure that undefined are at the end of the sort.\n    if (a === undefined)\n        return 1;\n    if (b === undefined)\n        return -1;\n    // make sure that nulls are at the end of the sort.\n    if (a === null)\n        return 1;\n    if (b === null)\n        return -1;\n    if (typeof a == 'string' && typeof b == 'string') {\n        return a < b ? -1 : 1;\n    }\n    if (typeof a == 'number' && typeof b == 'number') {\n        return a - b;\n    }\n    if (typeof a == 'boolean' && typeof b == 'boolean') {\n        return a < b ? -1 : 1;\n    }\n    // `a` and `b` are of different types. Compare their string values.\n    var aString = String(a);\n    var bString = String(b);\n    return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number into a string,\n * formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * If no parameters are specified, the function rounds off to the nearest value using this\n * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).\n * The behavior differs from that of the JavaScript ```Math.round()``` function.\n * In the following case for example, the pipe rounds down where\n * ```Math.round()``` rounds up:\n *\n * ```html\n * -2.5 | number:'1.0-0'\n * > -3\n * Math.round(-2.5)\n * > -2\n * ```\n *\n * @see `formatNumber()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * ### Example\n *\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\n *\n * @publicApi\n */\nvar DecimalPipe = /** @class */ (function () {\n    function DecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    DecimalPipe_1 = DecimalPipe;\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    DecimalPipe.prototype.transform = function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatNumber(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DecimalPipe_1, error.message);\n        }\n    };\n    var DecimalPipe_1;\n    DecimalPipe = DecimalPipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'number' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DecimalPipe);\n    return DecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see `formatPercent()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\n *\n * @publicApi\n */\nvar PercentPipe = /** @class */ (function () {\n    function PercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    PercentPipe_1 = PercentPipe;\n    /**\n     *\n     * @param value The number to be formatted as a percentage.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `0`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    PercentPipe.prototype.transform = function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatPercent(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(PercentPipe_1, error.message);\n        }\n    };\n    var PercentPipe_1;\n    PercentPipe = PercentPipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'percent' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], PercentPipe);\n    return PercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n * @see `getCurrencySymbol()`\n * @see `formatCurrency()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\n *\n * @publicApi\n */\nvar CurrencyPipe = /** @class */ (function () {\n    function CurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    CurrencyPipe_1 = CurrencyPipe;\n    /**\n     *\n     * @param value The number to be formatted as currency.\n     * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `2`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `2`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    CurrencyPipe.prototype.transform = function (value, currencyCode, display, digitsInfo, locale) {\n        if (display === void 0) { display = 'symbol'; }\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        if (typeof display === 'boolean') {\n            if (console && console.warn) {\n                console.warn(\"Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \\\"code\\\", \\\"symbol\\\" or \\\"symbol-narrow\\\".\");\n            }\n            display = display ? 'symbol' : 'code';\n        }\n        var currency = currencyCode || 'USD';\n        if (display !== 'code') {\n            if (display === 'symbol' || display === 'symbol-narrow') {\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n            }\n            else {\n                currency = display;\n            }\n        }\n        try {\n            var num = strToNumber(value);\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(CurrencyPipe_1, error.message);\n        }\n    };\n    var CurrencyPipe_1;\n    CurrencyPipe = CurrencyPipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'currency' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], CurrencyPipe);\n    return CurrencyPipe;\n}());\nfunction isEmpty(value) {\n    return value == null || value === '' || value !== value;\n}\n/**\n * Transforms a string into a number (if needed).\n */\nfunction strToNumber(value) {\n    // Convert strings to numbers\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n    if (typeof value !== 'number') {\n        throw new Error(value + \" is not a number\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * @usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * @publicApi\n */\nvar SlicePipe = /** @class */ (function () {\n    function SlicePipe() {\n    }\n    SlicePipe_1 = SlicePipe;\n    SlicePipe.prototype.transform = function (value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe_1, value);\n        }\n        return value.slice(start, end);\n    };\n    SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n    var SlicePipe_1;\n    SlicePipe = SlicePipe_1 = __decorate([\n        Injectable(),\n        Pipe({ name: 'slice', pure: false })\n    ], SlicePipe);\n    return SlicePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nvar COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n * @publicApi\n */\nvar CommonModule = /** @class */ (function () {\n    function CommonModule() {\n    }\n    CommonModule = __decorate([\n        NgModule({\n            declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n            exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n            providers: [\n                { provide: NgLocalization, useClass: NgLocaleLocalization },\n            ],\n        })\n    ], CommonModule);\n    return CommonModule;\n}());\nvar Éµ0$2 = getPluralCase;\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n * @publicApi\n */\nvar DeprecatedI18NPipesModule = /** @class */ (function () {\n    function DeprecatedI18NPipesModule() {\n    }\n    DeprecatedI18NPipesModule = __decorate([\n        NgModule({\n            declarations: [COMMON_DEPRECATED_I18N_PIPES],\n            exports: [COMMON_DEPRECATED_I18N_PIPES],\n            providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: Éµ0$2 }],\n        })\n    ], DeprecatedI18NPipesModule);\n    return DeprecatedI18NPipesModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @publicApi\n */\nvar DOCUMENT = new InjectionToken('DocumentToken');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PLATFORM_BROWSER_ID = 'browser';\nvar PLATFORM_SERVER_ID = 'server';\nvar PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nvar PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nfunction isPlatformBrowser(platformId) {\n    return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nfunction isPlatformServer(platformId) {\n    return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @publicApi\n */\nfunction isPlatformWorkerApp(platformId) {\n    return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @publicApi\n */\nfunction isPlatformWorkerUi(platformId) {\n    return platformId === PLATFORM_WORKER_UI_ID;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('8.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\n *\n * @publicApi\n */\nvar ViewportScroller = /** @class */ (function () {\n    function ViewportScroller() {\n    }\n    // De-sugared tree-shakable injection\n    // See #23917\n    /** @nocollapse */\n    ViewportScroller.ngInjectableDef = ÉµÉµdefineInjectable({\n        token: ViewportScroller,\n        providedIn: 'root',\n        factory: function () { return new BrowserViewportScroller(ÉµÉµinject(DOCUMENT), window, ÉµÉµinject(ErrorHandler)); }\n    });\n    return ViewportScroller;\n}());\n/**\n * Manages the scroll position for a browser window.\n */\nvar BrowserViewportScroller = /** @class */ (function () {\n    function BrowserViewportScroller(document, window, errorHandler) {\n        this.document = document;\n        this.window = window;\n        this.errorHandler = errorHandler;\n        this.offset = function () { return [0, 0]; };\n    }\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     * @param offset A position in screen coordinates (a tuple with x and y values)\n     * or a function that returns the top offset position.\n     *\n     */\n    BrowserViewportScroller.prototype.setOffset = function (offset) {\n        if (Array.isArray(offset)) {\n            this.offset = function () { return offset; };\n        }\n        else {\n            this.offset = offset;\n        }\n    };\n    /**\n     * Retrieves the current scroll position.\n     * @returns The position in screen coordinates.\n     */\n    BrowserViewportScroller.prototype.getScrollPosition = function () {\n        if (this.supportScrollRestoration()) {\n            return [this.window.scrollX, this.window.scrollY];\n        }\n        else {\n            return [0, 0];\n        }\n    };\n    /**\n     * Sets the scroll position.\n     * @param position The new position in screen coordinates.\n     */\n    BrowserViewportScroller.prototype.scrollToPosition = function (position) {\n        if (this.supportScrollRestoration()) {\n            this.window.scrollTo(position[0], position[1]);\n        }\n    };\n    /**\n     * Scrolls to an anchor element.\n     * @param anchor The ID of the anchor element.\n     */\n    BrowserViewportScroller.prototype.scrollToAnchor = function (anchor) {\n        if (this.supportScrollRestoration()) {\n            // Escape anything passed to `querySelector` as it can throw errors and stop the application\n            // from working if invalid values are passed.\n            if (this.window.CSS && this.window.CSS.escape) {\n                anchor = this.window.CSS.escape(anchor);\n            }\n            else {\n                anchor = anchor.replace(/(\\\"|\\'\\ |:|\\.|\\[|\\]|,|=)/g, '\\\\$1');\n            }\n            try {\n                var elSelectedById = this.document.querySelector(\"#\" + anchor);\n                if (elSelectedById) {\n                    this.scrollToElement(elSelectedById);\n                    return;\n                }\n                var elSelectedByName = this.document.querySelector(\"[name='\" + anchor + \"']\");\n                if (elSelectedByName) {\n                    this.scrollToElement(elSelectedByName);\n                    return;\n                }\n            }\n            catch (e) {\n                this.errorHandler.handleError(e);\n            }\n        }\n    };\n    /**\n     * Disables automatic scroll restoration provided by the browser.\n     */\n    BrowserViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) {\n        if (this.supportScrollRestoration()) {\n            var history_1 = this.window.history;\n            if (history_1 && history_1.scrollRestoration) {\n                history_1.scrollRestoration = scrollRestoration;\n            }\n        }\n    };\n    BrowserViewportScroller.prototype.scrollToElement = function (el) {\n        var rect = el.getBoundingClientRect();\n        var left = rect.left + this.window.pageXOffset;\n        var top = rect.top + this.window.pageYOffset;\n        var offset = this.offset();\n        this.window.scrollTo(left - offset[0], top - offset[1]);\n    };\n    /**\n     * We only support scroll restoration when we can get a hold of window.\n     * This means that we do not support this behavior when running in a web worker.\n     *\n     * Lifting this restriction right now would require more changes in the dom adapter.\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\n     * battle-tested.\n     */\n    BrowserViewportScroller.prototype.supportScrollRestoration = function () {\n        try {\n            return !!this.window && !!this.window.scrollTo;\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n    return BrowserViewportScroller;\n}());\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in @angular/common as it will be used by both platform-server and platform-webworker.\n */\nvar NullViewportScroller = /** @class */ (function () {\n    function NullViewportScroller() {\n    }\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.setOffset = function (offset) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.getScrollPosition = function () { return [0, 0]; };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.scrollToPosition = function (position) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.scrollToAnchor = function (anchor) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) { };\n    return NullViewportScroller;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COMMON_DIRECTIVES as Éµangular_packages_common_common_c, NgClassImplProvider as Éµangular_packages_common_common_h, NgClassImplProvider__PRE_R3__ as Éµangular_packages_common_common_g, NgClassR3Impl as Éµangular_packages_common_common_f, NgStyleImplProvider as Éµangular_packages_common_common_k, NgStyleImplProvider__PRE_R3__ as Éµangular_packages_common_common_j, NgStyleR3Impl as Éµangular_packages_common_common_i, DEPRECATED_PLURAL_FN as Éµangular_packages_common_common_a, getPluralCase as Éµangular_packages_common_common_b, COMMON_DEPRECATED_I18N_PIPES as Éµangular_packages_common_common_e, COMMON_PIPES as Éµangular_packages_common_common_d, registerLocaleData as ÉµregisterLocaleData, registerLocaleData, formatDate, formatCurrency, formatNumber, formatPercent, NgLocaleLocalization, NgLocalization, Plural, NumberFormatStyle, FormStyle, TranslationWidth, FormatWidth, NumberSymbol, WeekDay, getNumberOfCurrencyDigits, getCurrencySymbol, getLocaleDayPeriods, getLocaleDayNames, getLocaleMonthNames, getLocaleId, getLocaleEraNames, getLocaleWeekEndRange, getLocaleFirstDayOfWeek, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocalePluralCase, getLocaleTimeFormat, getLocaleNumberSymbol, getLocaleNumberFormat, getLocaleCurrencyName, getLocaleCurrencySymbol, parseCookieValue as ÉµparseCookieValue, CommonModule, DeprecatedI18NPipesModule, NgClass, NgClassBase, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgStyleBase, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NgComponentOutlet, DOCUMENT, AsyncPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, SlicePipe, UpperCasePipe, TitleCasePipe, KeyValuePipe, DeprecatedDatePipe, DeprecatedCurrencyPipe, DeprecatedDecimalPipe, DeprecatedPercentPipe, PLATFORM_BROWSER_ID as ÉµPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ÉµPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ÉµPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ÉµPLATFORM_WORKER_UI_ID, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, VERSION, ViewportScroller, NullViewportScroller as ÉµNullViewportScroller, NgClassImplProvider__POST_R3__ as ÉµNgClassImplProvider__POST_R3__, NgClassR2Impl as ÉµNgClassR2Impl, NgClassImpl as ÉµNgClassImpl, NgStyleImplProvider__POST_R3__ as ÉµNgStyleImplProvider__POST_R3__, NgStyleR2Impl as ÉµNgStyleR2Impl, NgStyleImpl as ÉµNgStyleImpl, ngStyleDirectiveDef__POST_R3__ as ÉµngStyleDirectiveDef__POST_R3__, ngClassDirectiveDef__POST_R3__ as ÉµngClassDirectiveDef__POST_R3__, PlatformLocation, LOCATION_INITIALIZED, LocationStrategy, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, Location };\n//# sourceMappingURL=common.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray(args);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction EmptyErrorImpl() {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n}\nEmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var EmptyError = EmptyErrorImpl;\n//# sourceMappingURL=EmptyError.js.map\n","/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n    return new Observable(function (subscriber) {\n        var input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map\n","/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ArgumentOutOfRangeErrorImpl() {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n}\nArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map\n","/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { EmptyError } from '../util/EmptyError';\nimport { Subscriber } from '../Subscriber';\nexport function throwIfEmpty(errorFactory) {\n    if (errorFactory === void 0) {\n        errorFactory = defaultErrorFactory;\n    }\n    return function (source) {\n        return source.lift(new ThrowIfEmptyOperator(errorFactory));\n    };\n}\nvar ThrowIfEmptyOperator = /*@__PURE__*/ (function () {\n    function ThrowIfEmptyOperator(errorFactory) {\n        this.errorFactory = errorFactory;\n    }\n    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n    };\n    return ThrowIfEmptyOperator;\n}());\nvar ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrowIfEmptySubscriber, _super);\n    function ThrowIfEmptySubscriber(destination, errorFactory) {\n        var _this = _super.call(this, destination) || this;\n        _this.errorFactory = errorFactory;\n        _this.hasValue = false;\n        return _this;\n    }\n    ThrowIfEmptySubscriber.prototype._next = function (value) {\n        this.hasValue = true;\n        this.destination.next(value);\n    };\n    ThrowIfEmptySubscriber.prototype._complete = function () {\n        if (!this.hasValue) {\n            var err = void 0;\n            try {\n                err = this.errorFactory();\n            }\n            catch (e) {\n                err = e;\n            }\n            this.destination.error(err);\n        }\n        else {\n            return this.destination.complete();\n        }\n    };\n    return ThrowIfEmptySubscriber;\n}(Subscriber));\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\nexport function last(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=last.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n            this.add(innerSubscriber);\n            subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=first.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = subscribeToResult(this, result, value, index, innerSubscriber);\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n        this.unsubscribe();\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n","/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */\nimport { of } from './of';\nimport { concatAll } from '../operators/concatAll';\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nexport function finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nvar FinallyOperator = /*@__PURE__*/ (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber));\n//# sourceMappingURL=finalize.js.map\n","/**\n * @license Angular v8.2.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __extends, __spread, __decorate, __param, __metadata, __assign } from 'tslib';\nimport { ÉµparseCookieValue, DOCUMENT, PlatformLocation, isPlatformServer, CommonModule, ÉµPLATFORM_BROWSER_ID } from '@angular/common';\nimport { Éµglobal, Injectable, Inject, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, NgProbeToken, Optional, ApplicationRef, NgZone, getDebugNode, ViewEncapsulation, APP_ID, RendererStyleFlags2, PLATFORM_ID, ÉµConsole, SecurityContext, Éµ_sanitizeHtml, Éµ_sanitizeStyle, Éµ_sanitizeUrl, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ErrorHandler, ÉµAPP_ROOT, RendererFactory2, Testability, NgModule, ApplicationModule, SkipSelf, ÉµÉµinject, ÉµÉµdefineInjectable, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _DOM = null;\nfunction getDOM() {\n    return _DOM;\n}\nfunction setRootDomAdapter(adapter) {\n    if (!_DOM) {\n        _DOM = adapter;\n    }\n}\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar DomAdapter = /** @class */ (function () {\n    function DomAdapter() {\n        this.resourceLoaderType = null;\n    }\n    Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n        /**\n         * Maps attribute names to their corresponding property names for cases\n         * where attribute name doesn't match property name.\n         */\n        get: function () { return this._attrToPropMap; },\n        set: function (value) { this._attrToPropMap = value; },\n        enumerable: true,\n        configurable: true\n    });\n    return DomAdapter;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar GenericBrowserDomAdapter = /** @class */ (function (_super) {\n    __extends(GenericBrowserDomAdapter, _super);\n    function GenericBrowserDomAdapter() {\n        var _this = _super.call(this) || this;\n        _this._animationPrefix = null;\n        _this._transitionEnd = null;\n        try {\n            var element_1 = _this.createElement('div', document);\n            if (_this.getStyle(element_1, 'animationName') != null) {\n                _this._animationPrefix = '';\n            }\n            else {\n                var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                for (var i = 0; i < domPrefixes.length; i++) {\n                    if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {\n                        _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                        break;\n                    }\n                }\n            }\n            var transEndEventNames_1 = {\n                WebkitTransition: 'webkitTransitionEnd',\n                MozTransition: 'transitionend',\n                OTransition: 'oTransitionEnd otransitionend',\n                transition: 'transitionend'\n            };\n            Object.keys(transEndEventNames_1).forEach(function (key) {\n                if (_this.getStyle(element_1, key) != null) {\n                    _this._transitionEnd = transEndEventNames_1[key];\n                }\n            });\n        }\n        catch (_a) {\n            _this._animationPrefix = null;\n            _this._transitionEnd = null;\n        }\n        return _this;\n    }\n    GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\n    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n    };\n    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n        return typeof document.body.createShadowRoot === 'function';\n    };\n    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n    GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n    GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n        return this._animationPrefix != null && this._transitionEnd != null;\n    };\n    return GenericBrowserDomAdapter;\n}(DomAdapter));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _attrToPropMap = {\n    'class': 'className',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nvar _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nvar _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nvar Éµ0 = function () {\n    if (Éµglobal['Node']) {\n        return Éµglobal['Node'].prototype.contains || function (node) {\n            return !!(this.compareDocumentPosition(node) & 16);\n        };\n    }\n    return undefined;\n};\nvar nodeContains = (Éµ0)();\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nvar BrowserDomAdapter = /** @class */ (function (_super) {\n    __extends(BrowserDomAdapter, _super);\n    function BrowserDomAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n    BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n    BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n    BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\n    BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\n    BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {\n        var _a;\n        (_a = el)[methodName].apply(_a, __spread(args));\n    };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    BrowserDomAdapter.prototype.logError = function (error) {\n        if (window.console) {\n            if (console.error) {\n                console.error(error);\n            }\n            else {\n                console.log(error);\n            }\n        }\n    };\n    BrowserDomAdapter.prototype.log = function (error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    };\n    BrowserDomAdapter.prototype.logGroup = function (error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    };\n    BrowserDomAdapter.prototype.logGroupEnd = function () {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    };\n    Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n        get: function () { return _attrToPropMap; },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserDomAdapter.prototype.contains = function (nodeA, nodeB) { return nodeContains.call(nodeA, nodeB); };\n    BrowserDomAdapter.prototype.querySelector = function (el, selector) { return el.querySelector(selector); };\n    BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n    BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n    BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return function () { el.removeEventListener(evt, listener, false); };\n    };\n    BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n    BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n        var evt = this.getDefaultDocument().createEvent('MouseEvent');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    BrowserDomAdapter.prototype.createEvent = function (eventType) {\n        var evt = this.getDefaultDocument().createEvent('Event');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    BrowserDomAdapter.prototype.preventDefault = function (evt) {\n        evt.preventDefault();\n        evt.returnValue = false;\n    };\n    BrowserDomAdapter.prototype.isPrevented = function (evt) {\n        return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n    };\n    BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n    BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n        return 'content' in el && this.isTemplateElement(el) ? el.content : null;\n    };\n    BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n    BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n    BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n    BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n    BrowserDomAdapter.prototype.content = function (node) {\n        if (this.hasProperty(node, 'content')) {\n            return node.content;\n        }\n        else {\n            return node;\n        }\n    };\n    BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n    BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n    BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n    BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n    BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n        var childNodes = el.childNodes;\n        var res = new Array(childNodes.length);\n        for (var i = 0; i < childNodes.length; i++) {\n            res[i] = childNodes[i];\n        }\n        return res;\n    };\n    BrowserDomAdapter.prototype.clearNodes = function (el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n    };\n    BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n    BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n    BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n    BrowserDomAdapter.prototype.remove = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    };\n    BrowserDomAdapter.prototype.insertBefore = function (parent, ref, node) { parent.insertBefore(node, ref); };\n    BrowserDomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) {\n        nodes.forEach(function (n) { return parent.insertBefore(n, ref); });\n    };\n    BrowserDomAdapter.prototype.insertAfter = function (parent, ref, node) { parent.insertBefore(node, ref.nextSibling); };\n    BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n    BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n    BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n    BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n    BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n    BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n    BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n    BrowserDomAdapter.prototype.createComment = function (text) { return this.getDefaultDocument().createComment(text); };\n    BrowserDomAdapter.prototype.createTemplate = function (html) {\n        var t = this.getDefaultDocument().createElement('template');\n        t.innerHTML = html;\n        return t;\n    };\n    BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    };\n    BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElementNS(ns, tagName);\n    };\n    BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createTextNode(text);\n    };\n    BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n        doc = doc || this.getDefaultDocument();\n        var el = doc.createElement('SCRIPT');\n        el.setAttribute(attrName, attrValue);\n        return el;\n    };\n    BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n        doc = doc || this.getDefaultDocument();\n        var style = doc.createElement('style');\n        this.appendChild(style, this.createTextNode(css, doc));\n        return style;\n    };\n    BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\n    BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\n    BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\n    BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n    BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n        return element.getElementsByClassName(name);\n    };\n    BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n        return element.getElementsByTagName(name);\n    };\n    BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n    BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n    BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n    BrowserDomAdapter.prototype.hasClass = function (element, className) {\n        return element.classList.contains(className);\n    };\n    BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n        element.style[styleName] = styleValue;\n    };\n    BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        element.style[stylename] = '';\n    };\n    BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n    BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n        var value = this.getStyle(element, styleName) || '';\n        return styleValue ? value == styleValue : value.length > 0;\n    };\n    BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n    BrowserDomAdapter.prototype.attributeMap = function (element) {\n        var res = new Map();\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var attrib = elAttrs.item(i);\n            res.set(attrib.name, attrib.value);\n        }\n        return res;\n    };\n    BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n        return element.hasAttribute(attribute);\n    };\n    BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n        return element.hasAttributeNS(ns, attribute);\n    };\n    BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n        return element.getAttribute(attribute);\n    };\n    BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n        return element.getAttributeNS(ns, name);\n    };\n    BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n    BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n        element.setAttributeNS(ns, name, value);\n    };\n    BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n    BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n        element.removeAttributeNS(ns, name);\n    };\n    BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n    BrowserDomAdapter.prototype.createHtmlDocument = function () {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    };\n    BrowserDomAdapter.prototype.getDefaultDocument = function () { return document; };\n    BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n        try {\n            return el.getBoundingClientRect();\n        }\n        catch (_a) {\n            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n        }\n    };\n    BrowserDomAdapter.prototype.getTitle = function (doc) { return doc.title; };\n    BrowserDomAdapter.prototype.setTitle = function (doc, newTitle) { doc.title = newTitle || ''; };\n    BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n        if (this.isElementNode(n)) {\n            return n.matches && n.matches(selector) ||\n                n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n        }\n        return false;\n    };\n    BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n        return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n    };\n    BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n    BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n    BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n    BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n        return node.shadowRoot != null && node instanceof HTMLElement;\n    };\n    BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n    BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n    BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n    BrowserDomAdapter.prototype.getHref = function (el) { return el.getAttribute('href'); };\n    BrowserDomAdapter.prototype.getEventKey = function (event) {\n        var key = event.key;\n        if (key == null) {\n            key = event.keyIdentifier;\n            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n            // Safari cf\n            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n            if (key == null) {\n                return 'Unidentified';\n            }\n            if (key.startsWith('U+')) {\n                key = String.fromCharCode(parseInt(key.substring(2), 16));\n                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                    // There is a bug in Chrome for numeric keypad keys:\n                    // https://code.google.com/p/chromium/issues/detail?id=155654\n                    // 1, 2, 3 ... are reported as A, B, C ...\n                    key = _chromeNumKeyPadMap[key];\n                }\n            }\n        }\n        return _keyMap[key] || key;\n    };\n    BrowserDomAdapter.prototype.getGlobalEventTarget = function (doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    };\n    BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n    BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n    BrowserDomAdapter.prototype.getBaseHref = function (doc) {\n        var href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    };\n    BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n    BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n    BrowserDomAdapter.prototype.setData = function (element, name, value) {\n        this.setAttribute(element, 'data-' + name, value);\n    };\n    BrowserDomAdapter.prototype.getData = function (element, name) {\n        return this.getAttribute(element, 'data-' + name);\n    };\n    BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n        return typeof Element.prototype['animate'] === 'function';\n    };\n    BrowserDomAdapter.prototype.performanceNow = function () {\n        // performance.now() is not available in all browsers, see\n        // http://caniuse.com/#search=performance.now\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    };\n    BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n    BrowserDomAdapter.prototype.getCookie = function (name) { return ÉµparseCookieValue(document.cookie, name); };\n    BrowserDomAdapter.prototype.setCookie = function (name, value) {\n        // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n        // not clear other cookies.\n        document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    };\n    return BrowserDomAdapter;\n}(GenericBrowserDomAdapter));\nvar baseElement = null;\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = document.querySelector('base');\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n// based on urlUtils.js in AngularJS 1\nvar urlParsingNode;\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction supportsState() {\n    return !!window.history.pushState;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\nvar BrowserPlatformLocation = /** @class */ (function (_super) {\n    __extends(BrowserPlatformLocation, _super);\n    function BrowserPlatformLocation(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._init();\n        return _this;\n    }\n    // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n    /** @internal */\n    BrowserPlatformLocation.prototype._init = function () {\n        this.location = getDOM().getLocation();\n        this._history = getDOM().getHistory();\n    };\n    BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(this._doc); };\n    BrowserPlatformLocation.prototype.onPopState = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    };\n    BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    };\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"href\", {\n        get: function () { return this.location.href; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"protocol\", {\n        get: function () { return this.location.protocol; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"hostname\", {\n        get: function () { return this.location.hostname; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"port\", {\n        get: function () { return this.location.port; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n        get: function () { return this.location.pathname; },\n        set: function (newPath) { this.location.pathname = newPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n        get: function () { return this.location.search; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n        get: function () { return this.location.hash; },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.pushState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.replaceState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n    BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n    BrowserPlatformLocation.prototype.getState = function () { return this._history.state; };\n    BrowserPlatformLocation = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BrowserPlatformLocation);\n    return BrowserPlatformLocation;\n}(PlatformLocation));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return function () {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(function () {\n            var dom = getDOM();\n            var styles = Array.prototype.slice.apply(dom.querySelectorAll(document, \"style[ng-transition]\"));\n            styles.filter(function (el) { return dom.getAttribute(el, 'ng-transition') === transitionId; })\n                .forEach(function (el) { return dom.remove(el); });\n        });\n    };\n}\nvar SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserGetTestability = /** @class */ (function () {\n    function BrowserGetTestability() {\n    }\n    BrowserGetTestability.init = function () { setTestabilityGetter(new BrowserGetTestability()); };\n    BrowserGetTestability.prototype.addToWindow = function (registry) {\n        Éµglobal['getAngularTestability'] = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            var testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        Éµglobal['getAllAngularTestabilities'] = function () { return registry.getAllTestabilities(); };\n        Éµglobal['getAllAngularRootElements'] = function () { return registry.getAllRootElements(); };\n        var whenAllStable = function (callback /** TODO #9100 */) {\n            var testabilities = Éµglobal['getAllAngularTestabilities']();\n            var count = testabilities.length;\n            var didWork = false;\n            var decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!Éµglobal['frameworkStabilizers']) {\n            Éµglobal['frameworkStabilizers'] = [];\n        }\n        Éµglobal['frameworkStabilizers'].push(whenAllStable);\n    };\n    BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        var t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n        }\n        return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n    };\n    return BrowserGetTestability;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        var ng = Éµglobal['ng'] = Éµglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$1 = function () { return ({\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n}); };\nvar CORE_TOKENS = (Éµ0$1)();\nvar INSPECT_GLOBAL_NAME = 'probe';\nvar CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElement(element) {\n    return getDebugNode(element);\n}\nfunction _createNgProbe(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, __assign({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));\n    return function () { return inspectNativeElement; };\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nvar ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nvar ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbe,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\nvar ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nvar EventManager = /** @class */ (function () {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    function EventManager(plugins, _zone) {\n        var _this = this;\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(function (p) { return p.manager = _this; });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    EventManager.prototype.addEventListener = function (element, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    };\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     */\n    EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    };\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    EventManager.prototype.getZone = function () { return this._zone; };\n    /** @internal */\n    EventManager.prototype._findPluginFor = function (eventName) {\n        var plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        var plugins = this._plugins;\n        for (var i = 0; i < plugins.length; i++) {\n            var plugin_1 = plugins[i];\n            if (plugin_1.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin_1);\n                return plugin_1;\n            }\n        }\n        throw new Error(\"No event manager plugin found for event \" + eventName);\n    };\n    EventManager = __decorate([\n        Injectable(),\n        __param(0, Inject(EVENT_MANAGER_PLUGINS)),\n        __metadata(\"design:paramtypes\", [Array, NgZone])\n    ], EventManager);\n    return EventManager;\n}());\nvar EventManagerPlugin = /** @class */ (function () {\n    function EventManagerPlugin(_doc) {\n        this._doc = _doc;\n    }\n    EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n        var target = getDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n        }\n        return this.addEventListener(target, eventName, handler);\n    };\n    return EventManagerPlugin;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SharedStylesHost = /** @class */ (function () {\n    function SharedStylesHost() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    SharedStylesHost.prototype.addStyles = function (styles) {\n        var _this = this;\n        var additions = new Set();\n        styles.forEach(function (style) {\n            if (!_this._stylesSet.has(style)) {\n                _this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    };\n    SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n    SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n    SharedStylesHost = __decorate([\n        Injectable()\n    ], SharedStylesHost);\n    return SharedStylesHost;\n}());\nvar DomSharedStylesHost = /** @class */ (function (_super) {\n    __extends(DomSharedStylesHost, _super);\n    function DomSharedStylesHost(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._hostNodes = new Set();\n        _this._styleNodes = new Set();\n        _this._hostNodes.add(_doc.head);\n        return _this;\n    }\n    DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n        var _this = this;\n        styles.forEach(function (style) {\n            var styleEl = _this._doc.createElement('style');\n            styleEl.textContent = style;\n            _this._styleNodes.add(host.appendChild(styleEl));\n        });\n    };\n    DomSharedStylesHost.prototype.addHost = function (hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    };\n    DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n    DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n        var _this = this;\n        this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n    };\n    DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n    DomSharedStylesHost = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DomSharedStylesHost);\n    return DomSharedStylesHost;\n}(SharedStylesHost));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (var i = 0; i < styles.length; i++) {\n        var style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    return function (event) {\n        var allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n    };\n}\nvar DomRendererFactory2 = /** @class */ (function () {\n    function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    DomRendererFactory2.prototype.createRenderer = function (element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                var renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            case ViewEncapsulation.Native:\n            case ViewEncapsulation.ShadowDom:\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    var styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    };\n    DomRendererFactory2.prototype.begin = function () { };\n    DomRendererFactory2.prototype.end = function () { };\n    DomRendererFactory2 = __decorate([\n        Injectable(),\n        __param(2, Inject(APP_ID)),\n        __metadata(\"design:paramtypes\", [EventManager, DomSharedStylesHost, String])\n    ], DomRendererFactory2);\n    return DomRendererFactory2;\n}());\nvar DefaultDomRenderer2 = /** @class */ (function () {\n    function DefaultDomRenderer2(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    DefaultDomRenderer2.prototype.destroy = function () { };\n    DefaultDomRenderer2.prototype.createElement = function (name, namespace) {\n        if (namespace) {\n            // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n            // will result in undefined, so we just return the namespace here.\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    };\n    DefaultDomRenderer2.prototype.createComment = function (value) { return document.createComment(value); };\n    DefaultDomRenderer2.prototype.createText = function (value) { return document.createTextNode(value); };\n    DefaultDomRenderer2.prototype.appendChild = function (parent, newChild) { parent.appendChild(newChild); };\n    DefaultDomRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    };\n    DefaultDomRenderer2.prototype.removeChild = function (parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    };\n    DefaultDomRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n        var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    };\n    DefaultDomRenderer2.prototype.parentNode = function (node) { return node.parentNode; };\n    DefaultDomRenderer2.prototype.nextSibling = function (node) { return node.nextSibling; };\n    DefaultDomRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            // TODO(benlesh): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            var namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    };\n    DefaultDomRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        if (namespace) {\n            // TODO(benlesh): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            var namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                // TODO(benlesh): Since ivy is passing around full URIs for namespaces\n                // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n                // which is wrong.\n                el.removeAttribute(namespace + \":\" + name);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    };\n    DefaultDomRenderer2.prototype.addClass = function (el, name) { el.classList.add(name); };\n    DefaultDomRenderer2.prototype.removeClass = function (el, name) { el.classList.remove(name); };\n    DefaultDomRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    };\n    DefaultDomRenderer2.prototype.removeStyle = function (el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    };\n    DefaultDomRenderer2.prototype.setProperty = function (el, name, value) {\n        checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    };\n    DefaultDomRenderer2.prototype.setValue = function (node, value) { node.nodeValue = value; };\n    DefaultDomRenderer2.prototype.listen = function (target, event, callback) {\n        checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    };\n    return DefaultDomRenderer2;\n}());\nvar Éµ0$2 = function () { return '@'.charCodeAt(0); };\nvar AT_CHARCODE = (Éµ0$2)();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(\"Found the synthetic \" + nameKind + \" \" + name + \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\");\n    }\n}\nvar EmulatedEncapsulationDomRenderer2 = /** @class */ (function (_super) {\n    __extends(EmulatedEncapsulationDomRenderer2, _super);\n    function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.component = component;\n        var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        _this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        _this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n        return _this;\n    }\n    EmulatedEncapsulationDomRenderer2.prototype.applyToHost = function (element) { _super.prototype.setAttribute.call(this, element, this.hostAttr, ''); };\n    EmulatedEncapsulationDomRenderer2.prototype.createElement = function (parent, name) {\n        var el = _super.prototype.createElement.call(this, parent, name);\n        _super.prototype.setAttribute.call(this, el, this.contentAttr, '');\n        return el;\n    };\n    return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2));\nvar ShadowDomRenderer = /** @class */ (function (_super) {\n    __extends(ShadowDomRenderer, _super);\n    function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.sharedStylesHost = sharedStylesHost;\n        _this.hostEl = hostEl;\n        _this.component = component;\n        if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n            _this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        }\n        else {\n            _this.shadowRoot = hostEl.createShadowRoot();\n        }\n        _this.sharedStylesHost.addHost(_this.shadowRoot);\n        var styles = flattenStyles(component.id, component.styles, []);\n        for (var i = 0; i < styles.length; i++) {\n            var styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            _this.shadowRoot.appendChild(styleEl);\n        }\n        return _this;\n    }\n    ShadowDomRenderer.prototype.nodeOrShadowRoot = function (node) { return node === this.hostEl ? this.shadowRoot : node; };\n    ShadowDomRenderer.prototype.destroy = function () { this.sharedStylesHost.removeHost(this.shadowRoot); };\n    ShadowDomRenderer.prototype.appendChild = function (parent, newChild) {\n        return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);\n    };\n    ShadowDomRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\n        return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    };\n    ShadowDomRenderer.prototype.removeChild = function (parent, oldChild) {\n        return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);\n    };\n    ShadowDomRenderer.prototype.parentNode = function (node) {\n        return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));\n    };\n    return ShadowDomRenderer;\n}(DefaultDomRenderer2));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$3 = function () { return (typeof Zone !== 'undefined') && Zone['__symbol__'] ||\n    function (v) { return '__zone_symbol__' + v; }; };\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nvar __symbol__ = (Éµ0$3)();\nvar ADD_EVENT_LISTENER = __symbol__('addEventListener');\nvar REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');\nvar symbolNames = {};\nvar FALSE = 'FALSE';\nvar ANGULAR = 'ANGULAR';\nvar NATIVE_ADD_LISTENER = 'addEventListener';\nvar NATIVE_REMOVE_LISTENER = 'removeEventListener';\n// use the same symbol string which is used in zone.js\nvar stopSymbol = '__zone_symbol__propagationStopped';\nvar stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\nvar Éµ1 = function () {\n    var blackListedEvents = (typeof Zone !== 'undefined') && Zone[__symbol__('BLACK_LISTED_EVENTS')];\n    if (blackListedEvents) {\n        var res_1 = {};\n        blackListedEvents.forEach(function (eventName) { res_1[eventName] = eventName; });\n        return res_1;\n    }\n    return undefined;\n};\nvar blackListedMap = (Éµ1)();\nvar isBlackListedEvent = function (eventName) {\n    if (!blackListedMap) {\n        return false;\n    }\n    return blackListedMap.hasOwnProperty(eventName);\n};\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nvar globalListener = function (event) {\n    var symbolName = symbolNames[event.type];\n    if (!symbolName) {\n        return;\n    }\n    var taskDatas = this[symbolName];\n    if (!taskDatas) {\n        return;\n    }\n    var args = [event];\n    if (taskDatas.length === 1) {\n        // if taskDatas only have one element, just invoke it\n        var taskData = taskDatas[0];\n        if (taskData.zone !== Zone.current) {\n            // only use Zone.run when Zone.current not equals to stored zone\n            return taskData.zone.run(taskData.handler, this, args);\n        }\n        else {\n            return taskData.handler.apply(this, args);\n        }\n    }\n    else {\n        // copy tasks as a snapshot to avoid event handlers remove\n        // itself or others\n        var copiedTasks = taskDatas.slice();\n        for (var i = 0; i < copiedTasks.length; i++) {\n            // if other listener call event.stopImmediatePropagation\n            // just break\n            if (event[stopSymbol] === true) {\n                break;\n            }\n            var taskData = copiedTasks[i];\n            if (taskData.zone !== Zone.current) {\n                // only use Zone.run when Zone.current not equals to stored zone\n                taskData.zone.run(taskData.handler, this, args);\n            }\n            else {\n                taskData.handler.apply(this, args);\n            }\n        }\n    }\n};\nvar DomEventsPlugin = /** @class */ (function (_super) {\n    __extends(DomEventsPlugin, _super);\n    function DomEventsPlugin(doc, ngZone, platformId) {\n        var _this = _super.call(this, doc) || this;\n        _this.ngZone = ngZone;\n        if (!platformId || !isPlatformServer(platformId)) {\n            _this.patchEvent();\n        }\n        return _this;\n    }\n    DomEventsPlugin.prototype.patchEvent = function () {\n        if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n            return;\n        }\n        if (Event.prototype[stopMethodSymbol]) {\n            // already patched by zone.js\n            return;\n        }\n        var delegate = Event.prototype[stopMethodSymbol] =\n            Event.prototype.stopImmediatePropagation;\n        Event.prototype.stopImmediatePropagation = function () {\n            if (this) {\n                this[stopSymbol] = true;\n            }\n            // We should call native delegate in case in some environment part of\n            // the application will not use the patched Event. Also we cast the\n            // \"arguments\" to any since \"stopImmediatePropagation\" technically does not\n            // accept any arguments, but we don't know what developers pass through the\n            // function and we want to not break these calls.\n            delegate && delegate.apply(this, arguments);\n        };\n    };\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n    DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var _this = this;\n        var zoneJsLoaded = element[ADD_EVENT_LISTENER];\n        var callback = handler;\n        // if zonejs is loaded and current zone is not ngZone\n        // we keep Zone.current on target for later restoration.\n        if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n            var symbolName = symbolNames[eventName];\n            if (!symbolName) {\n                symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n            }\n            var taskDatas = element[symbolName];\n            var globalListenerRegistered = taskDatas && taskDatas.length > 0;\n            if (!taskDatas) {\n                taskDatas = element[symbolName] = [];\n            }\n            var zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n            if (taskDatas.length === 0) {\n                taskDatas.push({ zone: zone, handler: callback });\n            }\n            else {\n                var callbackRegistered = false;\n                for (var i = 0; i < taskDatas.length; i++) {\n                    if (taskDatas[i].handler === callback) {\n                        callbackRegistered = true;\n                        break;\n                    }\n                }\n                if (!callbackRegistered) {\n                    taskDatas.push({ zone: zone, handler: callback });\n                }\n            }\n            if (!globalListenerRegistered) {\n                element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n            }\n        }\n        else {\n            element[NATIVE_ADD_LISTENER](eventName, callback, false);\n        }\n        return function () { return _this.removeEventListener(element, eventName, callback); };\n    };\n    DomEventsPlugin.prototype.removeEventListener = function (target, eventName, callback) {\n        var underlyingRemove = target[REMOVE_EVENT_LISTENER];\n        // zone.js not loaded, use native removeEventListener\n        if (!underlyingRemove) {\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        var symbolName = symbolNames[eventName];\n        var taskDatas = symbolName && target[symbolName];\n        if (!taskDatas) {\n            // addEventListener not using patched version\n            // just call native removeEventListener\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        // fix issue 20532, should be able to remove\n        // listener which was added inside of ngZone\n        var found = false;\n        for (var i = 0; i < taskDatas.length; i++) {\n            // remove listener from taskDatas if the callback equals\n            if (taskDatas[i].handler === callback) {\n                found = true;\n                taskDatas.splice(i, 1);\n                break;\n            }\n        }\n        if (found) {\n            if (taskDatas.length === 0) {\n                // all listeners are removed, we can remove the globalListener from target\n                underlyingRemove.apply(target, [eventName, globalListener, false]);\n            }\n        }\n        else {\n            // not found in taskDatas, the callback may be added inside of ngZone\n            // use native remove listener to remove the callback\n            target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n    };\n    DomEventsPlugin = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)),\n        __param(2, Optional()), __param(2, Inject(PLATFORM_ID)),\n        __metadata(\"design:paramtypes\", [Object, NgZone, Object])\n    ], DomEventsPlugin);\n    return DomEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nvar EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @publicApi\n */\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nvar HammerGestureConfig = /** @class */ (function () {\n    function HammerGestureConfig() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](http://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n        * Maps gesture event names to a set of configuration options\n        * that specify overrides to the default values for specific properties.\n        *\n        * The key is a supported event name to be configured,\n        * and the options object contains a set of properties, with override values\n        * to be applied to the named recognizer event.\n        * For example, to disable recognition of the rotate event, specify\n        *  `{\"rotate\": {\"enable\": false}}`.\n        *\n        * Properties that are not present take the HammerJS default values.\n        * For information about which properties are supported for which events,\n        * and their allowed and default values, see\n        * [HammerJS documentation](http://hammerjs.github.io/).\n        *\n        */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    HammerGestureConfig.prototype.buildHammer = function (element) {\n        var mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (var eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    };\n    HammerGestureConfig = __decorate([\n        Injectable()\n    ], HammerGestureConfig);\n    return HammerGestureConfig;\n}());\nvar HammerGesturesPlugin = /** @class */ (function (_super) {\n    __extends(HammerGesturesPlugin, _super);\n    function HammerGesturesPlugin(doc, _config, console, loader) {\n        var _this = _super.call(this, doc) || this;\n        _this._config = _config;\n        _this.console = console;\n        _this.loader = loader;\n        return _this;\n    }\n    HammerGesturesPlugin.prototype.supports = function (eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because Hammer.JS is not \" +\n                \"loaded and no custom loader has been specified.\");\n            return false;\n        }\n        return true;\n    };\n    HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var _this = this;\n        var zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            var cancelRegistration_1 = false;\n            var deregister_1 = function () { cancelRegistration_1 = true; };\n            this.loader()\n                .then(function () {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    _this.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n                    deregister_1 = function () { };\n                    return;\n                }\n                if (!cancelRegistration_1) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister_1 = _this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(function () {\n                _this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because the custom \" +\n                    \"Hammer.JS loader failed.\");\n                deregister_1 = function () { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return function () { deregister_1(); };\n        }\n        return zone.runOutsideAngular(function () {\n            // Creating the manager bind events, must be done outside of angular\n            var mc = _this._config.buildHammer(element);\n            var callback = function (eventObj) {\n                zone.runGuarded(function () { handler(eventObj); });\n            };\n            mc.on(eventName, callback);\n            return function () {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    };\n    HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n    HammerGesturesPlugin = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)),\n        __param(1, Inject(HAMMER_GESTURE_CONFIG)),\n        __param(3, Optional()), __param(3, Inject(HAMMER_LOADER)),\n        __metadata(\"design:paramtypes\", [Object, HammerGestureConfig, ÉµConsole, Object])\n    ], HammerGesturesPlugin);\n    return HammerGesturesPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar Éµ0$4 = function (event) { return event.altKey; }, Éµ1$1 = function (event) { return event.ctrlKey; }, Éµ2 = function (event) { return event.metaKey; }, Éµ3 = function (event) { return event.shiftKey; };\n/**\n * Retrieves modifiers from key-event objects.\n */\nvar MODIFIER_KEY_GETTERS = {\n    'alt': Éµ0$4,\n    'control': Éµ1$1,\n    'meta': Éµ2,\n    'shift': Éµ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nvar KeyEventsPlugin = /** @class */ (function (_super) {\n    __extends(KeyEventsPlugin, _super);\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    function KeyEventsPlugin(doc) {\n        return _super.call(this, doc) || this;\n    }\n    KeyEventsPlugin_1 = KeyEventsPlugin;\n    /**\n      * Reports whether a named key event is supported.\n      * @param eventName The event name to query.\n      * @return True if the named key event is supported.\n     */\n    KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin_1.parseEventName(eventName) != null; };\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n    */\n    KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var parsedEvent = KeyEventsPlugin_1.parseEventName(eventName);\n        var outsideHandler = KeyEventsPlugin_1.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(function () {\n            return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    };\n    KeyEventsPlugin.parseEventName = function (eventName) {\n        var parts = eventName.toLowerCase().split('.');\n        var domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        var key = KeyEventsPlugin_1._normalizeKey(parts.pop());\n        var fullKey = '';\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            var index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        var result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    };\n    KeyEventsPlugin.getEventFullKey = function (event) {\n        var fullKey = '';\n        var key = getDOM().getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            if (modifierName != key) {\n                var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    };\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n        return function (event /** TODO #9100 */) {\n            if (KeyEventsPlugin_1.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(function () { return handler(event); });\n            }\n        };\n    };\n    /** @internal */\n    KeyEventsPlugin._normalizeKey = function (keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    };\n    var KeyEventsPlugin_1;\n    KeyEventsPlugin = KeyEventsPlugin_1 = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], KeyEventsPlugin);\n    return KeyEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\nvar DomSanitizer = /** @class */ (function () {\n    function DomSanitizer() {\n    }\n    return DomSanitizer;\n}());\nvar DomSanitizerImpl = /** @class */ (function (_super) {\n    __extends(DomSanitizerImpl, _super);\n    function DomSanitizerImpl(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        return _this;\n    }\n    DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (value instanceof SafeHtmlImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'HTML');\n                return Éµ_sanitizeHtml(this._doc, String(value));\n            case SecurityContext.STYLE:\n                if (value instanceof SafeStyleImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Style');\n                return Éµ_sanitizeStyle(value);\n            case SecurityContext.SCRIPT:\n                if (value instanceof SafeScriptImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Script');\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                    // Allow resource URLs in URL contexts, they are strictly more trusted.\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'URL');\n                return Éµ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (value instanceof SafeResourceUrlImpl) {\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'ResourceURL');\n                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n            default:\n                throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n        }\n    };\n    DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n        if (value instanceof SafeValueImpl) {\n            throw new Error(\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \" +\n                \"(see http://g.co/ng/security#xss)\");\n        }\n    };\n    DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n        return new SafeResourceUrlImpl(value);\n    };\n    DomSanitizerImpl = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DomSanitizerImpl);\n    return DomSanitizerImpl;\n}(DomSanitizer));\nvar SafeValueImpl = /** @class */ (function () {\n    function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n        this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        // empty\n    }\n    SafeValueImpl.prototype.toString = function () {\n        return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n            \" (see http://g.co/ng/security#xss)\";\n    };\n    return SafeValueImpl;\n}());\nvar SafeHtmlImpl = /** @class */ (function (_super) {\n    __extends(SafeHtmlImpl, _super);\n    function SafeHtmlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n    return SafeHtmlImpl;\n}(SafeValueImpl));\nvar SafeStyleImpl = /** @class */ (function (_super) {\n    __extends(SafeStyleImpl, _super);\n    function SafeStyleImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n    return SafeStyleImpl;\n}(SafeValueImpl));\nvar SafeScriptImpl = /** @class */ (function (_super) {\n    __extends(SafeScriptImpl, _super);\n    function SafeScriptImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n    return SafeScriptImpl;\n}(SafeValueImpl));\nvar SafeUrlImpl = /** @class */ (function (_super) {\n    __extends(SafeUrlImpl, _super);\n    function SafeUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n    return SafeUrlImpl;\n}(SafeValueImpl));\nvar SafeResourceUrlImpl = /** @class */ (function (_super) {\n    __extends(SafeResourceUrlImpl, _super);\n    function SafeResourceUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n    return SafeResourceUrlImpl;\n}(SafeValueImpl));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$5 = ÉµPLATFORM_BROWSER_ID;\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: Éµ0$5 },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT] },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nvar BROWSER_SANITIZATION_PROVIDERS = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT] },\n];\n/**\n * @publicApi\n */\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    return document;\n}\nvar BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ÉµAPP_ROOT, useValue: true },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ÉµConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nvar BrowserModule = /** @class */ (function () {\n    function BrowserModule(parentModule) {\n        if (parentModule) {\n            throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n        }\n    }\n    BrowserModule_1 = BrowserModule;\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    BrowserModule.withServerTransition = function (params) {\n        return {\n            ngModule: BrowserModule_1,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    };\n    var BrowserModule_1;\n    BrowserModule = BrowserModule_1 = __decorate([\n        NgModule({ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }),\n        __param(0, Optional()), __param(0, SkipSelf()), __param(0, Inject(BrowserModule_1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BrowserModule);\n    return BrowserModule;\n}());\n\n/**\n * Factory to create Meta service.\n */\nfunction createMeta() {\n    return new Meta(ÉµÉµinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and add meta tags.\n *\n * @publicApi\n */\nvar Meta = /** @class */ (function () {\n    function Meta(_doc) {\n        this._doc = _doc;\n        this._dom = getDOM();\n    }\n    Meta.prototype.addTag = function (tag, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    };\n    Meta.prototype.addTags = function (tags, forceCreation) {\n        var _this = this;\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tags)\n            return [];\n        return tags.reduce(function (result, tag) {\n            if (tag) {\n                result.push(_this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    };\n    Meta.prototype.getTag = function (attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._dom.querySelector(this._doc, \"meta[\" + attrSelector + \"]\") || null;\n    };\n    Meta.prototype.getTags = function (attrSelector) {\n        if (!attrSelector)\n            return [];\n        var list /*NodeList*/ = this._dom.querySelectorAll(this._doc, \"meta[\" + attrSelector + \"]\");\n        return list ? [].slice.call(list) : [];\n    };\n    Meta.prototype.updateTag = function (tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        var meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    };\n    Meta.prototype.removeTag = function (attrSelector) { this.removeTagElement(this.getTag(attrSelector)); };\n    Meta.prototype.removeTagElement = function (meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    };\n    Meta.prototype._getOrCreateElement = function (meta, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!forceCreation) {\n            var selector = this._parseSelector(meta);\n            var elem = this.getTag(selector);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        var element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        var head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n        this._dom.appendChild(head, element);\n        return element;\n    };\n    Meta.prototype._setMetaElementAttributes = function (tag, el) {\n        var _this = this;\n        Object.keys(tag).forEach(function (prop) { return _this._dom.setAttribute(el, prop, tag[prop]); });\n        return el;\n    };\n    Meta.prototype._parseSelector = function (tag) {\n        var attr = tag.name ? 'name' : 'property';\n        return attr + \"=\\\"\" + tag[attr] + \"\\\"\";\n    };\n    Meta.prototype._containsAttributes = function (tag, elem) {\n        var _this = this;\n        return Object.keys(tag).every(function (key) { return _this._dom.getAttribute(elem, key) === tag[key]; });\n    };\n    Meta.ngInjectableDef = ÉµÉµdefineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\n    Meta = __decorate([\n        Injectable({ providedIn: 'root', useFactory: createMeta, deps: [] }),\n        __param(0, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], Meta);\n    return Meta;\n}());\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ÉµÉµinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nvar Title = /** @class */ (function () {\n    function Title(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    Title.prototype.getTitle = function () { return getDOM().getTitle(this._doc); };\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(this._doc, newTitle); };\n    Title.ngInjectableDef = ÉµÉµdefineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\n    Title = __decorate([\n        Injectable({ providedIn: 'root', useFactory: createTitle, deps: [] }),\n        __param(0, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], Title);\n    return Title;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectionPerfRecord = /** @class */ (function () {\n    function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n    return ChangeDetectionPerfRecord;\n}());\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nvar AngularProfiler = /** @class */ (function () {\n    function AngularProfiler(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    AngularProfiler.prototype.timeChangeDetection = function (config) {\n        var record = config && config['record'];\n        var profileName = 'Change Detection';\n        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n        var isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        var start = getDOM().performanceNow();\n        var numTicks = 0;\n        while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        var end = getDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        var msPerTick = (end - start) / numTicks;\n        win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n        win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    };\n    return AngularProfiler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    var escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, function (s) { return escapedText[s]; });\n}\nfunction unescapeHtml(text) {\n    var unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, function (s) { return unescapedText[s]; });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\nvar TransferState = /** @class */ (function () {\n    function TransferState() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    TransferState_1 = TransferState;\n    /** @internal */\n    TransferState.init = function (initState) {\n        var transferState = new TransferState_1();\n        transferState.store = initState;\n        return transferState;\n    };\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    TransferState.prototype.get = function (key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    };\n    /**\n     * Set the value corresponding to a key.\n     */\n    TransferState.prototype.set = function (key, value) { this.store[key] = value; };\n    /**\n     * Remove a key from the store.\n     */\n    TransferState.prototype.remove = function (key) { delete this.store[key]; };\n    /**\n     * Test whether a key exists in the store.\n     */\n    TransferState.prototype.hasKey = function (key) { return this.store.hasOwnProperty(key); };\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    TransferState.prototype.onSerialize = function (key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    };\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    TransferState.prototype.toJson = function () {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (var key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    };\n    var TransferState_1;\n    TransferState = TransferState_1 = __decorate([\n        Injectable()\n    ], TransferState);\n    return TransferState;\n}());\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    var script = doc.getElementById(appId + '-state');\n    var initialState = {};\n    if (script && script.textContent) {\n        try {\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nvar BrowserTransferStateModule = /** @class */ (function () {\n    function BrowserTransferStateModule() {\n    }\n    BrowserTransferStateModule = __decorate([\n        NgModule({\n            providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }],\n        })\n    ], BrowserTransferStateModule);\n    return BrowserTransferStateModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nvar By = /** @class */ (function () {\n    function By() {\n    }\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    By.all = function () { return function () { return true; }; };\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    By.css = function (selector) {\n        return function (debugElement) {\n            return debugElement.nativeElement != null ?\n                getDOM().elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    };\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    By.directive = function (type) {\n        return function (debugNode) { return debugNode.providerTokens.indexOf(type) !== -1; };\n    };\n    return By;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('8.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BROWSER_MODULE_PROVIDERS as Éµangular_packages_platform_browser_platform_browser_c, _document as Éµangular_packages_platform_browser_platform_browser_b, errorHandler as Éµangular_packages_platform_browser_platform_browser_a, GenericBrowserDomAdapter as Éµangular_packages_platform_browser_platform_browser_l, createMeta as Éµangular_packages_platform_browser_platform_browser_d, SERVER_TRANSITION_PROVIDERS as Éµangular_packages_platform_browser_platform_browser_i, appInitializerFactory as Éµangular_packages_platform_browser_platform_browser_h, createTitle as Éµangular_packages_platform_browser_platform_browser_e, initTransferState as Éµangular_packages_platform_browser_platform_browser_f, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as Éµangular_packages_platform_browser_platform_browser_k, _createNgProbe as Éµangular_packages_platform_browser_platform_browser_j, EventManagerPlugin as Éµangular_packages_platform_browser_platform_browser_g, BrowserModule, platformBrowser, Meta, Title, disableDebugTools, enableDebugTools, BrowserTransferStateModule, TransferState, makeStateKey, By, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, DomSanitizer, VERSION, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ÉµELEMENT_PROBE_PROVIDERS__POST_R3__, BROWSER_SANITIZATION_PROVIDERS as ÉµBROWSER_SANITIZATION_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ÉµINTERNAL_BROWSER_PLATFORM_PROVIDERS, initDomAdapter as ÉµinitDomAdapter, BrowserDomAdapter as ÉµBrowserDomAdapter, BrowserPlatformLocation as ÉµBrowserPlatformLocation, TRANSITION_ID as ÉµTRANSITION_ID, BrowserGetTestability as ÉµBrowserGetTestability, escapeHtml as ÉµescapeHtml, ELEMENT_PROBE_PROVIDERS as ÉµELEMENT_PROBE_PROVIDERS, DomAdapter as ÉµDomAdapter, getDOM as ÉµgetDOM, setRootDomAdapter as ÉµsetRootDomAdapter, DomRendererFactory2 as ÉµDomRendererFactory2, NAMESPACE_URIS as ÉµNAMESPACE_URIS, flattenStyles as ÉµflattenStyles, shimContentAttribute as ÉµshimContentAttribute, shimHostAttribute as ÉµshimHostAttribute, DomEventsPlugin as ÉµDomEventsPlugin, HammerGesturesPlugin as ÉµHammerGesturesPlugin, KeyEventsPlugin as ÉµKeyEventsPlugin, DomSharedStylesHost as ÉµDomSharedStylesHost, SharedStylesHost as ÉµSharedStylesHost, DomSanitizerImpl as ÉµDomSanitizerImpl };\n//# sourceMappingURL=platform-browser.js.map\n","/**\n * @license Angular v8.2.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __extends, __decorate, __assign, __values, __spread, __metadata, __param } from 'tslib';\nimport { LocationStrategy, Location, PlatformLocation, APP_BASE_HREF, ViewportScroller, HashLocationStrategy, PathLocationStrategy, LOCATION_INITIALIZED } from '@angular/common';\nimport { Component, ÉµisObservable, ÉµisPromise, NgModuleRef, InjectionToken, NgModuleFactory, isDevMode, NgZone, ÉµConsole, Input, HostListener, Directive, Attribute, Renderer2, ElementRef, HostBinding, ContentChildren, QueryList, Optional, Output, ViewContainerRef, ComponentFactoryResolver, ChangeDetectorRef, EventEmitter, Injectable, NgModuleFactoryLoader, Compiler, Injector, ApplicationRef, SystemJsNgModuleLoader, NgProbeToken, ANALYZE_FOR_ENTRY_COMPONENTS, SkipSelf, Inject, APP_INITIALIZER, APP_BOOTSTRAP_LISTENER, NgModule, Version } from '@angular/core';\nimport { from, of, BehaviorSubject, EmptyError, Observable, combineLatest, defer, EMPTY, Subject } from 'rxjs';\nimport { map, concatAll, last as last$1, catchError, first, mergeMap, every, switchMap, take, startWith, scan, filter, concatMap, reduce, tap, finalize, mergeAll } from 'rxjs/operators';\nimport { ÉµgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * @usageNotes\n *\n * ```ts\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.pipe(\n *       filter(e => e instanceof RouterEvent)\n *     ).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @see `Event`\n * @publicApi\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(\n    /** A unique ID that the router assigns to every router navigation. */\n    id, \n    /** The URL that is the destination for this navigation. */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger, \n    /** @docsNotRequired */\n    restoredState) {\n        if (navigationTrigger === void 0) { navigationTrigger = 'imperative'; }\n        if (restoredState === void 0) { restoredState = null; }\n        var _this = _super.call(this, id, url) || this;\n        _this.navigationTrigger = navigationTrigger;\n        _this.restoredState = restoredState;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @publicApi\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * An event triggered when a navigation is canceled.\n *\n * @publicApi\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @publicApi\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n *An event triggered when routes are recognized.\n *\n * @publicApi\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @publicApi\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @publicApi\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * An event triggered at the the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @publicApi\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see `ResolveStart`.\n *\n * @publicApi\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @publicApi\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @publicApi\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see  `ChildActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see `ChildActivationStart`\n * @see `ResolveStart` *\n * @publicApi\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see ActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see `ActivationStart`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nvar Scroll = /** @class */ (function () {\n    function Scroll(\n    /** @docsNotRequired */\n    routerEvent, \n    /** @docsNotRequired */\n    position, \n    /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    Scroll.prototype.toString = function () {\n        var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n        return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n    };\n    return Scroll;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nvar ÉµEmptyOutletComponent = /** @class */ (function () {\n    function ÉµEmptyOutletComponent() {\n    }\n    ÉµEmptyOutletComponent = __decorate([\n        Component({ template: \"<router-outlet></router-outlet>\" })\n    ], ÉµEmptyOutletComponent);\n    return ÉµEmptyOutletComponent;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    var error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var posParams = {};\n    // Check each config part against the actual URL\n    for (var index = 0; index < parts.length; index++) {\n        var part = parts[index];\n        var segment = segments[index];\n        var isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var i = 0; i < config.length; i++) {\n        var route = config[i];\n        var fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && !route.children && !route.loadChildren &&\n        (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n    var children = r.children && r.children.map(standardizeConfig);\n    var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n    if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n        c.component = ÉµEmptyOutletComponent;\n    }\n    return c;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    // Casting Object.keys return values to include `undefined` as there are some cases\n    // in IE 11 where this can happen. Cannot provide a test because the behavior only\n    // exists in certain circumstances in IE 11, therefore doing this cast ensures the\n    // logic is correct for when this edge case is hit.\n    var k1 = Object.keys(a);\n    var k2 = Object.keys(b);\n    if (!k1 || !k2 || k1.length != k2.length) {\n        return false;\n    }\n    var key;\n    for (var i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction forEach(map, callback) {\n    for (var prop in map) {\n        if (map.hasOwnProperty(prop)) {\n            callback(map[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    var waitHead = [];\n    var waitTail = [];\n    var res = {};\n    forEach(obj, function (a, k) {\n        var mapped = fn(k, a).pipe(map(function (r) { return res[k] = r; }));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So we use \"Array.concat\".\n    // Note that we also need to cast the new promise because TypeScript cannot infer the type\n    // when calling the \"of\" function through \"Function.apply\"\n    return of.apply(null, waitHead.concat(waitTail))\n        .pipe(concatAll(), last$1(), map(function () { return res; }));\n}\nfunction wrapIntoObservable(value) {\n    if (ÉµisObservable(value)) {\n        return value;\n    }\n    if (ÉµisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return from(Promise.resolve(value));\n    }\n    return of(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var current = containeePaths.slice(0, container.segments.length);\n        var next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(\n    /** The root segment group of the URL tree */\n    root, \n    /** The query params of the URL */\n    queryParams, \n    /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n *Â ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    var res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a `UrlTree` */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a `UrlTree` into a url */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var segment = \"/\" + serializeSegment(tree.root, true);\n        var query = serializeQueryParams(tree.queryParams);\n        var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    var strParams = Object.keys(params).map(function (name) {\n        var value = params[name];\n        return Array.isArray(value) ?\n            value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n            encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchSegments(str) {\n    var match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    var match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    var match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    UrlParser.prototype.parseQueryParams = function () {\n        var params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    };\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    UrlParser.prototype.parseSegment = function () {\n        var path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    UrlParser.prototype.parseMatrixParams = function () {\n        var params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    UrlParser.prototype.parseParam = function (params) {\n        var key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    // Parse a single query parameter `name[=value]`\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var decodedKey = decodeQuery(key);\n        var decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    // parse `(a/b//outlet_name:c/d)`\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var path = matchSegments(this.remaining);\n            var next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    Tree.prototype.parent = function (t) {\n        var p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.children = function (t) {\n        var n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.firstChild = function (t) {\n        var n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.siblings = function (t) {\n        var p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    var e_1, _a;\n    if (value === node.value)\n        return node;\n    try {\n        for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var node_1 = findNode(value, child);\n            if (node_1)\n                return node_1;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    var e_2, _a;\n    if (value === node.value)\n        return [node];\n    try {\n        for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var path = findPath(value, child);\n            if (path.length) {\n                path.unshift(node);\n                return path;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return [];\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    var map = {};\n    if (node) {\n        node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see `ActivatedRoute`\n *\n * @publicApi\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\nfunction createEmptyState(urlTree, rootComponent) {\n    var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    var emptyParams = new BehaviorSubject({});\n    var emptyData = new BehaviorSubject({});\n    var emptyQueryParams = new BehaviorSubject({});\n    var fragment = new BehaviorSubject('');\n    var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var emptyParams = {};\n    var emptyData = {};\n    var emptyQueryParams = {};\n    var fragment = '';\n    var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @publicApi\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(\n    /** An observable of the URL segments matched by this route. */\n    url, \n    /** An observable of the matrix parameters scoped to this route. */\n    params, \n    /** An observable of the query parameters shared by all the routes. */\n    queryParams, \n    /** An observable of the URL fragment shared by all the routes. */\n    fragment, \n    /** An observable of the static and resolved data of this route. */\n    data, \n    /** The outlet name of the route, a constant. */\n    outlet, \n    /** The component of the route, a constant. */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route. */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state. */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree. */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree. */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree. */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route. */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /** An Observable that contains a map of the required and optional parameters\n         * specific to the route.\n         * The map supports retrieving single and multiple values from the same parameter. */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = this.params.pipe(map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * An Observable that contains a map of the query parameters available to all routes.\n         * The map supports retrieving single and multiple values from the query parameter.\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    this.queryParams.pipe(map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var pathFromRoot = route.pathFromRoot;\n    var inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var current = pathFromRoot[inheritingStartingFrom];\n            var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var params = __assign({}, res.params, curr.params);\n        var data = __assign({}, res.data, curr.data);\n        var resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(\n    /** The URL segments matched by this route */\n    url, \n    /** The matrix parameters scoped to this route */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(\n    /** The url from which this snapshot was created */\n    url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\nfunction serializeNode(node) {\n    var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var currentSnapshot = route.snapshot;\n        var nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n        if (detachedRouteHandle) {\n            var tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            var value = createActivatedRoute(curr.value);\n            var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n            return new TreeNode(value, children);\n        }\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                    return createNode(routeReuseStrategy, child, p);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var startingPosition = findStartingPosition(nav, urlTree, route);\n    var segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var numberOfDoubleDots = 0;\n    var isAbsolute = false;\n    var res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return __spread(res, [{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return __spread(res, [cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return __spread(res, [cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') ;\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return __spread(res, [cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var g = group;\n    var ci = index;\n    var dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\nfunction getOutlets(commands) {\n    var _a, _b;\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var m = prefixedWith(segmentGroup, startIndex, commands);\n    var slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var outlets_2 = getOutlets(commands);\n        var children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var currentCommandIndex = 0;\n    var currentPathIndex = startIndex;\n    var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var path = segmentGroup.segments[currentPathIndex];\n        var curr = getPath(commands[currentCommandIndex]);\n        var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var paths = segmentGroup.segments.slice(0, startIndex);\n    var i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var curr = getPath(commands[i]);\n        var next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    var children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    var res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar activateRoutes = function (rootContexts, routeReuseStrategy, forwardEvent) {\n    return map(function (t) {\n        new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent)\n            .activate(rootContexts);\n        return t;\n    });\n};\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var futureRoot = this.futureState._root;\n        var currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    // De-activate the child route that are not re-used for the future state\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var componentRef = context.outlet.detach();\n            var contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var children = nodeChildrenAsMap(route);\n            var contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var config = parentLoadedConfig(future.snapshot);\n                    var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.attachRef = null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n    return typeof v === 'function';\n}\nfunction isBoolean(v) {\n    return typeof v === 'boolean';\n}\nfunction isUrlTree(v) {\n    return v instanceof UrlTree;\n}\nfunction isCanLoad(guard) {\n    return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n    return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n    return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n    return guard && isFunction(guard.canDeactivate);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\nfunction noMatch(segmentGroup) {\n    return new Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\nfunction absoluteRedirect(newTree) {\n    return new Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\nfunction canLoadFails(route) {\n    return new Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var urlTrees$ = expanded$.pipe(map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n        return urlTrees$.pipe(catchError(function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var mapped$ = expanded$.pipe(map(function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n        }));\n        return mapped$.pipe(catchError(function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var _a;\n        var root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n    };\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(map(function (children) { return new UrlSegmentGroup([], children); }));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    // Recursively expand segment groups for all the child outlets\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        return of.apply(void 0, __spread(routes)).pipe(map(function (r) {\n            var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return of(null);\n                }\n                throw e;\n            }));\n        }), concatAll(), first(function (s) { return !!s; }), catchError(function (e, _) {\n            if (e instanceof EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap(function (newSegments) {\n            var group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap(function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(map(function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var rawSlicedSegments = segments.slice(lastChild);\n        var childConfig$ = this.getChildConfig(ngModule, route, segments);\n        return childConfig$.pipe(mergeMap(function (routerConfig) {\n            var childModule = routerConfig.module;\n            var childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$_1.pipe(map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(map(function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            }));\n        }));\n    };\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route, segments) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route, segments)\n                .pipe(mergeMap(function (shouldLoad) {\n                if (shouldLoad) {\n                    return _this.configLoader.load(ngModule.injector, route)\n                        .pipe(map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    };\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var res = [];\n        var c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var res = {};\n        forEach(redirectToParams, function (v, k) {\n            var copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var e_1, _a;\n        var idx = 0;\n        try {\n            for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                var s = actualSegments_1_1.value;\n                if (s.path === redirectToUrlSegment.path) {\n                    actualSegments.splice(idx);\n                    return s;\n                }\n                idx++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\nfunction runCanLoadGuard(moduleInjector, route, segments) {\n    var canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    var obs = from(canLoad).pipe(map(function (injectionToken) {\n        var guard = moduleInjector.get(injectionToken);\n        var guardVal;\n        if (isCanLoad(guard)) {\n            guardVal = guard.canLoad(route, segments);\n        }\n        else if (isFunction(guard)) {\n            guardVal = guard(route, segments);\n        }\n        else {\n            throw new Error('Invalid CanLoad guard');\n        }\n        return wrapIntoObservable(guardVal);\n    }));\n    return obs.pipe(concatAll(), every(function (result) { return result === true; }));\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var e_3, _a;\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {\n    return function (source) {\n        return source.pipe(switchMap(function (t) { return applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config)\n            .pipe(map(function (urlAfterRedirects) { return (__assign({}, t, { urlAfterRedirects: urlAfterRedirects })); })); }));\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nfunction getAllRouteGuards(future, curr, parentContexts) {\n    var futureRoot = future._root;\n    var currRoot = curr ? curr._root : null;\n    return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n    var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0)\n        return null;\n    return { node: p, guards: canActivateChild };\n}\nfunction getToken(token, snapshot, moduleInjector) {\n    var config = getClosestLoadedConfig(snapshot);\n    var injector = config ? config.module.injector : moduleInjector;\n    return injector.get(token);\n}\nfunction getClosestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks) {\n    if (checks === void 0) { checks = {\n        canDeactivateChecks: [],\n        canActivateChecks: []\n    }; }\n    var prevChildren = nodeChildrenAsMap(currNode);\n    // Process the children of the future route\n    futureNode.children.forEach(function (c) {\n        getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n        delete prevChildren[c.value.outlet];\n    });\n    // Process any children left from the current route (not active for the future route)\n    forEach(prevChildren, function (v, k) {\n        return deactivateRouteAndItsChildren(v, contexts.getContext(k), checks);\n    });\n    return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks) {\n    if (checks === void 0) { checks = {\n        canDeactivateChecks: [],\n        canActivateChecks: []\n    }; }\n    var future = futureNode.value;\n    var curr = currNode ? currNode.value : null;\n    var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n    // reusing the node\n    if (curr && future.routeConfig === curr.routeConfig) {\n        var shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n        if (shouldRun) {\n            checks.canActivateChecks.push(new CanActivate(futurePath));\n        }\n        else {\n            // we need to set the data\n            future.data = curr.data;\n            future._resolvedData = curr._resolvedData;\n        }\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n        }\n        if (shouldRun) {\n            var component = context && context.outlet && context.outlet.component || null;\n            checks.canDeactivateChecks.push(new CanDeactivate(component, curr));\n        }\n    }\n    else {\n        if (curr) {\n            deactivateRouteAndItsChildren(currNode, context, checks);\n        }\n        checks.canActivateChecks.push(new CanActivate(futurePath));\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n        }\n    }\n    return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n    if (typeof mode === 'function') {\n        return mode(curr, future);\n    }\n    switch (mode) {\n        case 'pathParamsChange':\n            return !equalPath(curr.url, future.url);\n        case 'pathParamsOrQueryParamsChange':\n            return !equalPath(curr.url, future.url) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'always':\n            return true;\n        case 'paramsOrQueryParamsChange':\n            return !equalParamsAndUrlSegments(curr, future) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'paramsChange':\n        default:\n            return !equalParamsAndUrlSegments(curr, future);\n    }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n    var children = nodeChildrenAsMap(route);\n    var r = route.value;\n    forEach(children, function (node, childName) {\n        if (!r.component) {\n            deactivateRouteAndItsChildren(node, context, checks);\n        }\n        else if (context) {\n            deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n        }\n        else {\n            deactivateRouteAndItsChildren(node, null, checks);\n        }\n    });\n    if (!r.component) {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n    else if (context && context.outlet && context.outlet.isActivated) {\n        checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    }\n    else {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar INITIAL_VALUE = Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n    return switchMap(function (obs) {\n        return combineLatest.apply(void 0, __spread(obs.map(function (o) { return o.pipe(take(1), startWith(INITIAL_VALUE)); }))).pipe(scan(function (acc, list) {\n            var isPending = false;\n            return list.reduce(function (innerAcc, val, i) {\n                if (innerAcc !== INITIAL_VALUE)\n                    return innerAcc;\n                // Toggle pending flag if any values haven't been set yet\n                if (val === INITIAL_VALUE)\n                    isPending = true;\n                // Any other return values are only valid if we haven't yet hit a pending call.\n                // This guarantees that in the case of a guard at the bottom of the tree that\n                // returns a redirect, we will wait for the higher priority guard at the top to\n                // finish before performing the redirect.\n                if (!isPending) {\n                    // Early return when we hit a `false` value as that should always cancel\n                    // navigation\n                    if (val === false)\n                        return val;\n                    if (i === list.length - 1 || isUrlTree(val)) {\n                        return val;\n                    }\n                }\n                return innerAcc;\n            }, acc);\n        }, INITIAL_VALUE), filter(function (item) { return item !== INITIAL_VALUE; }), map(function (item) { return isUrlTree(item) ? item : item === true; }), //\n        take(1));\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction checkGuards(moduleInjector, forwardEvent) {\n    return function (source) {\n        return source.pipe(mergeMap(function (t) {\n            var targetSnapshot = t.targetSnapshot, currentSnapshot = t.currentSnapshot, _a = t.guards, canActivateChecks = _a.canActivateChecks, canDeactivateChecks = _a.canDeactivateChecks;\n            if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n                return of(__assign({}, t, { guardsResult: true }));\n            }\n            return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector)\n                .pipe(mergeMap(function (canDeactivate) {\n                return canDeactivate && isBoolean(canDeactivate) ?\n                    runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) :\n                    of(canDeactivate);\n            }), map(function (guardsResult) { return (__assign({}, t, { guardsResult: guardsResult })); }));\n        }));\n    };\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {\n    return from(checks).pipe(mergeMap(function (check) {\n        return runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector);\n    }), first(function (result) { return result !== true; }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {\n    return from(checks).pipe(concatMap(function (check) {\n        return from([\n            fireChildActivationStart(check.route.parent, forwardEvent),\n            fireActivationStart(check.route, forwardEvent),\n            runCanActivateChild(futureSnapshot, check.path, moduleInjector),\n            runCanActivate(futureSnapshot, check.route, moduleInjector)\n        ])\n            .pipe(concatAll(), first(function (result) {\n            return result !== true;\n        }, true));\n    }), first(function (result) { return result !== true; }, true));\n}\n/**\n   * This should fire off `ActivationStart` events for each route being activated at this\n   * level.\n   * In other words, if you're activating `a` and `b` below, `path` will contain the\n   * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n   * return\n   * `true` so checks continue to run.\n   */\nfunction fireActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ActivationStart(snapshot));\n    }\n    return of(true);\n}\n/**\n   * This should fire off `ChildActivationStart` events for each route being activated at this\n   * level.\n   * In other words, if you're activating `a` and `b` below, `path` will contain the\n   * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n   * return\n   * `true` so checks continue to run.\n   */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ChildActivationStart(snapshot));\n    }\n    return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, moduleInjector) {\n    var canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0)\n        return of(true);\n    var canActivateObservables = canActivate.map(function (c) {\n        return defer(function () {\n            var guard = getToken(c, futureARS, moduleInjector);\n            var observable;\n            if (isCanActivate(guard)) {\n                observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));\n            }\n            else if (isFunction(guard)) {\n                observable = wrapIntoObservable(guard(futureARS, futureRSS));\n            }\n            else {\n                throw new Error('Invalid CanActivate guard');\n            }\n            return observable.pipe(first());\n        });\n    });\n    return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, moduleInjector) {\n    var futureARS = path[path.length - 1];\n    var canActivateChildGuards = path.slice(0, path.length - 1)\n        .reverse()\n        .map(function (p) { return getCanActivateChild(p); })\n        .filter(function (_) { return _ !== null; });\n    var canActivateChildGuardsMapped = canActivateChildGuards.map(function (d) {\n        return defer(function () {\n            var guardsMapped = d.guards.map(function (c) {\n                var guard = getToken(c, d.node, moduleInjector);\n                var observable;\n                if (isCanActivateChild(guard)) {\n                    observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));\n                }\n                else if (isFunction(guard)) {\n                    observable = wrapIntoObservable(guard(futureARS, futureRSS));\n                }\n                else {\n                    throw new Error('Invalid CanActivateChild guard');\n                }\n                return observable.pipe(first());\n            });\n            return of(guardsMapped).pipe(prioritizedGuardValue());\n        });\n    });\n    return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {\n    var canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0)\n        return of(true);\n    var canDeactivateObservables = canDeactivate.map(function (c) {\n        var guard = getToken(c, currARS, moduleInjector);\n        var observable;\n        if (isCanDeactivate(guard)) {\n            observable =\n                wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));\n        }\n        else if (isFunction(guard)) {\n            observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));\n        }\n        else {\n            throw new Error('Invalid CanDeactivate guard');\n        }\n        return observable.pipe(first());\n    });\n    return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    if (relativeLinkResolution === void 0) { relativeLinkResolution = 'legacy'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        this.relativeLinkResolution = relativeLinkResolution;\n    }\n    Recognizer.prototype.recognize = function () {\n        try {\n            var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n            var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var rootNode = new TreeNode(root, children);\n            var routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var route = routeNode.value;\n        var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        var e_1, _a;\n        try {\n            for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                var r = config_1_1.value;\n                try {\n                    return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                }\n                catch (e) {\n                    if (!(e instanceof NoMatch$1))\n                        throw e;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var snapshot;\n        var consumedSegments = [];\n        var rawSlicedSegments = [];\n        if (route.path === '**') {\n            var params = segments.length > 0 ? last(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var posParams = {};\n    forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n    var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    var names = {};\n    nodes.forEach(function (n) {\n        var routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    var s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    var s = segmentGroup;\n    var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                if (relativeLinkResolution === 'legacy') {\n                    s._segmentIndexShift = segmentGroup.segments.length;\n                }\n                else {\n                    s._segmentIndexShift = consumedSegments.length;\n                }\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var e_3, _a;\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = consumedSegments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy, relativeLinkResolution) {\n    return function (source) {\n        return source.pipe(mergeMap(function (t) { return recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy, relativeLinkResolution)\n            .pipe(map(function (targetSnapshot) { return (__assign({}, t, { targetSnapshot: targetSnapshot })); })); }));\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction resolveData(paramsInheritanceStrategy, moduleInjector) {\n    return function (source) {\n        return source.pipe(mergeMap(function (t) {\n            var targetSnapshot = t.targetSnapshot, canActivateChecks = t.guards.canActivateChecks;\n            if (!canActivateChecks.length) {\n                return of(t);\n            }\n            return from(canActivateChecks)\n                .pipe(concatMap(function (check) { return runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector); }), reduce(function (_, __) { return _; }), map(function (_) { return t; }));\n        }));\n    };\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {\n    var resolve = futureARS._resolve;\n    return resolveNode(resolve, futureARS, futureRSS, moduleInjector)\n        .pipe(map(function (resolvedData) {\n        futureARS._resolvedData = resolvedData;\n        futureARS.data = __assign({}, futureARS.data, inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);\n        return null;\n    }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, moduleInjector) {\n    var keys = Object.keys(resolve);\n    if (keys.length === 0) {\n        return of({});\n    }\n    if (keys.length === 1) {\n        var key_1 = keys[0];\n        return getResolver(resolve[key_1], futureARS, futureRSS, moduleInjector)\n            .pipe(map(function (value) {\n            var _a;\n            return _a = {}, _a[key_1] = value, _a;\n        }));\n    }\n    var data = {};\n    var runningResolvers$ = from(keys).pipe(mergeMap(function (key) {\n        return getResolver(resolve[key], futureARS, futureRSS, moduleInjector)\n            .pipe(map(function (value) {\n            data[key] = value;\n            return value;\n        }));\n    }));\n    return runningResolvers$.pipe(last$1(), map(function () { return data; }));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {\n    var resolver = getToken(injectionToken, futureARS, moduleInjector);\n    return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) :\n        wrapIntoObservable(resolver(futureARS, futureRSS));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n    return function (source) {\n        return source.pipe(switchMap(function (v) {\n            var nextResult = next(v);\n            if (nextResult) {\n                return from(nextResult).pipe(map(function () { return v; }));\n            }\n            return from([v]);\n        }));\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The [DI token](guide/glossary/#di-token) for a router configuration.\n * @see `ROUTES`\n * @publicApi\n */\nvar ROUTES = new InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return moduleFactory$.pipe(map(function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n        }));\n    };\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(mergeMap(function (t) {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return from(_this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * @publicApi\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\nfunction defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n    return urlSerializer.parse('/');\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return of(null);\n}\n/**\n * @description\n *\n * An NgModule that provides navigation and URL manipulation capabilities.\n *\n * @see `Route`.\n * @see [Routing and Navigation Guide](guide/router).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.lastSuccessfulNavigation = null;\n        this.currentNavigation = null;\n        this.navigationId = 0;\n        this.isNgZoneEnabled = false;\n        /**\n         * An event stream for routing events in this NgModule.\n         */\n        this.events = new Subject();\n        /**\n         * A handler for navigation errors in this NgModule.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * A handler for errors thrown by `Router.parseUrl(url)`\n         * when `url` contains an invalid character.\n         * The most common case is a `%` sign\n         * that's not encoded and is not part of a percent encoded sequence.\n         */\n        this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n        /**\n         * True if at least one navigation event has occurred,\n         * false otherwise.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Hooks that enable you to pause navigation,\n         * either before or after the preactivation phase.\n         * Used by `RouterModule`.\n         *\n         * @internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * A strategy for extracting and merging URLs.\n         * Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        /**\n         * A strategy for re-using routes.\n         */\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * How to handle a navigation request to the current URL. One of:\n         * - `'ignore'` :  The router ignores the request.\n         * - `'reload'` : The router reloads the URL. Use to implement a \"refresh\" feature.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * How to merge parameters, data, and resolved data from parent to child\n         * routes. One of:\n         *\n         * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data\n         * for path-less or component-less routes.\n         * - `'always'` : Inherit parent parameters, data, and resolved data\n         * for all child routes.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        /**\n         * Determines when the router updates the browser URL.\n         * By default (`\"deferred\"`), udates the browser URL after navigation has finished.\n         * Set to `'eager'` to update the browser URL at the beginning of navigation.\n         * You can choose to update early so that, if navigation fails,\n         * you can show an error message with the URL that failed.\n         */\n        this.urlUpdateStrategy = 'deferred';\n        /**\n         * Enables a bug fix that corrects relative link resolution in components with empty paths.\n         * @see `RouterModule`\n         */\n        this.relativeLinkResolution = 'legacy';\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(NgModuleRef);\n        this.console = injector.get(ÉµConsole);\n        var ngZone = injector.get(NgZone);\n        this.isNgZoneEnabled = ngZone instanceof NgZone;\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.browserUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.transitions = new BehaviorSubject({\n            id: 0,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.currentUrlTree,\n            extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            rawUrl: this.currentUrlTree,\n            extras: {},\n            resolve: null,\n            reject: null,\n            promise: Promise.resolve(true),\n            source: 'imperative',\n            restoredState: null,\n            currentSnapshot: this.routerState.snapshot,\n            targetSnapshot: null,\n            currentRouterState: this.routerState,\n            targetRouterState: null,\n            guards: { canActivateChecks: [], canDeactivateChecks: [] },\n            guardsResult: null,\n        });\n        this.navigations = this.setupNavigations(this.transitions);\n        this.processNavigations();\n    }\n    Router.prototype.setupNavigations = function (transitions) {\n        var _this = this;\n        var eventsSubject = this.events;\n        return transitions.pipe(filter(function (t) { return t.id !== 0; }), \n        // Extract URL\n        map(function (t) { return (__assign({}, t, { extractedUrl: _this.urlHandlingStrategy.extract(t.rawUrl) })); }), \n        // Using switchMap so we cancel executing navigations when a new one comes in\n        switchMap(function (t) {\n            var completed = false;\n            var errored = false;\n            return of(t).pipe(\n            // Store the Navigation object\n            tap(function (t) {\n                _this.currentNavigation = {\n                    id: t.id,\n                    initialUrl: t.currentRawUrl,\n                    extractedUrl: t.extractedUrl,\n                    trigger: t.source,\n                    extras: t.extras,\n                    previousNavigation: _this.lastSuccessfulNavigation ? __assign({}, _this.lastSuccessfulNavigation, { previousNavigation: null }) :\n                        null\n                };\n            }), switchMap(function (t) {\n                var urlTransition = !_this.navigated || t.extractedUrl.toString() !== _this.browserUrlTree.toString();\n                var processCurrentUrl = (_this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                    _this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);\n                if (processCurrentUrl) {\n                    return of(t).pipe(\n                    // Fire NavigationStart event\n                    switchMap(function (t) {\n                        var transition = _this.transitions.getValue();\n                        eventsSubject.next(new NavigationStart(t.id, _this.serializeUrl(t.extractedUrl), t.source, t.restoredState));\n                        if (transition !== _this.transitions.getValue()) {\n                            return EMPTY;\n                        }\n                        return [t];\n                    }), \n                    // This delay is required to match old behavior that forced navigation to\n                    // always be async\n                    switchMap(function (t) { return Promise.resolve(t); }), \n                    // ApplyRedirects\n                    applyRedirects$1(_this.ngModule.injector, _this.configLoader, _this.urlSerializer, _this.config), \n                    // Update the currentNavigation\n                    tap(function (t) {\n                        _this.currentNavigation = __assign({}, _this.currentNavigation, { finalUrl: t.urlAfterRedirects });\n                    }), \n                    // Recognize\n                    recognize$1(_this.rootComponentType, _this.config, function (url) { return _this.serializeUrl(url); }, _this.paramsInheritanceStrategy, _this.relativeLinkResolution), \n                    // Update URL if in `eager` update mode\n                    tap(function (t) {\n                        if (_this.urlUpdateStrategy === 'eager') {\n                            if (!t.extras.skipLocationChange) {\n                                _this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state);\n                            }\n                            _this.browserUrlTree = t.urlAfterRedirects;\n                        }\n                    }), \n                    // Fire RoutesRecognized\n                    tap(function (t) {\n                        var routesRecognized = new RoutesRecognized(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        eventsSubject.next(routesRecognized);\n                    }));\n                }\n                else {\n                    var processPreviousUrl = urlTransition && _this.rawUrlTree &&\n                        _this.urlHandlingStrategy.shouldProcessUrl(_this.rawUrlTree);\n                    /* When the current URL shouldn't be processed, but the previous one was, we\n                     * handle this \"error condition\" by navigating to the previously successful URL,\n                     * but leaving the URL intact.*/\n                    if (processPreviousUrl) {\n                        var id = t.id, extractedUrl = t.extractedUrl, source = t.source, restoredState = t.restoredState, extras = t.extras;\n                        var navStart = new NavigationStart(id, _this.serializeUrl(extractedUrl), source, restoredState);\n                        eventsSubject.next(navStart);\n                        var targetSnapshot = createEmptyState(extractedUrl, _this.rootComponentType).snapshot;\n                        return of(__assign({}, t, { targetSnapshot: targetSnapshot, urlAfterRedirects: extractedUrl, extras: __assign({}, extras, { skipLocationChange: false, replaceUrl: false }) }));\n                    }\n                    else {\n                        /* When neither the current or previous URL can be processed, do nothing other\n                         * than update router's internal reference to the current \"settled\" URL. This\n                         * way the next navigation will be coming from the current URL in the browser.\n                         */\n                        _this.rawUrlTree = t.rawUrl;\n                        _this.browserUrlTree = t.urlAfterRedirects;\n                        t.resolve(null);\n                        return EMPTY;\n                    }\n                }\n            }), \n            // Before Preactivation\n            switchTap(function (t) {\n                var targetSnapshot = t.targetSnapshot, navigationId = t.id, appliedUrlTree = t.extractedUrl, rawUrlTree = t.rawUrl, _a = t.extras, skipLocationChange = _a.skipLocationChange, replaceUrl = _a.replaceUrl;\n                return _this.hooks.beforePreactivation(targetSnapshot, {\n                    navigationId: navigationId,\n                    appliedUrlTree: appliedUrlTree,\n                    rawUrlTree: rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), \n            // --- GUARDS ---\n            tap(function (t) {\n                var guardsStart = new GuardsCheckStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                _this.triggerEvent(guardsStart);\n            }), map(function (t) { return (__assign({}, t, { guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, _this.rootContexts) })); }), checkGuards(_this.ngModule.injector, function (evt) { return _this.triggerEvent(evt); }), tap(function (t) {\n                if (isUrlTree(t.guardsResult)) {\n                    var error = navigationCancelingError(\"Redirecting to \\\"\" + _this.serializeUrl(t.guardsResult) + \"\\\"\");\n                    error.url = t.guardsResult;\n                    throw error;\n                }\n            }), tap(function (t) {\n                var guardsEnd = new GuardsCheckEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n                _this.triggerEvent(guardsEnd);\n            }), filter(function (t) {\n                if (!t.guardsResult) {\n                    _this.resetUrlToCurrentUrlTree();\n                    var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), '');\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                    return false;\n                }\n                return true;\n            }), \n            // --- RESOLVE ---\n            switchTap(function (t) {\n                if (t.guards.canActivateChecks.length) {\n                    return of(t).pipe(tap(function (t) {\n                        var resolveStart = new ResolveStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        _this.triggerEvent(resolveStart);\n                    }), resolveData(_this.paramsInheritanceStrategy, _this.ngModule.injector), //\n                    tap(function (t) {\n                        var resolveEnd = new ResolveEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        _this.triggerEvent(resolveEnd);\n                    }));\n                }\n                return undefined;\n            }), \n            // --- AFTER PREACTIVATION ---\n            switchTap(function (t) {\n                var targetSnapshot = t.targetSnapshot, navigationId = t.id, appliedUrlTree = t.extractedUrl, rawUrlTree = t.rawUrl, _a = t.extras, skipLocationChange = _a.skipLocationChange, replaceUrl = _a.replaceUrl;\n                return _this.hooks.afterPreactivation(targetSnapshot, {\n                    navigationId: navigationId,\n                    appliedUrlTree: appliedUrlTree,\n                    rawUrlTree: rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), map(function (t) {\n                var targetRouterState = createRouterState(_this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n                return (__assign({}, t, { targetRouterState: targetRouterState }));\n            }), \n            /* Once here, we are about to activate syncronously. The assumption is this will\n               succeed, and user code may read from the Router service. Therefore before\n               activation, we need to update router properties storing the current URL and the\n               RouterState, as well as updated the browser URL. All this should happen *before*\n               activating. */\n            tap(function (t) {\n                _this.currentUrlTree = t.urlAfterRedirects;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, t.rawUrl);\n                _this.routerState = t.targetRouterState;\n                if (_this.urlUpdateStrategy === 'deferred') {\n                    if (!t.extras.skipLocationChange) {\n                        _this.setBrowserUrl(_this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state);\n                    }\n                    _this.browserUrlTree = t.urlAfterRedirects;\n                }\n            }), activateRoutes(_this.rootContexts, _this.routeReuseStrategy, function (evt) { return _this.triggerEvent(evt); }), tap({ next: function () { completed = true; }, complete: function () { completed = true; } }), finalize(function () {\n                /* When the navigation stream finishes either through error or success, we set the\n                 * `completed` or `errored` flag. However, there are some situations where we could\n                 * get here without either of those being set. For instance, a redirect during\n                 * NavigationStart. Therefore, this is a catch-all to make sure the NavigationCancel\n                 * event is fired when a navigation gets cancelled but not caught by other means. */\n                if (!completed && !errored) {\n                    // Must reset to current URL tree here to ensure history.state is set. On a fresh\n                    // page load, if a new navigation comes in before a successful navigation\n                    // completes, there will be nothing in history.state.navigationId. This can cause\n                    // sync problems with AngularJS sync code which looks for a value here in order\n                    // to determine whether or not to handle a given popstate event or to leave it\n                    // to the Angualr router.\n                    _this.resetUrlToCurrentUrlTree();\n                    var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), \"Navigation ID \" + t.id + \" is not equal to the current navigation id \" + _this.navigationId);\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                }\n                // currentNavigation should always be reset to null here. If navigation was\n                // successful, lastSuccessfulTransition will have already been set. Therefore we\n                // can safely set currentNavigation to null here.\n                _this.currentNavigation = null;\n            }), catchError(function (e) {\n                errored = true;\n                /* This error type is issued during Redirect, and is handled as a cancellation\n                 * rather than an error. */\n                if (isNavigationCancelingError(e)) {\n                    var redirecting = isUrlTree(e.url);\n                    if (!redirecting) {\n                        // Set property only if we're not redirecting. If we landed on a page and\n                        // redirect to `/` route, the new navigation is going to see the `/` isn't\n                        // a change from the default currentUrlTree and won't navigate. This is\n                        // only applicable with initial navigation, so setting `navigated` only when\n                        // not redirecting resolves this scenario.\n                        _this.navigated = true;\n                        _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    }\n                    var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), e.message);\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                    if (redirecting) {\n                        _this.navigateByUrl(e.url);\n                    }\n                    /* All other errors should reset to the router's internal URL reference to the\n                     * pre-error state. */\n                }\n                else {\n                    _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    var navError = new NavigationError(t.id, _this.serializeUrl(t.extractedUrl), e);\n                    eventsSubject.next(navError);\n                    try {\n                        t.resolve(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        t.reject(ee);\n                    }\n                }\n                return EMPTY;\n            }));\n            // TODO(jasonaden): remove cast once g3 is on updated TypeScript\n        }));\n    };\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    Router.prototype.getTransition = function () {\n        var transition = this.transitions.value;\n        // This value needs to be set. Other values such as extractedUrl are set on initial navigation\n        // but the urlAfterRedirects may not get set if we aren't processing the new URL *and* not\n        // processing the previous URL.\n        transition.urlAfterRedirects = this.browserUrlTree;\n        return transition;\n    };\n    Router.prototype.setTransition = function (t) {\n        this.transitions.next(__assign({}, this.getTransition(), t));\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe(function (change) {\n                var rawUrlTree = _this.parseUrl(change['url']);\n                var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                // Navigations coming from Angular router have a navigationId state property. When this\n                // exists, restore the state.\n                var state = change.state && change.state.navigationId ? change.state : null;\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            });\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current URL. */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** The current Navigation object if one exists */\n    Router.prototype.getCurrentNavigation = function () { return this.currentNavigation; };\n    /** @internal */\n    Router.prototype.triggerEvent = function (event) { this.events.next(event); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    };\n    /** @docsNotRequired */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /** Disposes of the router. */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = null;\n        }\n    };\n    /**\n     * Applies an array of commands to the current URL tree and creates a new URL tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * Otherwise, applies the given command starting from the root.\n     *\n     * @param commands An array of commands to apply.\n     * @param navigationExtras Options that control the navigation strategy.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var a = relativeTo || this.routerState.root;\n        var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    };\n    /**\n     * Navigate based on the provided URL, which must be absolute.\n     *\n     * @param url An absolute URL. The function does not apply any delta to the current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     * The function ignores any properties in the `NavigationExtras` that would change the\n     * provided URL.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        if (isDevMode() && this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n            this.console.warn(\"Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?\");\n        }\n        var urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n        var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * The first parameter of `navigate()` is a delta to be applied to the current URL\n     * or the one provided in the `relativeTo` property of the second parameter (the\n     * `NavigationExtras`).\n     *\n     * In order to affect this browser's `history.state` entry, the `state`\n     * parameter can be passed. This must be an object because the router\n     * will add the `navigationId` property to this object before creating\n     * the new history item.\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a `UrlTree` into a string */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a `UrlTree` */\n    Router.prototype.parseUrl = function (url) {\n        var urlTree;\n        try {\n            urlTree = this.urlSerializer.parse(url);\n        }\n        catch (e) {\n            urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n        }\n        return urlTree;\n    };\n    /** Returns whether the url is activated */\n    Router.prototype.isActive = function (url, exact) {\n        if (isUrlTree(url)) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var urlTree = this.parseUrl(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        this.navigations.subscribe(function (t) {\n            _this.navigated = true;\n            _this.lastSuccessfulId = t.id;\n            _this.events\n                .next(new NavigationEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(_this.currentUrlTree)));\n            _this.lastSuccessfulNavigation = _this.currentNavigation;\n            _this.currentNavigation = null;\n            t.resolve(true);\n        }, function (e) { _this.console.warn(\"Unhandled Navigation Error: \"); });\n    };\n    Router.prototype.scheduleNavigation = function (rawUrl, source, restoredState, extras) {\n        var lastNavigation = this.getTransition();\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var resolve = null;\n        var reject = null;\n        var promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var id = ++this.navigationId;\n        this.setTransition({\n            id: id,\n            source: source,\n            restoredState: restoredState,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.rawUrlTree, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise,\n            currentSnapshot: this.routerState.snapshot,\n            currentRouterState: this.routerState\n        });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    Router.prototype.setBrowserUrl = function (url, replaceUrl, id, state) {\n        var path = this.urlSerializer.serialize(url);\n        state = state || {};\n        if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n            // TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.\n            this.location.replaceState(path, '', __assign({}, state, { navigationId: id }));\n        }\n        else {\n            this.location.go(path, '', __assign({}, state, { navigationId: id }));\n        }\n    };\n    Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    };\n    return Router;\n}());\nfunction validateCommands(commands) {\n    for (var i = 0; i < commands.length; i++) {\n        var cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive how to handle queryParams. Available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * You can provide a `state` value to be persisted to the browser's History.state\n * property (See https://developer.mozilla.org/en-US/docs/Web/API/History#Properties). It's\n * used as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * And later the value can be read from the router through `router.getCurrentNavigation`.\n * For example, to capture the `tracingId` above during the `NavigationStart` event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         */\n        set: function (value) {\n            if (isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.prototype.onClick = function () {\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLink.prototype, \"queryParams\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLink.prototype, \"fragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLink.prototype, \"queryParamsHandling\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"preserveFragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"skipLocationChange\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"replaceUrl\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLink.prototype, \"state\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLink.prototype, \"routerLink\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], RouterLink.prototype, \"preserveQueryParams\", null);\n    __decorate([\n        HostListener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], RouterLink.prototype, \"onClick\", null);\n    RouterLink = __decorate([\n        Directive({ selector: ':not(a):not(area)[routerLink]' }),\n        __param(2, Attribute('tabindex')),\n        __metadata(\"design:paramtypes\", [Router, ActivatedRoute, String, Renderer2, ElementRef])\n    ], RouterLink);\n    return RouterLink;\n}());\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: function (value) {\n            if (isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n            state: this.state\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        HostBinding('attr.target'), Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"target\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkWithHref.prototype, \"queryParams\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"fragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"queryParamsHandling\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"preserveFragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"skipLocationChange\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"replaceUrl\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkWithHref.prototype, \"state\", void 0);\n    __decorate([\n        HostBinding(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"href\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLinkWithHref.prototype, \"routerLink\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], RouterLinkWithHref.prototype, \"preserveQueryParams\", null);\n    __decorate([\n        HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Boolean, Boolean, Boolean]),\n        __metadata(\"design:returntype\", Boolean)\n    ], RouterLinkWithHref.prototype, \"onClick\", null);\n    RouterLinkWithHref = __decorate([\n        Directive({ selector: 'a[routerLink],area[routerLink]' }),\n        __metadata(\"design:paramtypes\", [Router, ActivatedRoute,\n            LocationStrategy])\n    ], RouterLinkWithHref);\n    return RouterLinkWithHref;\n}());\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, link, linkWithHref) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.link = link;\n        this.linkWithHref = linkWithHref;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: function (data) {\n            var classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                _this.isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        var isActiveCheckFn = this.isLinkActive(this.router);\n        return this.link && isActiveCheckFn(this.link) ||\n            this.linkWithHref && isActiveCheckFn(this.linkWithHref) ||\n            this.links.some(isActiveCheckFn) || this.linksWithHrefs.some(isActiveCheckFn);\n    };\n    __decorate([\n        ContentChildren(RouterLink, { descendants: true }),\n        __metadata(\"design:type\", QueryList)\n    ], RouterLinkActive.prototype, \"links\", void 0);\n    __decorate([\n        ContentChildren(RouterLinkWithHref, { descendants: true }),\n        __metadata(\"design:type\", QueryList)\n    ], RouterLinkActive.prototype, \"linksWithHrefs\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkActive.prototype, \"routerLinkActiveOptions\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLinkActive.prototype, \"routerLinkActive\", null);\n    RouterLinkActive = __decorate([\n        Directive({\n            selector: '[routerLinkActive]',\n            exportAs: 'routerLinkActive',\n        }),\n        __param(3, Optional()),\n        __param(4, Optional()),\n        __metadata(\"design:paramtypes\", [Router, ElementRef, Renderer2,\n            RouterLink,\n            RouterLinkWithHref])\n    ], RouterLinkActive);\n    return RouterLinkActive;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this._activatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var snapshot = activatedRoute._futureSnapshot;\n        var component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        var factory = resolver.resolveComponentFactory(component);\n        var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    __decorate([\n        Output('activate'),\n        __metadata(\"design:type\", Object)\n    ], RouterOutlet.prototype, \"activateEvents\", void 0);\n    __decorate([\n        Output('deactivate'),\n        __metadata(\"design:type\", Object)\n    ], RouterOutlet.prototype, \"deactivateEvents\", void 0);\n    RouterOutlet = __decorate([\n        Directive({ selector: 'router-outlet', exportAs: 'outlet' }),\n        __param(3, Attribute('name')),\n        __metadata(\"design:paramtypes\", [ChildrenOutletContexts, ViewContainerRef,\n            ComponentFactoryResolver, String, ChangeDetectorRef])\n    ], RouterOutlet);\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return fn().pipe(catchError(function () { return of(null); }));\n    };\n    return PreloadAllModules;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    NoPreloading.prototype.preload = function (route, fn) { return of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        this.subscription =\n            this.router.events\n                .pipe(filter(function (e) { return e instanceof NavigationEnd; }), concatMap(function () { return _this.preload(); }))\n                .subscribe(function () { });\n    };\n    RouterPreloader.prototype.preload = function () {\n        var ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var e_1, _a;\n        var res = [];\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var route = routes_1_1.value;\n                // we already have the config loaded, just recurse\n                if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                    var childConfig = route._loadedConfig;\n                    res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                    // no config loaded, fetch the config\n                }\n                else if (route.loadChildren && !route.canLoad) {\n                    res.push(this.preloadConfig(ngModule, route));\n                    // recurse into children\n                }\n                else if (route.children) {\n                    res.push(this.processRoutes(ngModule, route.children));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return from(res).pipe(mergeAll(), map(function (_) { return void 0; }));\n    };\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var loaded$ = _this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(mergeMap(function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            }));\n        });\n    };\n    RouterPreloader = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Router, NgModuleFactoryLoader, Compiler,\n            Injector, PreloadingStrategy])\n    ], RouterPreloader);\n    return RouterPreloader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RouterScroller = /** @class */ (function () {\n    function RouterScroller(router, \n    /** @docsNotRequired */ viewportScroller, options) {\n        if (options === void 0) { options = {}; }\n        this.router = router;\n        this.viewportScroller = viewportScroller;\n        this.options = options;\n        this.lastId = 0;\n        this.lastSource = 'imperative';\n        this.restoredId = 0;\n        this.store = {};\n        // Default both options to 'disabled'\n        options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n        options.anchorScrolling = options.anchorScrolling || 'disabled';\n    }\n    RouterScroller.prototype.init = function () {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    };\n    RouterScroller.prototype.createScrollEvents = function () {\n        var _this = this;\n        return this.router.events.subscribe(function (e) {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                _this.lastSource = e.navigationTrigger;\n                _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                _this.lastId = e.id;\n                _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n            }\n        });\n    };\n    RouterScroller.prototype.consumeScrollEvents = function () {\n        var _this = this;\n        return this.router.events.subscribe(function (e) {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (_this.options.scrollPositionRestoration === 'top') {\n                    _this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (_this.options.scrollPositionRestoration === 'enabled') {\n                    _this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                    _this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                    _this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    };\n    RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    };\n    RouterScroller.prototype.ngOnDestroy = function () {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n        if (this.scrollEventsSubscription) {\n            this.scrollEventsSubscription.unsubscribe();\n        }\n    };\n    return RouterScroller;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directives defined in the `RouterModule`.\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ÉµEmptyOutletComponent];\n/**\n * A [DI token](guide/glossary/#di-token) for the router service.\n *\n * @publicApi\n */\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar Éµ0 = { enableTracing: false };\nvar ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: Éµ0 },\n];\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * @usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router service solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * @see [Routing and Navigation](guide/router.html) for an\n * overview of how the router service should be used.\n *\n * @publicApi\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    RouterModule_1 = RouterModule;\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new router module.\n    */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule_1,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: RouterScroller,\n                    useFactory: createRouterScroller,\n                    deps: [Router, ViewportScroller, ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule_1, providers: [provideRoutes(routes)] };\n    };\n    var RouterModule_1;\n    RouterModule = RouterModule_1 = __decorate([\n        NgModule({\n            declarations: ROUTER_DIRECTIVES,\n            exports: ROUTER_DIRECTIVES,\n            entryComponents: [ÉµEmptyOutletComponent]\n        }),\n        __param(0, Optional()), __param(0, Inject(ROUTER_FORROOT_GUARD)), __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Object, Router])\n    ], RouterModule);\n    return RouterModule;\n}());\nfunction createRouterScroller(router, viewportScroller, config) {\n    if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n    }\n    return new RouterScroller(router, viewportScroller, config);\n}\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * Registers a [DI provider](guide/glossary#provider) for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @publicApi\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.malformedUriErrorHandler) {\n        router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n    }\n    if (opts.enableTracing) {\n        var dom_1 = ÉµgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    if (opts.urlUpdateStrategy) {\n        router.urlUpdateStrategy = opts.urlUpdateStrategy;\n    }\n    if (opts.relativeLinkResolution) {\n        router.relativeLinkResolution = opts.relativeLinkResolution;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * Router initialization requires two steps:\n *\n * First, we start the navigation in a `APP_INITIALIZER` to block the bootstrap if\n * a resolver or a guard executes asynchronously.\n *\n * Next, we actually run activation in a `BOOTSTRAP_LISTENER`, using the\n * `afterPreactivation` hook provided by the router.\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var resolve = null;\n            var res = new Promise(function (r) { return resolve = r; });\n            var router = _this.injector.get(Router);\n            var opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var opts = this.injector.get(ROUTER_CONFIGURATION);\n        var preloader = this.injector.get(RouterPreloader);\n        var routerScroller = this.injector.get(RouterScroller);\n        var router = this.injector.get(Router);\n        var ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        routerScroller.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    };\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], RouterInitializer);\n    return RouterInitializer;\n}());\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A [DI token](guide/glossary/#di-token) for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('8.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ÉµEmptyOutletComponent as Éµangular_packages_router_router_l, ÉµEmptyOutletComponent, ROUTER_FORROOT_GUARD as Éµangular_packages_router_router_a, RouterInitializer as Éµangular_packages_router_router_h, createRouterScroller as Éµangular_packages_router_router_c, getAppInitializer as Éµangular_packages_router_router_i, getBootstrapListener as Éµangular_packages_router_router_j, provideForRootGuard as Éµangular_packages_router_router_e, provideLocationStrategy as Éµangular_packages_router_router_d, provideRouterInitializer as Éµangular_packages_router_router_k, rootRoute as Éµangular_packages_router_router_g, routerNgProbeToken as Éµangular_packages_router_router_b, setupRouter as Éµangular_packages_router_router_f, RouterScroller as Éµangular_packages_router_router_o, Tree as Éµangular_packages_router_router_m, TreeNode as Éµangular_packages_router_router_n, RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouterEvent, RoutesRecognized, Scroll, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, ROUTER_PROVIDERS as ÉµROUTER_PROVIDERS, flatten as Éµflatten };\n//# sourceMappingURL=router.js.map\n","/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler(scheduler)) {\n        array.pop();\n        return function (source) { return concat(array, source, scheduler); };\n    }\n    else {\n        return function (source) { return concat(array, source); };\n    }\n}\n//# sourceMappingURL=startWith.js.map\n","/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) { return accumulator(acc, value, index + 1); }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nvar RouterModuleNgFactory = i0.Éµcmf(i1.RouterModule, [], function (_l) { return i0.Éµmod([i0.Éµmpd(512, i0.ComponentFactoryResolver, i0.ÉµCodegenComponentFactoryResolver, [[8, [Éµangular_packages_router_router_lNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.Éµmpd(1073742336, i1.RouterModule, i1.RouterModule, [[2, i1.Éµangular_packages_router_router_a], [2, i1.Router]])]); });\nexport { RouterModuleNgFactory as RouterModuleNgFactory };\nvar styles_Éµangular_packages_router_router_l = [];\nvar RenderType_Éµangular_packages_router_router_l = i0.Éµcrt({ encapsulation: 2, styles: styles_Éµangular_packages_router_router_l, data: {} });\nexport { RenderType_Éµangular_packages_router_router_l as RenderType_Éµangular_packages_router_router_l };\nexport function View_Éµangular_packages_router_router_l_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i0.Éµdid(1, 212992, null, 0, i1.RouterOutlet, [i1.ChildrenOutletContexts, i0.ViewContainerRef, i0.ComponentFactoryResolver, [8, null], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nexport function View_Éµangular_packages_router_router_l_Host_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_Éµangular_packages_router_router_l_0, RenderType_Éµangular_packages_router_router_l)), i0.Éµdid(1, 49152, null, 0, i1.Éµangular_packages_router_router_l, [], null, null)], null, null); }\nvar Éµangular_packages_router_router_lNgFactory = i0.Éµccf(\"ng-component\", i1.Éµangular_packages_router_router_l, View_Éµangular_packages_router_router_l_Host_0, {}, {}, []);\nexport { Éµangular_packages_router_router_lNgFactory as Éµangular_packages_router_router_lNgFactory };\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css']\n})\nexport class ProductAlertsComponent implements OnInit {\n  @Input() product;\n  @Output() notify = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./product-alerts.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./product-alerts.component\";\nvar styles_ProductAlertsComponent = [i0.styles];\nvar RenderType_ProductAlertsComponent = i1.Éµcrt({ encapsulation: 0, styles: styles_ProductAlertsComponent, data: {} });\nexport { RenderType_ProductAlertsComponent as RenderType_ProductAlertsComponent };\nfunction View_ProductAlertsComponent_1(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 2, \"p\", [], null, null, null, null, null)), (_l()(), i1.Éµeld(1, 0, null, null, 1, \"button\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.notify.emit() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.Éµted(-1, null, [\"Notify Me\"]))], null, null); }\nexport function View_ProductAlertsComponent_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµand(16777216, null, null, 1, null, View_ProductAlertsComponent_1)), i1.Éµdid(1, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.product.price > 700); _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_ProductAlertsComponent_Host_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"app-product-alerts\", [], null, null, null, View_ProductAlertsComponent_0, RenderType_ProductAlertsComponent)), i1.Éµdid(1, 114688, null, 0, i3.ProductAlertsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ProductAlertsComponentNgFactory = i1.Éµccf(\"app-product-alerts\", i3.ProductAlertsComponent, View_ProductAlertsComponent_Host_0, { product: \"product\" }, { notify: \"notify\" }, []);\nexport { ProductAlertsComponentNgFactory as ProductAlertsComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\\n/*# sourceMappingURL=product-alerts.component.css.map*/\"];\nexport { styles as styles };\n","<p *ngIf=\"product.price > 700\">\n  <button (click)=\"notify.emit()\">Notify Me</button>\n</p>\n","export const products = [\r\n  {\r\n    name: 'Phone XL',\r\n    price: 799,\r\n    description: 'A large phone with one of the best screens'\r\n  },\r\n  {\r\n    name: 'Phone Mini',\r\n    price: 699,\r\n    description: 'A great phone with one of the best cameras'\r\n  },\r\n  {\r\n    name: 'Phone Standard',\r\n    price: 299,\r\n    description: 'no description'\r\n  },\r\n  {\r\n    name: 'pLop phone',\r\n    price: 899,\r\n    description: 'Chilean phone'\r\n  }\r\n];\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Component } from '@angular/core';\r\n\r\nimport { products } from '../products';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent {\r\n  products = products;\r\n\r\n  share() {\r\n    window.alert('The product has been shared!');\r\n  }\r\n  onNotify() {\r\n    window.alert('You will be notified when the product goes on sale');\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./product-list.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../product-alerts/product-alerts.component.ngfactory\";\nimport * as i5 from \"../product-alerts/product-alerts.component\";\nimport * as i6 from \"./product-list.component\";\nvar styles_ProductListComponent = [i0.styles];\nvar RenderType_ProductListComponent = i1.Éµcrt({ encapsulation: 0, styles: styles_ProductListComponent, data: {} });\nexport { RenderType_ProductListComponent as RenderType_ProductListComponent };\nfunction View_ProductListComponent_2(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.Éµted(1, null, [\" Description: \", \" \"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.description; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_ProductListComponent_1(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 10, \"li\", [], null, null, null, null, null)), (_l()(), i1.Éµeld(1, 0, null, null, 3, \"a\", [], [[8, \"title\", 0], [1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.Éµnov(_v, 2).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.Éµdid(2, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.Éµpad(3, 2), (_l()(), i1.Éµted(4, null, [\" \", \" \"])), (_l()(), i1.Éµand(16777216, null, null, 1, null, View_ProductListComponent_2)), i1.Éµdid(6, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.Éµeld(7, 0, null, null, 1, \"button\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.share() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.Éµted(-1, null, [\" Share \"])), (_l()(), i1.Éµeld(9, 0, null, null, 1, \"app-product-alerts\", [], null, [[null, \"notify\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"notify\" === en)) {\n        var pd_0 = (_co.onNotify() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i4.View_ProductAlertsComponent_0, i4.RenderType_ProductAlertsComponent)), i1.Éµdid(10, 114688, null, 0, i5.ProductAlertsComponent, [], { product: [0, \"product\"] }, { notify: \"notify\" })], function (_ck, _v) { var currVal_3 = _ck(_v, 3, 0, \"/products\", _v.context.index); _ck(_v, 2, 0, currVal_3); var currVal_5 = _v.context.$implicit.description; _ck(_v, 6, 0, currVal_5); var currVal_6 = _v.context.$implicit; _ck(_v, 10, 0, currVal_6); }, function (_ck, _v) { var currVal_0 = (_v.context.$implicit.name + \" details\"); var currVal_1 = i1.Éµnov(_v, 2).target; var currVal_2 = i1.Éµnov(_v, 2).href; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); var currVal_4 = _v.context.$implicit.name; _ck(_v, 4, 0, currVal_4); }); }\nexport function View_ProductListComponent_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\"Products\"])), (_l()(), i1.Éµeld(2, 0, null, null, 2, \"ul\", [], null, null, null, null, null)), (_l()(), i1.Éµand(16777216, null, null, 1, null, View_ProductListComponent_1)), i1.Éµdid(4, 278528, null, 0, i3.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.products; _ck(_v, 4, 0, currVal_0); }, null); }\nexport function View_ProductListComponent_Host_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"app-product-list\", [], null, null, null, View_ProductListComponent_0, RenderType_ProductListComponent)), i1.Éµdid(1, 49152, null, 0, i6.ProductListComponent, [], null, null)], null, null); }\nvar ProductListComponentNgFactory = i1.Éµccf(\"app-product-list\", i6.ProductListComponent, View_ProductListComponent_Host_0, {}, {}, []);\nexport { ProductListComponentNgFactory as ProductListComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\\n/*# sourceMappingURL=product-list.component.css.map*/\"];\nexport { styles as styles };\n","<h2>Products</h2>\n<ul>\n\t<li *ngFor=\"let product of products; index as productId\">\n\t\t<a [title]=\"product.name + ' details'\" [routerLink]=\"['/products', productId]\">\n    {{ product.name }}\n    </a>\n\t\t<p *ngIf=\"product.description\">\n\t\t\tDescription: {{ product.description }}\n\t\t</p>\n\t\t<button (click)=\"share()\">\n    Share\n  </button>\n<app-product-alerts [product]=\"product\" (notify)=\"onNotify()\">\n</app-product-alerts>\n    </li>\n  </ul>\n\n<!--\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n-->\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { products } from '../products';\nconsole.log(products);\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  product;\n\n\n  constructor(\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.product = products[+params.get('productId')];\n    });\n  }\n\n}","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./product-details.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./product-details.component\";\nimport * as i4 from \"@angular/router\";\nvar styles_ProductDetailsComponent = [i0.styles];\nvar RenderType_ProductDetailsComponent = i1.Éµcrt({ encapsulation: 0, styles: styles_ProductDetailsComponent, data: {} });\nexport { RenderType_ProductDetailsComponent as RenderType_ProductDetailsComponent };\nfunction View_ProductDetailsComponent_1(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 7, \"div\", [], null, null, null, null, null)), (_l()(), i1.Éµeld(1, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.Éµted(2, null, [\"\", \"\"])), (_l()(), i1.Éµeld(3, 0, null, null, 2, \"h4\", [], null, null, null, null, null)), (_l()(), i1.Éµted(4, null, [\"\", \"\"])), i1.Éµppd(5, 1), (_l()(), i1.Éµeld(6, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.Éµted(7, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.product.name; _ck(_v, 2, 0, currVal_0); var currVal_1 = i1.Éµunv(_v, 4, 0, _ck(_v, 5, 0, i1.Éµnov(_v.parent, 0), _co.product.price)); _ck(_v, 4, 0, currVal_1); var currVal_2 = _co.product.description; _ck(_v, 7, 0, currVal_2); }); }\nexport function View_ProductDetailsComponent_0(_l) { return i1.Éµvid(0, [i1.Éµpid(0, i2.CurrencyPipe, [i1.LOCALE_ID]), (_l()(), i1.Éµeld(1, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\"Product Details\"])), (_l()(), i1.Éµand(16777216, null, null, 1, null, View_ProductDetailsComponent_1)), i1.Éµdid(4, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.product; _ck(_v, 4, 0, currVal_0); }, null); }\nexport function View_ProductDetailsComponent_Host_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"app-product-details\", [], null, null, null, View_ProductDetailsComponent_0, RenderType_ProductDetailsComponent)), i1.Éµdid(1, 114688, null, 0, i3.ProductDetailsComponent, [i4.ActivatedRoute], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ProductDetailsComponentNgFactory = i1.Éµccf(\"app-product-details\", i3.ProductDetailsComponent, View_ProductDetailsComponent_Host_0, {}, {}, []);\nexport { ProductDetailsComponentNgFactory as ProductDetailsComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\\n/*# sourceMappingURL=product-details.component.css.map*/\"];\nexport { styles as styles };\n","<h2>Product Details</h2>\n\n<div *ngIf=\"product\">\n  <h3>{{ product.name }}</h3>\n  <h4>{{ product.price | currency }}</h4>\n  <p>{{ product.description }}</p>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./top-bar.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./top-bar.component\";\nvar styles_TopBarComponent = [i0.styles];\nvar RenderType_TopBarComponent = i1.Éµcrt({ encapsulation: 0, styles: styles_TopBarComponent, data: {} });\nexport { RenderType_TopBarComponent as RenderType_TopBarComponent };\nexport function View_TopBarComponent_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 4, \"a\", [], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.Éµnov(_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.Éµdid(1, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.Éµpad(2, 1), (_l()(), i1.Éµeld(3, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\"My Store\"])), (_l()(), i1.Éµeld(5, 0, null, null, 5, \"a\", [[\"class\", \"button fancy-button\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.Éµnov(_v, 6).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.Éµdid(6, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.Éµpad(7, 1), (_l()(), i1.Éµeld(8, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\"shopping_cart\"])), (_l()(), i1.Éµted(-1, null, [\"Checkout\"]))], function (_ck, _v) { var currVal_2 = _ck(_v, 2, 0, \"/\"); _ck(_v, 1, 0, currVal_2); var currVal_5 = _ck(_v, 7, 0, \"/cart\"); _ck(_v, 6, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i1.Éµnov(_v, 1).target; var currVal_1 = i1.Éµnov(_v, 1).href; _ck(_v, 0, 0, currVal_0, currVal_1); var currVal_3 = i1.Éµnov(_v, 6).target; var currVal_4 = i1.Éµnov(_v, 6).href; _ck(_v, 5, 0, currVal_3, currVal_4); }); }\nexport function View_TopBarComponent_Host_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"app-top-bar\", [], null, null, null, View_TopBarComponent_0, RenderType_TopBarComponent)), i1.Éµdid(1, 114688, null, 0, i4.TopBarComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TopBarComponentNgFactory = i1.Éµccf(\"app-top-bar\", i4.TopBarComponent, View_TopBarComponent_Host_0, {}, {}, []);\nexport { TopBarComponentNgFactory as TopBarComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\\n/*# sourceMappingURL=top-bar.component.css.map*/\"];\nexport { styles as styles };\n","<a [routerLink]=\"['/']\">\n  <h1>My Store</h1>\n</a>\n\n<a [routerLink]=\"['/cart']\" class=\"button fancy-button\"><i class=\"material-icons\">shopping_cart</i>Checkout</a>\n\n<!--\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n-->\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./app.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./top-bar/top-bar.component.ngfactory\";\nimport * as i3 from \"./top-bar/top-bar.component\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./app.component\";\nvar styles_AppComponent = [i0.styles];\nvar RenderType_AppComponent = i1.Éµcrt({ encapsulation: 0, styles: styles_AppComponent, data: {} });\nexport { RenderType_AppComponent as RenderType_AppComponent };\nexport function View_AppComponent_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"app-top-bar\", [], null, null, null, i2.View_TopBarComponent_0, i2.RenderType_TopBarComponent)), i1.Éµdid(1, 114688, null, 0, i3.TopBarComponent, [], null, null), (_l()(), i1.Éµeld(2, 0, null, null, 2, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.Éµeld(3, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i1.Éµdid(4, 212992, null, 0, i4.RouterOutlet, [i4.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); _ck(_v, 4, 0); }, null); }\nexport function View_AppComponent_Host_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"app-root\", [], null, null, null, View_AppComponent_0, RenderType_AppComponent)), i1.Éµdid(1, 49152, null, 0, i5.AppComponent, [], null, null)], null, null); }\nvar AppComponentNgFactory = i1.Éµccf(\"app-root\", i5.AppComponent, View_AppComponent_Host_0, {}, {}, []);\nexport { AppComponentNgFactory as AppComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"p[_ngcontent-%COMP%]{font-family:Lato}\\n/*# sourceMappingURL=app.component.css.map*/\"];\nexport { styles as styles };\n","<app-top-bar></app-top-bar>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<!--\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n-->\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { from } from './from';\nexport function forkJoin() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    if (sources.length === 1) {\n        var first_1 = sources[0];\n        if (isArray(first_1)) {\n            return forkJoinInternal(first_1, null);\n        }\n        if (isObject(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {\n            var keys = Object.keys(first_1);\n            return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);\n        }\n    }\n    if (typeof sources[sources.length - 1] === 'function') {\n        var resultSelector_1 = sources.pop();\n        sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n        return forkJoinInternal(sources, null).pipe(map(function (args) { return resultSelector_1.apply(void 0, args); }));\n    }\n    return forkJoinInternal(sources, null);\n}\nfunction forkJoinInternal(sources, keys) {\n    return new Observable(function (subscriber) {\n        var len = sources.length;\n        if (len === 0) {\n            subscriber.complete();\n            return;\n        }\n        var values = new Array(len);\n        var completed = 0;\n        var emitted = 0;\n        var _loop_1 = function (i) {\n            var source = from(sources[i]);\n            var hasValue = false;\n            subscriber.add(source.subscribe({\n                next: function (value) {\n                    if (!hasValue) {\n                        hasValue = true;\n                        emitted++;\n                    }\n                    values[i] = value;\n                },\n                error: function (err) { return subscriber.error(err); },\n                complete: function () {\n                    completed++;\n                    if (completed === len || !hasValue) {\n                        if (emitted === len) {\n                            subscriber.next(keys ?\n                                keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :\n                                values);\n                        }\n                        subscriber.complete();\n                    }\n                }\n            }));\n        };\n        for (var i = 0; i < len; i++) {\n            _loop_1(i);\n        }\n    });\n}\n//# sourceMappingURL=forkJoin.js.map\n","/**\n * @license Angular v8.2.0\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __param, __extends, __assign, __values, __spread } from 'tslib';\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ÉµisPromise, ÉµisObservable, Injectable, Input, Injector, Host, ÉµlooseIdentical, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ÉµgetDOM } from '@angular/platform-browser';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nvar NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar CheckboxControlValueAccessor = /** @class */ (function () {\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = function (_) { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = function () { };\n    }\n    /**\n     * Sets the \"checked\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    CheckboxControlValueAccessor = __decorate([\n        Directive({\n            selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n            host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n            providers: [CHECKBOX_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], CheckboxControlValueAccessor);\n    return CheckboxControlValueAccessor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    var userAgent = ÉµgetDOM() ? ÉµgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nvar COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * @description\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar DefaultValueAccessor = /** @class */ (function () {\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        /**\n         * @description\n         * The registered callback function called when an input event occurs on the input element.\n         */\n        this.onChange = function (_) { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = function () { };\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /** @internal */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /** @internal */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    DefaultValueAccessor = __decorate([\n        Directive({\n            selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n            // TODO: vsavkin replace the above selector with the one below it once\n            // https://github.com/angular/angular/issues/3011 is implemented\n            // selector: '[ngModel],[formControl],[formControlName]',\n            host: {\n                '(input)': '$any(this)._handleInput($event.target.value)',\n                '(blur)': 'onTouched()',\n                '(compositionstart)': '$any(this)._compositionStart()',\n                '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n            },\n            providers: [DEFAULT_VALUE_ACCESSOR]\n        }),\n        __param(2, Optional()), __param(2, Inject(COMPOSITION_BUFFER_MODE)),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef, Boolean])\n    ], DefaultValueAccessor);\n    return DefaultValueAccessor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nvar AbstractControlDirective = /** @class */ (function () {\n    function AbstractControlDirective() {\n    }\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * @description\n         * Reports the value of the control if it is present, otherwise null.\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * @description\n         * Reports whether the control is valid. A control is considered valid if no\n         * validation errors exist with the current value.\n         * If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * @description\n         * Reports whether the control is invalid, meaning that an error exists in the input value.\n         * If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * @description\n         * Reports whether a control is pending, meaning that that async validation is occurring and\n         * errors are not yet available for the input value. If the control is not present, null is\n         * returned.\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * @description\n         * Reports whether the control is disabled, meaning that the control is disabled\n         * in the UI and is exempt from validation checks and excluded from aggregate\n         * values of ancestor controls. If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * @description\n         * Reports whether the control is enabled, meaning that the control is included in ancestor\n         * calculations of validity or value. If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * @description\n         * Reports the control's validation errors. If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * @description\n         * Reports whether the control is pristine, meaning that the user has not yet changed\n         * the value in the UI. If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * @description\n         * Reports whether the control is dirty, meaning that the user has changed\n         * the value in the UI. If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * @description\n         * Reports whether the control is touched, meaning that the user has triggered\n         * a `blur` event on it. If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"status\", {\n        /**\n         * @description\n         * Reports the validation status of the control. Possible values include:\n         * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n         * If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.status : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * @description\n         * Reports whether the control is untouched, meaning that the user has not yet triggered\n         * a `blur` event on it. If the control is not present, null is returned.\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * @description\n         * Returns a multicasting observable that emits a validation status whenever it is\n         * calculated for the control. If the control is not present, null is returned.\n         */\n        get: function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * @description\n         * Returns a multicasting observable of value changes for the control that emits every time the\n         * value of the control changes in the UI or programmatically.\n         * If the control is not present, null is returned.\n         */\n        get: function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nvar ControlContainer = /** @class */ (function (_super) {\n    __extends(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * @description\n         * The top-level form directive for the control.\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * @description\n         * The path to this group.\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * @description\n * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nvar NgControl = /** @class */ (function (_super) {\n    __extends(NgControl, _super);\n    function NgControl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        _this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        _this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        _this.valueAccessor = null;\n        /**\n         * @description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * @internal\n         */\n        _this._rawValidators = [];\n        /**\n         * @description\n         * The uncomposed array of async validators for the control\n         *\n         * @internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @description\n         * The registered synchronous validator function for the control\n         *\n         * @throws An exception that this method is not implemented\n         */\n        get: function () { return unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @description\n         * The registered async validator function for the control\n         *\n         * @throws An exception that this method is not implemented\n         */\n        get: function () { return unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    return NgControl;\n}(AbstractControlDirective));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = /** @class */ (function () {\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar NgControlStatus = /** @class */ (function (_super) {\n    __extends(NgControlStatus, _super);\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    NgControlStatus = __decorate([\n        Directive({ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }),\n        __param(0, Self()),\n        __metadata(\"design:paramtypes\", [NgControl])\n    ], NgControlStatus);\n    return NgControlStatus;\n}(AbstractControlStatus));\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar NgControlStatusGroup = /** @class */ (function (_super) {\n    __extends(NgControlStatusGroup, _super);\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    NgControlStatusGroup = __decorate([\n        Directive({\n            selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n            host: ngControlStatusHost\n        }),\n        __param(0, Self()),\n        __metadata(\"design:paramtypes\", [ControlContainer])\n    ], NgControlStatusGroup);\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nvar NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nvar Validators = /** @class */ (function () {\n    function Validators() {\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.min = function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.max = function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.email = function (control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var regex;\n        var regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.nullValidator = function (control) { return null; };\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(_mergeErrors));\n        };\n    };\n    return Validators;\n}());\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    var obs = ÉµisPromise(r) ? from(r) : r;\n    if (!(ÉµisObservable(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _mergeErrors(arrayOfErrors) {\n    var res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? __assign({}, res, errors) : res;\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeValidator(validator) {\n    if (validator.validate) {\n        return function (c) { return validator.validate(c); };\n    }\n    else {\n        return validator;\n    }\n}\nfunction normalizeAsyncValidator(validator) {\n    if (validator.validate) {\n        return function (c) { return validator.validate(c); };\n    }\n    else {\n        return validator;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar NumberValueAccessor = /** @class */ (function () {\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = function (_) { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = function () { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    NumberValueAccessor = __decorate([\n        Directive({\n            selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n            host: {\n                '(change)': 'onChange($event.target.value)',\n                '(input)': 'onChange($event.target.value)',\n                '(blur)': 'onTouched()'\n            },\n            providers: [NUMBER_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], NumberValueAccessor);\n    return NumberValueAccessor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nvar RadioControlRegistry = /** @class */ (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    RadioControlRegistry = __decorate([\n        Injectable()\n    ], RadioControlRegistry);\n    return RadioControlRegistry;\n}());\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar RadioControlValueAccessor = /** @class */ (function () {\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = function () { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = function () { };\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive is initialized. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @description\n     * Sets the \"checked\" property value on the radio input element.\n     *\n     * @param value The checked value\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RadioControlValueAccessor.prototype, \"name\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RadioControlValueAccessor.prototype, \"formControlName\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RadioControlValueAccessor.prototype, \"value\", void 0);\n    RadioControlValueAccessor = __decorate([\n        Directive({\n            selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n            host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n            providers: [RADIO_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef,\n            RadioControlRegistry, Injector])\n    ], RadioControlValueAccessor);\n    return RadioControlValueAccessor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar RangeValueAccessor = /** @class */ (function () {\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = function (_) { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = function () { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    RangeValueAccessor = __decorate([\n        Directive({\n            selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n            host: {\n                '(change)': 'onChange($event.target.value)',\n                '(input)': 'onChange($event.target.value)',\n                '(blur)': 'onTouched()'\n            },\n            providers: [RANGE_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], RangeValueAccessor);\n    return RangeValueAccessor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = /** @class */ (function () {\n    function ReactiveErrors() {\n    }\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    ReactiveErrors.ngModelWarning = function (directiveName) {\n        console.warn(\"\\n    It looks like you're using ngModel on the same form field as \" + directiveName + \". \\n    Support for using the ngModel input property and ngModelChange event with \\n    reactive form directives has been deprecated in Angular v6 and will be removed \\n    in Angular v7.\\n    \\n    For more information on this, see our API docs here:\\n    https://angular.io/api/forms/\" + (directiveName === 'formControl' ? 'FormControlDirective'\n            : 'FormControlName') + \"#use-with-ngmodel\\n    \");\n    };\n    return ReactiveErrors;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar SelectControlValueAccessor = /** @class */ (function () {\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = function (_) { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = function () { };\n        this._compareWith = ÉµlooseIdentical;\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @description\n         * Tracks the option comparison algorithm for tracking identities when\n         * checking for changes.\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     *\n     * @param value The checked value\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /** @internal */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Array.from(this._optionMap.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var id = _c.value;\n                if (this._compareWith(this._optionMap.get(id), value))\n                    return id;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    };\n    /** @internal */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], SelectControlValueAccessor.prototype, \"compareWith\", null);\n    SelectControlValueAccessor = __decorate([\n        Directive({\n            selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n            host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n            providers: [SELECT_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], SelectControlValueAccessor);\n    return SelectControlValueAccessor;\n}());\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar NgSelectOption = /** @class */ (function () {\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @description\n         * Tracks the value bound to the option element. Unlike the value binding,\n         * ngValue supports binding to objects.\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @description\n         * Tracks simple string values bound to the option element.\n         * For objects, use the `ngValue` input binding.\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    __decorate([\n        Input('ngValue'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgSelectOption.prototype, \"ngValue\", null);\n    __decorate([\n        Input('value'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgSelectOption.prototype, \"value\", null);\n    NgSelectOption = __decorate([\n        Directive({ selector: 'option' }),\n        __param(2, Optional()), __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ElementRef, Renderer2,\n            SelectControlValueAccessor])\n    ], NgSelectOption);\n    return NgSelectOption;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar SelectMultipleControlValueAccessor = /** @class */ (function () {\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = function (_) { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = function () { };\n        this._compareWith = ÉµlooseIdentical;\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @description\n         * Tracks the option comparison algorithm for tracking identities when\n         * checking for changes.\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Sets the \"value\" property on one or of more\n     * of the select's options.\n     *\n     * @param value The value\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @description\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     *\n     * @param fn The callback function\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var options = _.selectedOptions;\n                for (var i = 0; i < options.length; i++) {\n                    var opt = options.item(i);\n                    var val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                var options = _.options;\n                for (var i = 0; i < options.length; i++) {\n                    var opt = options.item(i);\n                    if (opt.selected) {\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Array.from(this._optionMap.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var id = _c.value;\n                if (this._compareWith(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], SelectMultipleControlValueAccessor.prototype, \"compareWith\", null);\n    SelectMultipleControlValueAccessor = __decorate([\n        Directive({\n            selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n            host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n            providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], SelectMultipleControlValueAccessor);\n    return SelectMultipleControlValueAccessor;\n}());\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar ÉµNgSelectMultipleOption = /** @class */ (function () {\n    function ÉµNgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(ÉµNgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @description\n         * Tracks the value bound to the option element. Unlike the value binding,\n         * ngValue supports binding to objects.\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ÉµNgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @description\n         * Tracks simple string values bound to the option element.\n         * For objects, use the `ngValue` input binding.\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ÉµNgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /** @internal */\n    ÉµNgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ÉµNgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    __decorate([\n        Input('ngValue'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], ÉµNgSelectMultipleOption.prototype, \"ngValue\", null);\n    __decorate([\n        Input('value'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], ÉµNgSelectMultipleOption.prototype, \"value\", null);\n    ÉµNgSelectMultipleOption = __decorate([\n        Directive({ selector: 'option' }),\n        __param(2, Optional()), __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ElementRef, Renderer2,\n            SelectMultipleControlValueAccessor])\n    ], ÉµNgSelectMultipleOption);\n    return ÉµNgSelectMultipleOption;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return __spread(parent.path, [name]);\n}\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n    });\n}\nfunction cleanUpControl(control, dir) {\n    dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n    dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange(function (newValue) {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(function () {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    var messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n    }\n    else if (dir.path[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ÉµlooseIdentical(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(function (dir) {\n        var control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    var defaultAccessor = undefined;\n    var builtinAccessor = undefined;\n    var customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\nfunction removeDir(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nvar VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nvar INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nvar PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nvar DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = path.split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return path.reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls.hasOwnProperty(name) ? v.controls[name] : null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(name) || null;\n        }\n        return null;\n    }, control);\n}\nfunction coerceToValidator(validatorOrOpts) {\n    var validator = (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators :\n        validatorOrOpts);\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    var origAsyncValidator = (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators :\n        asyncValidator);\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nvar AbstractControl = /** @class */ (function () {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validator The function that determines the synchronous validity of this control.\n     * @param asyncValidator The function that determines the asynchronous validity of this\n     * control.\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /** @internal */\n        this._onCollectionChange = function () { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status` is `VALID`.\n         *\n         * @see {@link AbstractControl.status}\n         *\n         * @returns True if the control has passed all of its validation tests,\n         * false otherwise.\n         */\n        get: function () { return this.status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status` is `INVALID`.\n         *\n         * @see {@link AbstractControl.status}\n         *\n         * @returns True if this control has failed one or more of its validation checks,\n         * false otherwise.\n         */\n        get: function () { return this.status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status` is `PENDING`.\n         *\n         * @see {@link AbstractControl.status}\n         *\n         * @returns True if this control is in the process of conducting a validation check,\n         * false otherwise.\n         */\n        get: function () { return this.status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status` is `DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         *\n         * @see {@link AbstractControl.status}\n         *\n         * @returns True if the control is disabled, false otherwise.\n         */\n        get: function () { return this.status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status` is not `DISABLED`.\n         *\n         * @returns True if the control has any status other than 'DISABLED',\n         * false if the status is 'DISABLED'.\n         *\n         * @see {@link AbstractControl.status}\n         *\n         */\n        get: function () { return this.status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * True if the control has not been marked as touched\n         *\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         */\n        get: function () { return !this.touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"updateOn\", {\n        /**\n         * Reports the update strategy of the `AbstractControl` (meaning\n         * the event on which the control updates itself).\n         * Possible values: `'change'` | `'blur'` | `'submit'`\n         * Default value: `'change'`\n         */\n        get: function () {\n            return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    AbstractControl.prototype.markAsTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    AbstractControl.prototype.markAllAsTouched = function () {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild(function (control) { return control.markAllAsTouched(); });\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    AbstractControl.prototype.markAsUntouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    AbstractControl.prototype.markAsDirty = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     */\n    AbstractControl.prototype.markAsPristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    AbstractControl.prototype.markAsPending = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    AbstractControl.prototype.disable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        var skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild(function (control) { control.disable(__assign({}, opts, { onlySelf: true })); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(__assign({}, opts, { skipPristineCheck: skipPristineCheck }));\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    AbstractControl.prototype.enable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        var skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild(function (control) { control.enable(__assign({}, opts, { onlySelf: true })); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(__assign({}, opts, { skipPristineCheck: skipPristineCheck }));\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    AbstractControl.prototype._updateAncestors = function (opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param parent Sets the parent of the control\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._updateTreeValidity = function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    AbstractControl.prototype._setInitialStatus = function () {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    };\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            var obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    AbstractControl.prototype.setErrors = function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        var control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    };\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) {\n        return !!this.getError(errorCode, path);\n    };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         */\n        get: function () {\n            var x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._initObservables = function () {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    };\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /** @internal */\n    AbstractControl.prototype._updatePristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._updateTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /** @internal */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    /** @internal */\n    AbstractControl.prototype._setUpdateStrategy = function (opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    };\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    AbstractControl.prototype._parentMarkedDirty = function (onlySelf) {\n        var parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    };\n    return AbstractControl;\n}());\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events.\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nvar FormControl = /** @class */ (function (_super) {\n    __extends(FormControl, _super);\n    /**\n    * Creates a new `FormControl` instance.\n    *\n    * @param formState Initializes the control with an initial value,\n    * or an object that defines the initial value and disabled state.\n    *\n    * @param validatorOrOpts A synchronous validator function, or an array of\n    * such functions, or an `AbstractControlOptions` object that contains validation functions\n    * and a validation trigger.\n    *\n    * @param asyncValidator A single async validator or array of async validator functions\n    *\n    */\n    function FormControl(formState, validatorOrOpts, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        /** @internal */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    FormControl.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this.value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    FormControl.prototype.reset = function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    };\n    /**\n     * @internal\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * @internal\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * @internal\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * @internal\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * @internal\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /** @internal */\n    FormControl.prototype._syncPendingControls = function () {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    };\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nvar FormGroup = /** @class */ (function (_super) {\n    __extends(FormGroup, _super);\n    /**\n    * Creates a new `FormGroup` instance.\n    *\n    * @param controls A collection of child controls. The key for each child is the name\n    * under which it is registered.\n    *\n    * @param validatorOrOpts A synchronous validator function, or an array of\n    * such functions, or an `AbstractControlOptions` object that contains validation functions\n    * and a validation trigger.\n    *\n    * @param asyncValidator A single async validator or array of async validator functions\n    *\n    */\n    function FormGroup(controls, validatorOrOpts, asyncValidator) {\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     *\n     * @param name The control name to remove from the collection\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param name The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you excluding the value of a control.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    FormGroup.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    FormGroup.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    FormGroup.prototype.reset = function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    };\n    /** @internal */\n    FormGroup.prototype._syncPendingControls = function () {\n        var subtreeUpdated = this._reduceChildren(false, function (updated, child) {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    };\n    /** @internal */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /** @internal */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /** @internal */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /** @internal */\n    FormGroup.prototype._updateValue = function () { this.value = this._reduceValue(); };\n    /** @internal */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /** @internal */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._allControlsDisabled = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.controls)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var controlName = _c.value;\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /** @internal */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n  * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nvar FormArray = /** @class */ (function (_super) {\n    __extends(FormArray, _super);\n    /**\n    * Creates a new `FormArray` instance.\n    *\n    * @param controls An array of child controls. Each child control is given an index\n    * where it is registered.\n    *\n    * @param validatorOrOpts A synchronous validator function, or an array of\n    * such functions, or an `AbstractControlOptions` object that contains validation functions\n    * and a validation trigger.\n    *\n    * @param asyncValidator A single async validator or array of async validator functions\n    *\n    */\n    function FormArray(controls, validatorOrOpts, asyncValidator) {\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    FormArray.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    FormArray.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    FormArray.prototype.reset = function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    };\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    FormArray.prototype.clear = function () {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild(function (control) { return control._registerOnCollectionChange(function () { }); });\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    };\n    /** @internal */\n    FormArray.prototype._syncPendingControls = function () {\n        var subtreeUpdated = this.controls.reduce(function (updated, child) {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    };\n    /** @internal */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /** @internal */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /** @internal */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this.value =\n            this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n    };\n    /** @internal */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /** @internal */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /** @internal */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /** @internal */\n    FormArray.prototype._allControlsDisabled = function () {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this.controls), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var control = _c.value;\n                if (control.enabled)\n                    return false;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgForm; })\n};\nvar Éµ0 = function () { return Promise.resolve(null); };\nvar resolvedPromise = (Éµ0)();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Migrating from deprecated ngForm selector\n *\n * Support for using `ngForm` element selector has been deprecated in Angular v6 and will be removed\n * in Angular v9.\n *\n * This has been deprecated to keep selectors consistent with other core Angular selectors,\n * as element selectors are typically written in kebab-case.\n *\n * Now deprecated:\n * ```html\n * <ngForm #myForm=\"ngForm\">\n * ```\n *\n * After:\n * ```html\n * <ng-form #myForm=\"ngForm\">\n * ```\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nvar NgForm = /** @class */ (function (_super) {\n    __extends(NgForm, _super);\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        _this.submitted = false;\n        _this._directives = [];\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        _this.ngSubmit = new EventEmitter();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    /**\n     * @description\n     * Lifecycle method called after the view is initialized. For internal use only.\n     */\n    NgForm.prototype.ngAfterViewInit = function () { this._setUpdateStrategy(); };\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @description\n         * The directive instance.\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @description\n         * The internal `FormGroup` instance.\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @description\n         * Returns an array representing the path to this group. Because this directive\n         * always lives at the top level of a form, it is always an empty array.\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @description\n         * Returns a map of the controls in this group.\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            _this._directives.push(dir);\n        });\n    };\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(_this._directives, dir);\n        });\n    };\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            var group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var ctrl = _this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this.submitted = false;\n    };\n    NgForm.prototype._setUpdateStrategy = function () {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    };\n    /** @internal */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    };\n    __decorate([\n        Input('ngFormOptions'),\n        __metadata(\"design:type\", Object)\n    ], NgForm.prototype, \"options\", void 0);\n    NgForm = __decorate([\n        Directive({\n            selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,ng-form,[ngForm]',\n            providers: [formDirectiveProvider],\n            host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n            outputs: ['ngSubmit'],\n            exportAs: 'ngForm'\n        }),\n        __param(0, Optional()), __param(0, Self()), __param(0, Inject(NG_VALIDATORS)),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [Array, Array])\n    ], NgForm);\n    return NgForm;\n}(ControlContainer));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = /** @class */ (function () {\n    function TemplateDrivenErrors() {\n    }\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    TemplateDrivenErrors.ngFormWarning = function () {\n        console.warn(\"\\n    It looks like you're using 'ngForm'.\\n\\n    Support for using the 'ngForm' element selector has been deprecated in Angular v6 and will be removed\\n    in Angular v9.\\n\\n    Use 'ng-form' instead.\\n\\n    Before:\\n    <ngForm #myForm=\\\"ngForm\\\">\\n\\n    After:\\n    <ng-form #myForm=\\\"ngForm\\\">\\n    \");\n    };\n    return TemplateDrivenErrors;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * `InjectionToken` to provide to turn off the warning when using 'ngForm' deprecated selector.\n */\nvar NG_FORM_SELECTOR_WARNING = new InjectionToken('NgFormSelectorWarning');\n/**\n * This directive is solely used to display warnings when the deprecated `ngForm` selector is used.\n *\n * @deprecated in Angular v6 and will be removed in Angular v9.\n * @ngModule FormsModule\n * @publicApi\n */\nvar NgFormSelectorWarning = /** @class */ (function () {\n    function NgFormSelectorWarning(ngFormWarning) {\n        if (((!ngFormWarning || ngFormWarning === 'once') && !NgFormSelectorWarning_1._ngFormWarning) ||\n            ngFormWarning === 'always') {\n            TemplateDrivenErrors.ngFormWarning();\n            NgFormSelectorWarning_1._ngFormWarning = true;\n        }\n    }\n    NgFormSelectorWarning_1 = NgFormSelectorWarning;\n    var NgFormSelectorWarning_1;\n    /**\n     * Static property used to track whether the deprecation warning for this selector has been sent.\n     * Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    NgFormSelectorWarning._ngFormWarning = false;\n    NgFormSelectorWarning = NgFormSelectorWarning_1 = __decorate([\n        Directive({ selector: 'ngForm' }),\n        __param(0, Optional()), __param(0, Inject(NG_FORM_SELECTOR_WARNING)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgFormSelectorWarning);\n    return NgFormSelectorWarning;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nvar AbstractFormGroupDirective = /** @class */ (function (_super) {\n    __extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @description\n     * An internal callback method triggered on the instance after the inputs are set.\n     * Registers the group with its parent group.\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormGroup(this);\n    };\n    /**\n     * @description\n     * An internal callback method triggered before the instance is destroyed.\n     * Removes the group from its parent group.\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * @description\n         * The `FormGroup` bound to this directive.\n         */\n        get: function () { return this.formDirective.getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * @description\n         * The path to this group from the top-level directive.\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @description\n         * The synchronous validators registered with this group.\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @description\n         * The async validators registered with this group.\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgModelGroup; })\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nvar NgModelGroup = /** @class */ (function (_super) {\n    __extends(NgModelGroup, _super);\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    NgModelGroup_1 = NgModelGroup;\n    /** @internal */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup_1) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    var NgModelGroup_1;\n    __decorate([\n        Input('ngModelGroup'),\n        __metadata(\"design:type\", String)\n    ], NgModelGroup.prototype, \"name\", void 0);\n    NgModelGroup = NgModelGroup_1 = __decorate([\n        Directive({ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }),\n        __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [ControlContainer, Array, Array])\n    ], NgModelGroup);\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return NgModel; })\n};\nvar Éµ0$1 = function () { return Promise.resolve(null); };\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = (Éµ0$1)();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex: `#myVar=\"ngModel\"`).\n * You then access the control using the directive's `control` property,\n * but most properties used (like `valid` and `dirty`) fall through to the control anyway for direct access.\n * See a full list of properties directly available in `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel name attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. The name attribute is used\n * within a custom form component, and the name `@Input` property serves a different purpose.\n *\n * ```html\n * <form>\n *   <my-person-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-person-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nvar NgModel = /** @class */ (function (_super) {\n    __extends(NgModel, _super);\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.control = new FormControl();\n        /** @internal */\n        _this._registered = false;\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal\n     * use only.\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @description\n         * The top-level directive for this control if present, otherwise null.\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators\n         * registered with this directive.\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this\n         * directive.\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    NgModel.prototype._setUpControl = function () {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    NgModel.prototype._setUpdateStrategy = function () {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    };\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    };\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var disabledValue = changes['isDisabled'].currentValue;\n        var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], NgModel.prototype, \"name\", void 0);\n    __decorate([\n        Input('disabled'),\n        __metadata(\"design:type\", Boolean)\n    ], NgModel.prototype, \"isDisabled\", void 0);\n    __decorate([\n        Input('ngModel'),\n        __metadata(\"design:type\", Object)\n    ], NgModel.prototype, \"model\", void 0);\n    __decorate([\n        Input('ngModelOptions'),\n        __metadata(\"design:type\", Object)\n    ], NgModel.prototype, \"options\", void 0);\n    __decorate([\n        Output('ngModelChange'),\n        __metadata(\"design:type\", Object)\n    ], NgModel.prototype, \"update\", void 0);\n    NgModel = __decorate([\n        Directive({\n            selector: '[ngModel]:not([formControlName]):not([formControl])',\n            providers: [formControlBinding],\n            exportAs: 'ngModel'\n        }),\n        __param(0, Optional()), __param(0, Host()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __param(3, Optional()), __param(3, Self()), __param(3, Inject(NG_VALUE_ACCESSOR)),\n        __metadata(\"design:paramtypes\", [ControlContainer,\n            Array,\n            Array, Array])\n    ], NgModel);\n    return NgModel;\n}(NgControl));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nvar ÉµNgNoValidate = /** @class */ (function () {\n    function ÉµNgNoValidate() {\n    }\n    ÉµNgNoValidate = __decorate([\n        Directive({\n            selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n            host: { 'novalidate': '' },\n        })\n    ], ÉµNgNoValidate);\n    return ÉµNgNoValidate;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nvar NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlDirective; })\n};\n/**\n * @description\n * * Syncs a standalone `FormControl` instance to a form control element.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Registering a single form control\n *\n * The following examples shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * ### Use with ngModel\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and will be removed in Angular v7.\n *\n * Now deprecated:\n *\n * ```html\n * <input [formControl]=\"control\" [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * This has been deprecated for a few reasons. First, developers have found this pattern\n * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's\n * an input/output property named `ngModel` on the reactive form directive that simply\n * approximates (some of) its behavior. Specifically, it allows getting/setting the value\n * and intercepting value events. However, some of `ngModel`'s other features - like\n * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,\n * which has understandably caused some confusion.\n *\n * In addition, this pattern mixes template-driven and reactive forms strategies, which\n * we generally don't recommend because it doesn't take advantage of the full benefits of\n * either strategy. Setting the value in the template violates the template-agnostic\n * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in\n * the class removes the convenience of defining forms in the template.\n *\n * To update your code before v7, you'll want to decide whether to stick with reactive form\n * directives (and get/set values using reactive forms patterns) or switch over to\n * template-driven directives.\n *\n * After (choice 1 - use reactive forms):\n *\n * ```html\n * <input [formControl]=\"control\">\n * ```\n *\n * ```ts\n * this.control.setValue('some value');\n * ```\n *\n * After (choice 2 - use template-driven forms):\n *\n * ```html\n * <input [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * By default, when you use this pattern, you will see a deprecation warning once in dev\n * mode. You can choose to silence this warning by providing a config for\n * `ReactiveFormsModule` at import time:\n *\n * ```ts\n * imports: [\n *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});\n * ]\n * ```\n *\n * Alternatively, you can choose to surface a separate warning for each instance of this\n * pattern with a config value of `\"always\"`. This may help to track down where in the code\n * the pattern is being used as the code is being updated.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nvar FormControlDirective = /** @class */ (function (_super) {\n    __extends(FormControlDirective, _super);\n    function FormControlDirective(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        var _this = _super.call(this) || this;\n        _this._ngModelWarningConfig = _ngModelWarningConfig;\n        /** @deprecated as of v6 */\n        _this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        _this._ngModelWarningSent = false;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    FormControlDirective_1 = FormControlDirective;\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @description\n         * Triggers a warning that this input should not be used with reactive forms.\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective_1, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators\n         * registered with this directive.\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this\n         * directive.\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @description\n         * The `FormControl` bound to this directive.\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    var FormControlDirective_1;\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    FormControlDirective._ngModelWarningSentOnce = false;\n    __decorate([\n        Input('formControl'),\n        __metadata(\"design:type\", FormControl)\n    ], FormControlDirective.prototype, \"form\", void 0);\n    __decorate([\n        Input('disabled'),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], FormControlDirective.prototype, \"isDisabled\", null);\n    __decorate([\n        Input('ngModel'),\n        __metadata(\"design:type\", Object)\n    ], FormControlDirective.prototype, \"model\", void 0);\n    __decorate([\n        Output('ngModelChange'),\n        __metadata(\"design:type\", Object)\n    ], FormControlDirective.prototype, \"update\", void 0);\n    FormControlDirective = FormControlDirective_1 = __decorate([\n        Directive({ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }),\n        __param(0, Optional()), __param(0, Self()), __param(0, Inject(NG_VALIDATORS)),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_ASYNC_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_VALUE_ACCESSOR)),\n        __param(3, Optional()), __param(3, Inject(NG_MODEL_WITH_FORM_CONTROL_WARNING)),\n        __metadata(\"design:paramtypes\", [Array,\n            Array, Array, Object])\n    ], FormControlDirective);\n    return FormControlDirective;\n}(NgControl));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupDirective; })\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nvar FormGroupDirective = /** @class */ (function (_super) {\n    __extends(FormGroupDirective, _super);\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        _this.submitted = false;\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        _this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        _this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        _this.ngSubmit = new EventEmitter();\n        return _this;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @description\n         * Returns this directive's instance.\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @description\n         * Returns the `FormGroup` bound to this directive.\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @description\n         * Returns an array representing the path to this group. Because this directive\n         * always lives at the top level of a form, it always an empty array.\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { removeDir(this.directives, dir); };\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * No-op method to remove the form group.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n    /**\n     * Adds a new `FormArrayName` directive instance to the form.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * No-op method to remove the form array.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    };\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this.submitted = false;\n    };\n    /** @internal */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var newCtrl = _this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir.control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    FormGroupDirective.prototype._updateValidators = function () {\n        var sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([this.form.validator, sync]);\n        var async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n    };\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    __decorate([\n        Input('formGroup'),\n        __metadata(\"design:type\", FormGroup)\n    ], FormGroupDirective.prototype, \"form\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], FormGroupDirective.prototype, \"ngSubmit\", void 0);\n    FormGroupDirective = __decorate([\n        Directive({\n            selector: '[formGroup]',\n            providers: [formDirectiveProvider$1],\n            host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n            exportAs: 'ngForm'\n        }),\n        __param(0, Optional()), __param(0, Self()), __param(0, Inject(NG_VALIDATORS)),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [Array, Array])\n    ], FormGroupDirective);\n    return FormGroupDirective;\n}(ControlContainer));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupName; })\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nvar FormGroupName = /** @class */ (function (_super) {\n    __extends(FormGroupName, _super);\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /** @internal */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    __decorate([\n        Input('formGroupName'),\n        __metadata(\"design:type\", String)\n    ], FormGroupName.prototype, \"name\", void 0);\n    FormGroupName = __decorate([\n        Directive({ selector: '[formGroupName]', providers: [formGroupNameProvider] }),\n        __param(0, Optional()), __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [ControlContainer, Array, Array])\n    ], FormGroupName);\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormArrayName; })\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nvar FormArrayName = /** @class */ (function (_super) {\n    __extends(FormArrayName, _super);\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     *\n     * @throws If the directive does not have a valid parent.\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    };\n    /**\n     * @description\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @description\n         * The `FormArray` bound to this directive.\n         */\n        get: function () { return this.formDirective.getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get: function () {\n            return this._parent ? this._parent.formDirective : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators registered with this\n         * directive.\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this directive.\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    __decorate([\n        Input('formArrayName'),\n        __metadata(\"design:type\", String)\n    ], FormArrayName.prototype, \"name\", void 0);\n    FormArrayName = __decorate([\n        Directive({ selector: '[formArrayName]', providers: [formArrayNameProvider] }),\n        __param(0, Optional()), __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [ControlContainer, Array, Array])\n    ], FormArrayName);\n    return FormArrayName;\n}(ControlContainer));\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlName; })\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and will be removed in Angular v7.\n *\n * Now deprecated:\n *\n * ```html\n * <form [formGroup]=\"form\">\n *   <input formControlName=\"first\" [(ngModel)]=\"value\">\n * </form>\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * This has been deprecated for a few reasons. First, developers have found this pattern\n * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's\n * an input/output property named `ngModel` on the reactive form directive that simply\n * approximates (some of) its behavior. Specifically, it allows getting/setting the value\n * and intercepting value events. However, some of `ngModel`'s other features - like\n * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,\n * which has understandably caused some confusion.\n *\n * In addition, this pattern mixes template-driven and reactive forms strategies, which\n * we generally don't recommend because it doesn't take advantage of the full benefits of\n * either strategy. Setting the value in the template violates the template-agnostic\n * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in\n * the class removes the convenience of defining forms in the template.\n *\n * To update your code before v7, you'll want to decide whether to stick with reactive form\n * directives (and get/set values using reactive forms patterns) or switch over to\n * template-driven directives.\n *\n * After (choice 1 - use reactive forms):\n *\n * ```html\n * <form [formGroup]=\"form\">\n *   <input formControlName=\"first\">\n * </form>\n * ```\n *\n * ```ts\n * this.form.get('first').setValue('some value');\n * ```\n *\n * After (choice 2 - use template-driven forms):\n *\n * ```html\n * <input [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * By default, when you use this pattern, you will see a deprecation warning once in dev\n * mode. You can choose to silence this warning by providing a config for\n * `ReactiveFormsModule` at import time:\n *\n * ```ts\n * imports: [\n *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})\n * ]\n * ```\n *\n * Alternatively, you can choose to surface a separate warning for each instance of this\n * pattern with a config value of `\"always\"`. This may help to track down where in the code\n * the pattern is being used as the code is being updated.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nvar FormControlName = /** @class */ (function (_super) {\n    __extends(FormControlName, _super);\n    function FormControlName(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        var _this = _super.call(this) || this;\n        _this._ngModelWarningConfig = _ngModelWarningConfig;\n        _this._added = false;\n        /** @deprecated as of v6 */\n        _this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        _this._ngModelWarningSent = false;\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    FormControlName_1 = FormControlName;\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @description\n         * Triggers a warning that this input should not be used with reactive forms.\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName_1, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators\n         * registered with this directive.\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this\n         * directive.\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    };\n    var FormControlName_1;\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    FormControlName._ngModelWarningSentOnce = false;\n    __decorate([\n        Input('formControlName'),\n        __metadata(\"design:type\", String)\n    ], FormControlName.prototype, \"name\", void 0);\n    __decorate([\n        Input('disabled'),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], FormControlName.prototype, \"isDisabled\", null);\n    __decorate([\n        Input('ngModel'),\n        __metadata(\"design:type\", Object)\n    ], FormControlName.prototype, \"model\", void 0);\n    __decorate([\n        Output('ngModelChange'),\n        __metadata(\"design:type\", Object)\n    ], FormControlName.prototype, \"update\", void 0);\n    FormControlName = FormControlName_1 = __decorate([\n        Directive({ selector: '[formControlName]', providers: [controlNameBinding] }),\n        __param(0, Optional()), __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __param(3, Optional()), __param(3, Self()), __param(3, Inject(NG_VALUE_ACCESSOR)),\n        __param(4, Optional()), __param(4, Inject(NG_MODEL_WITH_FORM_CONTROL_WARNING)),\n        __metadata(\"design:paramtypes\", [ControlContainer,\n            Array,\n            Array, Array, Object])\n    ], FormControlName);\n    return FormControlName;\n}(NgControl));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return RequiredValidator; }),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nvar RequiredValidator = /** @class */ (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @description\n         * Tracks changes to the required attribute bound to this directive.\n         */\n        get: function () { return this._required; },\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    RequiredValidator.prototype.validate = function (control) {\n        return this.required ? Validators.required(control) : null;\n    };\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RequiredValidator.prototype, \"required\", null);\n    RequiredValidator = __decorate([\n        Directive({\n            selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n            providers: [REQUIRED_VALIDATOR],\n            host: { '[attr.required]': 'required ? \"\" : null' }\n        })\n    ], RequiredValidator);\n    return RequiredValidator;\n}());\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nvar CheckboxRequiredValidator = /** @class */ (function (_super) {\n    __extends(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @description\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    CheckboxRequiredValidator.prototype.validate = function (control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    };\n    CheckboxRequiredValidator = __decorate([\n        Directive({\n            selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n            providers: [CHECKBOX_REQUIRED_VALIDATOR],\n            host: { '[attr.required]': 'required ? \"\" : null' }\n        })\n    ], CheckboxRequiredValidator);\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nvar EmailValidator = /** @class */ (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @description\n         * Tracks changes to the email attribute bound to this directive.\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @description\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    EmailValidator.prototype.validate = function (control) {\n        return this._enabled ? Validators.email(control) : null;\n    };\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], EmailValidator.prototype, \"email\", null);\n    EmailValidator = __decorate([\n        Directive({\n            selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n            providers: [EMAIL_VALIDATOR]\n        })\n    ], EmailValidator);\n    return EmailValidator;\n}());\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` mult-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar MinLengthValidator = /** @class */ (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @description\n     * Method that validates whether the value meets a minimum length\n     * requirement. Returns the validation result if enabled, otherwise null.\n     */\n    MinLengthValidator.prototype.validate = function (control) {\n        return this.minlength == null ? null : this._validator(control);\n    };\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], MinLengthValidator.prototype, \"minlength\", void 0);\n    MinLengthValidator = __decorate([\n        Directive({\n            selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n            providers: [MIN_LENGTH_VALIDATOR],\n            host: { '[attr.minlength]': 'minlength ? minlength : null' }\n        })\n    ], MinLengthValidator);\n    return MinLengthValidator;\n}());\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar MaxLengthValidator = /** @class */ (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @description\n     * Method that validates whether the value exceeds\n     * the maximum length requirement.\n     */\n    MaxLengthValidator.prototype.validate = function (control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    };\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], MaxLengthValidator.prototype, \"maxlength\", void 0);\n    MaxLengthValidator = __decorate([\n        Directive({\n            selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n            providers: [MAX_LENGTH_VALIDATOR],\n            host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n        })\n    ], MaxLengthValidator);\n    return MaxLengthValidator;\n}());\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nvar PatternValidator = /** @class */ (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @description\n     * Method that validates whether the value matches the\n     * the pattern requirement.\n     */\n    PatternValidator.prototype.validate = function (control) { return this._validator(control); };\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PatternValidator.prototype, \"pattern\", void 0);\n    PatternValidator = __decorate([\n        Directive({\n            selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n            providers: [PATTERN_VALIDATOR],\n            host: { '[attr.pattern]': 'pattern ? pattern : null' }\n        })\n    ], PatternValidator);\n    return PatternValidator;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    ÉµNgNoValidate,\n    NgSelectOption,\n    ÉµNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm, NgFormSelectorWarning];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar ÉµInternalFormsSharedModule = /** @class */ (function () {\n    function ÉµInternalFormsSharedModule() {\n    }\n    ÉµInternalFormsSharedModule = __decorate([\n        NgModule({\n            declarations: SHARED_FORM_DIRECTIVES,\n            exports: SHARED_FORM_DIRECTIVES,\n        })\n    ], ÉµInternalFormsSharedModule);\n    return ÉµInternalFormsSharedModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nvar FormBuilder = /** @class */ (function () {\n    function FormBuilder() {\n    }\n    /**\n     * @description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormGroup`. The object can\n     * have two shapes:\n     *\n     * 1) `AbstractControlOptions` object (preferred), which consists of:\n     * * `validators`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidators`: A single async validator or array of async validator functions\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n     * submit')\n     *\n     * 2) Legacy configuration object, which consists of:\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     */\n    FormBuilder.prototype.group = function (controlsConfig, options) {\n        if (options === void 0) { options = null; }\n        var controls = this._reduceControls(controlsConfig);\n        var validators = null;\n        var asyncValidators = null;\n        var updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators: asyncValidators, updateOn: updateOn, validators: validators });\n    };\n    /**\n     * @description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    FormBuilder.prototype.control = function (formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    };\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validatorOrOpts, asyncValidator) {\n        var _this = this;\n        var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    };\n    /** @internal */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /** @internal */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var value = controlConfig[0];\n            var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    FormBuilder = __decorate([\n        Injectable()\n    ], FormBuilder);\n    return FormBuilder;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('8.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nvar FormsModule = /** @class */ (function () {\n    function FormsModule() {\n    }\n    FormsModule_1 = FormsModule;\n    /**\n     * @description\n     * Provides options for configuring the template-driven forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnDeprecatedNgFormSelector` Configures when to emit a warning when the deprecated\n     * `ngForm` selector is used.\n     */\n    FormsModule.withConfig = function (opts) {\n        return {\n            ngModule: FormsModule_1,\n            providers: [{ provide: NG_FORM_SELECTOR_WARNING, useValue: opts.warnOnDeprecatedNgFormSelector }]\n        };\n    };\n    var FormsModule_1;\n    FormsModule = FormsModule_1 = __decorate([\n        NgModule({\n            declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n            providers: [RadioControlRegistry],\n            exports: [ÉµInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n        })\n    ], FormsModule);\n    return FormsModule;\n}());\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n * @see [Forms](guide/reactive-forms)\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nvar ReactiveFormsModule = /** @class */ (function () {\n    function ReactiveFormsModule() {\n    }\n    ReactiveFormsModule_1 = ReactiveFormsModule;\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     */\n    ReactiveFormsModule.withConfig = function (opts) {\n        return {\n            ngModule: ReactiveFormsModule_1,\n            providers: [{\n                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n                    useValue: opts.warnOnNgModelWithFormControl\n                }]\n        };\n    };\n    var ReactiveFormsModule_1;\n    ReactiveFormsModule = ReactiveFormsModule_1 = __decorate([\n        NgModule({\n            declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n            providers: [FormBuilder, RadioControlRegistry],\n            exports: [ÉµInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n        })\n    ], ReactiveFormsModule);\n    return ReactiveFormsModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ÉµInternalFormsSharedModule as Éµangular_packages_forms_forms_d, ÉµInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES as Éµangular_packages_forms_forms_c, SHARED_FORM_DIRECTIVES as Éµangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as Éµangular_packages_forms_forms_b, CHECKBOX_VALUE_ACCESSOR as Éµangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as Éµangular_packages_forms_forms_f, AbstractControlStatus as Éµangular_packages_forms_forms_g, ngControlStatusHost as Éµangular_packages_forms_forms_h, formDirectiveProvider as Éµangular_packages_forms_forms_i, NG_FORM_SELECTOR_WARNING as Éµangular_packages_forms_forms_j, formControlBinding as Éµangular_packages_forms_forms_k, modelGroupProvider as Éµangular_packages_forms_forms_l, ÉµNgNoValidate as Éµangular_packages_forms_forms_z, ÉµNgNoValidate, NUMBER_VALUE_ACCESSOR as Éµangular_packages_forms_forms_m, RADIO_VALUE_ACCESSOR as Éµangular_packages_forms_forms_n, RadioControlRegistry as Éµangular_packages_forms_forms_o, RANGE_VALUE_ACCESSOR as Éµangular_packages_forms_forms_p, NG_MODEL_WITH_FORM_CONTROL_WARNING as Éµangular_packages_forms_forms_q, formControlBinding$1 as Éµangular_packages_forms_forms_r, controlNameBinding as Éµangular_packages_forms_forms_s, formDirectiveProvider$1 as Éµangular_packages_forms_forms_t, formArrayNameProvider as Éµangular_packages_forms_forms_v, formGroupNameProvider as Éµangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as Éµangular_packages_forms_forms_w, ÉµNgSelectMultipleOption as Éµangular_packages_forms_forms_y, ÉµNgSelectMultipleOption, SELECT_MULTIPLE_VALUE_ACCESSOR as Éµangular_packages_forms_forms_x, CHECKBOX_REQUIRED_VALIDATOR as Éµangular_packages_forms_forms_bb, EMAIL_VALIDATOR as Éµangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as Éµangular_packages_forms_forms_be, MIN_LENGTH_VALIDATOR as Éµangular_packages_forms_forms_bd, PATTERN_VALIDATOR as Éµangular_packages_forms_forms_bf, REQUIRED_VALIDATOR as Éµangular_packages_forms_forms_ba, AbstractControlDirective, AbstractFormGroupDirective, CheckboxControlValueAccessor, ControlContainer, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE, DefaultValueAccessor, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgFormSelectorWarning, NgModel, NgModelGroup, NumberValueAccessor, RadioControlValueAccessor, RangeValueAccessor, FormControlDirective, FormControlName, FormGroupDirective, FormArrayName, FormGroupName, NgSelectOption, SelectControlValueAccessor, SelectMultipleControlValueAccessor, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, FormBuilder, AbstractControl, FormArray, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators, VERSION, FormsModule, ReactiveFormsModule };\n//# sourceMappingURL=forms.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.module\";\nimport * as i2 from \"./app.component\";\nimport * as i3 from \"../../node_modules/@angular/router/router.ngfactory\";\nimport * as i4 from \"./product-list/product-list.component.ngfactory\";\nimport * as i5 from \"./product-details/product-details.component.ngfactory\";\nimport * as i6 from \"./app.component.ngfactory\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/router\";\nimport * as i11 from \"./product-list/product-list.component\";\nimport * as i12 from \"./product-details/product-details.component\";\nvar AppModuleNgFactory = i0.Éµcmf(i1.AppModule, [i2.AppComponent], function (_l) { return i0.Éµmod([i0.Éµmpd(512, i0.ComponentFactoryResolver, i0.ÉµCodegenComponentFactoryResolver, [[8, [i3.Éµangular_packages_router_router_lNgFactory, i4.ProductListComponentNgFactory, i5.ProductDetailsComponentNgFactory, i6.AppComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.Éµmpd(5120, i0.LOCALE_ID, i0.Éµangular_packages_core_core_p, [[3, i0.LOCALE_ID]]), i0.Éµmpd(4608, i7.NgLocalization, i7.NgLocaleLocalization, [i0.LOCALE_ID, [2, i7.Éµangular_packages_common_common_a]]), i0.Éµmpd(5120, i0.Éµangular_packages_core_core_ba, i0.Éµangular_packages_core_core_r, [i0.NgZone]), i0.Éµmpd(5120, i0.APP_ID, i0.Éµangular_packages_core_core_f, []), i0.Éµmpd(5120, i0.IterableDiffers, i0.Éµangular_packages_core_core_n, []), i0.Éµmpd(5120, i0.KeyValueDiffers, i0.Éµangular_packages_core_core_o, []), i0.Éµmpd(4608, i8.DomSanitizer, i8.ÉµDomSanitizerImpl, [i7.DOCUMENT]), i0.Éµmpd(6144, i0.Sanitizer, null, [i8.DomSanitizer]), i0.Éµmpd(4608, i8.HAMMER_GESTURE_CONFIG, i8.HammerGestureConfig, []), i0.Éµmpd(5120, i8.EVENT_MANAGER_PLUGINS, function (p0_0, p0_1, p0_2, p1_0, p2_0, p2_1, p2_2, p2_3) { return [new i8.ÉµDomEventsPlugin(p0_0, p0_1, p0_2), new i8.ÉµKeyEventsPlugin(p1_0), new i8.ÉµHammerGesturesPlugin(p2_0, p2_1, p2_2, p2_3)]; }, [i7.DOCUMENT, i0.NgZone, i0.PLATFORM_ID, i7.DOCUMENT, i7.DOCUMENT, i8.HAMMER_GESTURE_CONFIG, i0.ÉµConsole, [2, i8.HAMMER_LOADER]]), i0.Éµmpd(4608, i8.EventManager, i8.EventManager, [i8.EVENT_MANAGER_PLUGINS, i0.NgZone]), i0.Éµmpd(135680, i8.ÉµDomSharedStylesHost, i8.ÉµDomSharedStylesHost, [i7.DOCUMENT]), i0.Éµmpd(4608, i8.ÉµDomRendererFactory2, i8.ÉµDomRendererFactory2, [i8.EventManager, i8.ÉµDomSharedStylesHost, i0.APP_ID]), i0.Éµmpd(6144, i0.RendererFactory2, null, [i8.ÉµDomRendererFactory2]), i0.Éµmpd(6144, i8.ÉµSharedStylesHost, null, [i8.ÉµDomSharedStylesHost]), i0.Éµmpd(4608, i0.Testability, i0.Testability, [i0.NgZone]), i0.Éµmpd(4608, i9.FormBuilder, i9.FormBuilder, []), i0.Éµmpd(4608, i9.Éµangular_packages_forms_forms_o, i9.Éµangular_packages_forms_forms_o, []), i0.Éµmpd(5120, i10.ActivatedRoute, i10.Éµangular_packages_router_router_g, [i10.Router]), i0.Éµmpd(4608, i10.NoPreloading, i10.NoPreloading, []), i0.Éµmpd(6144, i10.PreloadingStrategy, null, [i10.NoPreloading]), i0.Éµmpd(135680, i10.RouterPreloader, i10.RouterPreloader, [i10.Router, i0.NgModuleFactoryLoader, i0.Compiler, i0.Injector, i10.PreloadingStrategy]), i0.Éµmpd(4608, i10.PreloadAllModules, i10.PreloadAllModules, []), i0.Éµmpd(5120, i10.Éµangular_packages_router_router_o, i10.Éµangular_packages_router_router_c, [i10.Router, i7.ViewportScroller, i10.ROUTER_CONFIGURATION]), i0.Éµmpd(5120, i10.ROUTER_INITIALIZER, i10.Éµangular_packages_router_router_j, [i10.Éµangular_packages_router_router_h]), i0.Éµmpd(5120, i0.APP_BOOTSTRAP_LISTENER, function (p0_0) { return [p0_0]; }, [i10.ROUTER_INITIALIZER]), i0.Éµmpd(1073742336, i7.CommonModule, i7.CommonModule, []), i0.Éµmpd(1024, i0.ErrorHandler, i8.Éµangular_packages_platform_browser_platform_browser_a, []), i0.Éµmpd(1024, i0.NgProbeToken, function () { return [i10.Éµangular_packages_router_router_b()]; }, []), i0.Éµmpd(512, i10.Éµangular_packages_router_router_h, i10.Éµangular_packages_router_router_h, [i0.Injector]), i0.Éµmpd(1024, i0.APP_INITIALIZER, function (p0_0, p1_0) { return [i8.Éµangular_packages_platform_browser_platform_browser_j(p0_0), i10.Éµangular_packages_router_router_i(p1_0)]; }, [[2, i0.NgProbeToken], i10.Éµangular_packages_router_router_h]), i0.Éµmpd(512, i0.ApplicationInitStatus, i0.ApplicationInitStatus, [[2, i0.APP_INITIALIZER]]), i0.Éµmpd(131584, i0.ApplicationRef, i0.ApplicationRef, [i0.NgZone, i0.ÉµConsole, i0.Injector, i0.ErrorHandler, i0.ComponentFactoryResolver, i0.ApplicationInitStatus]), i0.Éµmpd(1073742336, i0.ApplicationModule, i0.ApplicationModule, [i0.ApplicationRef]), i0.Éµmpd(1073742336, i8.BrowserModule, i8.BrowserModule, [[3, i8.BrowserModule]]), i0.Éµmpd(1073742336, i9.Éµangular_packages_forms_forms_d, i9.Éµangular_packages_forms_forms_d, []), i0.Éµmpd(1073742336, i9.ReactiveFormsModule, i9.ReactiveFormsModule, []), i0.Éµmpd(1024, i10.Éµangular_packages_router_router_a, i10.Éµangular_packages_router_router_e, [[3, i10.Router]]), i0.Éµmpd(512, i10.UrlSerializer, i10.DefaultUrlSerializer, []), i0.Éµmpd(512, i10.ChildrenOutletContexts, i10.ChildrenOutletContexts, []), i0.Éµmpd(256, i10.ROUTER_CONFIGURATION, {}, []), i0.Éµmpd(1024, i7.LocationStrategy, i10.Éµangular_packages_router_router_d, [i7.PlatformLocation, [2, i7.APP_BASE_HREF], i10.ROUTER_CONFIGURATION]), i0.Éµmpd(512, i7.Location, i7.Location, [i7.LocationStrategy, i7.PlatformLocation]), i0.Éµmpd(512, i0.Compiler, i0.Compiler, []), i0.Éµmpd(512, i0.NgModuleFactoryLoader, i0.SystemJsNgModuleLoader, [i0.Compiler, [2, i0.SystemJsNgModuleLoaderConfig]]), i0.Éµmpd(1024, i10.ROUTES, function () { return [[{ path: \"\", component: i11.ProductListComponent }, { path: \"products/:productId\", component: i12.ProductDetailsComponent }]]; }, []), i0.Éµmpd(1024, i10.Router, i10.Éµangular_packages_router_router_f, [i0.ApplicationRef, i10.UrlSerializer, i10.ChildrenOutletContexts, i7.Location, i0.Injector, i0.NgModuleFactoryLoader, i0.Compiler, i10.ROUTES, i10.ROUTER_CONFIGURATION, [2, i10.UrlHandlingStrategy], [2, i10.RouteReuseStrategy]]), i0.Éµmpd(1073742336, i10.RouterModule, i10.RouterModule, [[2, i10.Éµangular_packages_router_router_a], [2, i10.Router]]), i0.Éµmpd(1073742336, i1.AppModule, i1.AppModule, []), i0.Éµmpd(256, i0.ÉµAPP_ROOT, true, [])]); });\nexport { AppModuleNgFactory as AppModuleNgFactory };\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { environment } from './environments/environment';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":""}